ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"screen_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.screen_RXISR,"ax",%progbits
  20              		.align	2
  21              		.global	screen_RXISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	screen_RXISR, %function
  25              	screen_RXISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\screen_INT.c"
   1:Generated_Source\PSoC5/screen_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/screen_INT.c **** * File Name: screenINT.c
   3:Generated_Source\PSoC5/screen_INT.c **** * Version 2.50
   4:Generated_Source\PSoC5/screen_INT.c **** *
   5:Generated_Source\PSoC5/screen_INT.c **** * Description:
   6:Generated_Source\PSoC5/screen_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:Generated_Source\PSoC5/screen_INT.c **** *
   8:Generated_Source\PSoC5/screen_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC5/screen_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC5/screen_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC5/screen_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC5/screen_INT.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC5/screen_INT.c **** *******************************************************************************/
  14:Generated_Source\PSoC5/screen_INT.c **** 
  15:Generated_Source\PSoC5/screen_INT.c **** #include "screen.h"
  16:Generated_Source\PSoC5/screen_INT.c **** #include "cyapicallbacks.h"
  17:Generated_Source\PSoC5/screen_INT.c **** 
  18:Generated_Source\PSoC5/screen_INT.c **** 
  19:Generated_Source\PSoC5/screen_INT.c **** /***************************************
  20:Generated_Source\PSoC5/screen_INT.c **** * Custom Declarations
  21:Generated_Source\PSoC5/screen_INT.c **** ***************************************/
  22:Generated_Source\PSoC5/screen_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  23:Generated_Source\PSoC5/screen_INT.c **** 
  24:Generated_Source\PSoC5/screen_INT.c **** /* `#END` */
  25:Generated_Source\PSoC5/screen_INT.c **** 
  26:Generated_Source\PSoC5/screen_INT.c **** #if (screen_RX_INTERRUPT_ENABLED && (screen_RX_ENABLED || screen_HD_ENABLED))
  27:Generated_Source\PSoC5/screen_INT.c ****     /*******************************************************************************
  28:Generated_Source\PSoC5/screen_INT.c ****     * Function Name: screen_RXISR
  29:Generated_Source\PSoC5/screen_INT.c ****     ********************************************************************************
  30:Generated_Source\PSoC5/screen_INT.c ****     *
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 2


  31:Generated_Source\PSoC5/screen_INT.c ****     * Summary:
  32:Generated_Source\PSoC5/screen_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
  33:Generated_Source\PSoC5/screen_INT.c ****     *
  34:Generated_Source\PSoC5/screen_INT.c ****     * Parameters:
  35:Generated_Source\PSoC5/screen_INT.c ****     *  None.
  36:Generated_Source\PSoC5/screen_INT.c ****     *
  37:Generated_Source\PSoC5/screen_INT.c ****     * Return:
  38:Generated_Source\PSoC5/screen_INT.c ****     *  None.
  39:Generated_Source\PSoC5/screen_INT.c ****     *
  40:Generated_Source\PSoC5/screen_INT.c ****     * Global Variables:
  41:Generated_Source\PSoC5/screen_INT.c ****     *  screen_rxBuffer - RAM buffer pointer for save received data.
  42:Generated_Source\PSoC5/screen_INT.c ****     *  screen_rxBufferWrite - cyclic index for write to rxBuffer,
  43:Generated_Source\PSoC5/screen_INT.c ****     *     increments after each byte saved to buffer.
  44:Generated_Source\PSoC5/screen_INT.c ****     *  screen_rxBufferRead - cyclic index for read from rxBuffer,
  45:Generated_Source\PSoC5/screen_INT.c ****     *     checked to detect overflow condition.
  46:Generated_Source\PSoC5/screen_INT.c ****     *  screen_rxBufferOverflow - software overflow flag. Set to one
  47:Generated_Source\PSoC5/screen_INT.c ****     *     when screen_rxBufferWrite index overtakes
  48:Generated_Source\PSoC5/screen_INT.c ****     *     screen_rxBufferRead index.
  49:Generated_Source\PSoC5/screen_INT.c ****     *  screen_rxBufferLoopDetect - additional variable to detect overflow.
  50:Generated_Source\PSoC5/screen_INT.c ****     *     Set to one when screen_rxBufferWrite is equal to
  51:Generated_Source\PSoC5/screen_INT.c ****     *    screen_rxBufferRead
  52:Generated_Source\PSoC5/screen_INT.c ****     *  screen_rxAddressMode - this variable contains the Address mode,
  53:Generated_Source\PSoC5/screen_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  54:Generated_Source\PSoC5/screen_INT.c ****     *  screen_rxAddressDetected - set to 1 when correct address received,
  55:Generated_Source\PSoC5/screen_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  56:Generated_Source\PSoC5/screen_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  57:Generated_Source\PSoC5/screen_INT.c ****     *
  58:Generated_Source\PSoC5/screen_INT.c ****     *******************************************************************************/
  59:Generated_Source\PSoC5/screen_INT.c ****     CY_ISR(screen_RXISR)
  60:Generated_Source\PSoC5/screen_INT.c ****     {
  28              		.loc 1 60 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L6:
  61:Generated_Source\PSoC5/screen_INT.c ****         uint8 readData;
  62:Generated_Source\PSoC5/screen_INT.c ****         uint8 readStatus;
  63:Generated_Source\PSoC5/screen_INT.c ****         uint8 increment_pointer = 0u;
  64:Generated_Source\PSoC5/screen_INT.c **** 
  65:Generated_Source\PSoC5/screen_INT.c ****     #if(CY_PSOC3)
  66:Generated_Source\PSoC5/screen_INT.c ****         uint8 int_en;
  67:Generated_Source\PSoC5/screen_INT.c ****     #endif /* (CY_PSOC3) */
  68:Generated_Source\PSoC5/screen_INT.c **** 
  69:Generated_Source\PSoC5/screen_INT.c ****     #ifdef screen_RXISR_ENTRY_CALLBACK
  70:Generated_Source\PSoC5/screen_INT.c ****         screen_RXISR_EntryCallback();
  71:Generated_Source\PSoC5/screen_INT.c ****     #endif /* screen_RXISR_ENTRY_CALLBACK */
  72:Generated_Source\PSoC5/screen_INT.c **** 
  73:Generated_Source\PSoC5/screen_INT.c ****         /* User code required at start of ISR */
  74:Generated_Source\PSoC5/screen_INT.c ****         /* `#START screen_RXISR_START` */
  75:Generated_Source\PSoC5/screen_INT.c **** 
  76:Generated_Source\PSoC5/screen_INT.c ****         /* `#END` */
  77:Generated_Source\PSoC5/screen_INT.c **** 
  78:Generated_Source\PSoC5/screen_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  79:Generated_Source\PSoC5/screen_INT.c ****         int_en = EA;
  80:Generated_Source\PSoC5/screen_INT.c ****         CyGlobalIntEnable;
  81:Generated_Source\PSoC5/screen_INT.c ****     #endif /* (CY_PSOC3) */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 3


  82:Generated_Source\PSoC5/screen_INT.c **** 
  83:Generated_Source\PSoC5/screen_INT.c ****         do
  84:Generated_Source\PSoC5/screen_INT.c ****         {
  85:Generated_Source\PSoC5/screen_INT.c ****             /* Read receiver status register */
  86:Generated_Source\PSoC5/screen_INT.c ****             readStatus = screen_RXSTATUS_REG;
  34              		.loc 1 86 0
  35 0000 1D4B     		ldr	r3, .L7
  36 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  37 0004 DBB2     		uxtb	r3, r3
  38              	.LVL0:
  87:Generated_Source\PSoC5/screen_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
  88:Generated_Source\PSoC5/screen_INT.c ****             *  of the user code in screen_RXISR_ERROR` section. 
  89:Generated_Source\PSoC5/screen_INT.c ****             */
  90:Generated_Source\PSoC5/screen_INT.c ****             readData = readStatus;
  91:Generated_Source\PSoC5/screen_INT.c **** 
  92:Generated_Source\PSoC5/screen_INT.c ****             if((readStatus & (screen_RX_STS_BREAK | 
  39              		.loc 1 92 0
  40 0006 13F01E0F 		tst	r3, #30
  41 000a 05D0     		beq	.L2
  93:Generated_Source\PSoC5/screen_INT.c ****                             screen_RX_STS_PAR_ERROR |
  94:Generated_Source\PSoC5/screen_INT.c ****                             screen_RX_STS_STOP_ERROR | 
  95:Generated_Source\PSoC5/screen_INT.c ****                             screen_RX_STS_OVERRUN)) != 0u)
  96:Generated_Source\PSoC5/screen_INT.c ****             {
  97:Generated_Source\PSoC5/screen_INT.c ****                 /* ERROR handling. */
  98:Generated_Source\PSoC5/screen_INT.c ****                 screen_errorStatus |= readStatus & ( screen_RX_STS_BREAK | 
  42              		.loc 1 98 0
  43 000c 1B48     		ldr	r0, .L7+4
  44 000e 03F01E02 		and	r2, r3, #30
  45 0012 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
  46 0014 0A43     		orrs	r2, r2, r1
  47 0016 0270     		strb	r2, [r0]
  48              	.L2:
  49 0018 03F02003 		and	r3, r3, #32
  50              	.LVL1:
  99:Generated_Source\PSoC5/screen_INT.c ****                                                             screen_RX_STS_PAR_ERROR | 
 100:Generated_Source\PSoC5/screen_INT.c ****                                                             screen_RX_STS_STOP_ERROR | 
 101:Generated_Source\PSoC5/screen_INT.c ****                                                             screen_RX_STS_OVERRUN);
 102:Generated_Source\PSoC5/screen_INT.c ****                 /* `#START screen_RXISR_ERROR` */
 103:Generated_Source\PSoC5/screen_INT.c **** 
 104:Generated_Source\PSoC5/screen_INT.c ****                 /* `#END` */
 105:Generated_Source\PSoC5/screen_INT.c ****                 
 106:Generated_Source\PSoC5/screen_INT.c ****             #ifdef screen_RXISR_ERROR_CALLBACK
 107:Generated_Source\PSoC5/screen_INT.c ****                 screen_RXISR_ERROR_Callback();
 108:Generated_Source\PSoC5/screen_INT.c ****             #endif /* screen_RXISR_ERROR_CALLBACK */
 109:Generated_Source\PSoC5/screen_INT.c ****             }
 110:Generated_Source\PSoC5/screen_INT.c ****             
 111:Generated_Source\PSoC5/screen_INT.c ****             if((readStatus & screen_RX_STS_FIFO_NOTEMPTY) != 0u)
  51              		.loc 1 111 0
  52 001c 03F0FF02 		and	r2, r3, #255
  53 0020 33B3     		cbz	r3, .L3
 112:Generated_Source\PSoC5/screen_INT.c ****             {
 113:Generated_Source\PSoC5/screen_INT.c ****                 /* Read data from the RX data register */
 114:Generated_Source\PSoC5/screen_INT.c ****                 readData = screen_RXDATA_REG;
  54              		.loc 1 114 0
  55 0022 174B     		ldr	r3, .L7+8
  56 0024 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
  57 0026 C9B2     		uxtb	r1, r1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 4


  58              	.LVL2:
 115:Generated_Source\PSoC5/screen_INT.c ****             #if (screen_RXHW_ADDRESS_ENABLED)
 116:Generated_Source\PSoC5/screen_INT.c ****                 if(screen_rxAddressMode == (uint8)screen__B_UART__AM_SW_DETECT_TO_BUFFER)
 117:Generated_Source\PSoC5/screen_INT.c ****                 {
 118:Generated_Source\PSoC5/screen_INT.c ****                     if((readStatus & screen_RX_STS_MRKSPC) != 0u)
 119:Generated_Source\PSoC5/screen_INT.c ****                     {
 120:Generated_Source\PSoC5/screen_INT.c ****                         if ((readStatus & screen_RX_STS_ADDR_MATCH) != 0u)
 121:Generated_Source\PSoC5/screen_INT.c ****                         {
 122:Generated_Source\PSoC5/screen_INT.c ****                             screen_rxAddressDetected = 1u;
 123:Generated_Source\PSoC5/screen_INT.c ****                         }
 124:Generated_Source\PSoC5/screen_INT.c ****                         else
 125:Generated_Source\PSoC5/screen_INT.c ****                         {
 126:Generated_Source\PSoC5/screen_INT.c ****                             screen_rxAddressDetected = 0u;
 127:Generated_Source\PSoC5/screen_INT.c ****                         }
 128:Generated_Source\PSoC5/screen_INT.c ****                     }
 129:Generated_Source\PSoC5/screen_INT.c ****                     if(screen_rxAddressDetected != 0u)
 130:Generated_Source\PSoC5/screen_INT.c ****                     {   /* Store only addressed data */
 131:Generated_Source\PSoC5/screen_INT.c ****                         screen_rxBuffer[screen_rxBufferWrite] = readData;
 132:Generated_Source\PSoC5/screen_INT.c ****                         increment_pointer = 1u;
 133:Generated_Source\PSoC5/screen_INT.c ****                     }
 134:Generated_Source\PSoC5/screen_INT.c ****                 }
 135:Generated_Source\PSoC5/screen_INT.c ****                 else /* Without software addressing */
 136:Generated_Source\PSoC5/screen_INT.c ****                 {
 137:Generated_Source\PSoC5/screen_INT.c ****                     screen_rxBuffer[screen_rxBufferWrite] = readData;
 138:Generated_Source\PSoC5/screen_INT.c ****                     increment_pointer = 1u;
 139:Generated_Source\PSoC5/screen_INT.c ****                 }
 140:Generated_Source\PSoC5/screen_INT.c ****             #else  /* Without addressing */
 141:Generated_Source\PSoC5/screen_INT.c ****                 screen_rxBuffer[screen_rxBufferWrite] = readData;
  59              		.loc 1 141 0
  60 0028 164B     		ldr	r3, .L7+12
  61 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62 002c DBB2     		uxtb	r3, r3
  63 002e 1648     		ldr	r0, .L7+16
  64 0030 C154     		strb	r1, [r0, r3]
  65              	.LVL3:
 142:Generated_Source\PSoC5/screen_INT.c ****                 increment_pointer = 1u;
 143:Generated_Source\PSoC5/screen_INT.c ****             #endif /* (screen_RXHW_ADDRESS_ENABLED) */
 144:Generated_Source\PSoC5/screen_INT.c **** 
 145:Generated_Source\PSoC5/screen_INT.c ****                 /* Do not increment buffer pointer when skip not addressed data */
 146:Generated_Source\PSoC5/screen_INT.c ****                 if(increment_pointer != 0u)
 147:Generated_Source\PSoC5/screen_INT.c ****                 {
 148:Generated_Source\PSoC5/screen_INT.c ****                     if(screen_rxBufferLoopDetect != 0u)
  66              		.loc 1 148 0
  67 0032 164B     		ldr	r3, .L7+20
  68 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  69 0036 13F0FF0F 		tst	r3, #255
  70 003a 02D0     		beq	.L4
 149:Generated_Source\PSoC5/screen_INT.c ****                     {   /* Set Software Buffer status Overflow */
 150:Generated_Source\PSoC5/screen_INT.c ****                         screen_rxBufferOverflow = 1u;
  71              		.loc 1 150 0
  72 003c 0121     		movs	r1, #1
  73              	.LVL4:
  74 003e 144B     		ldr	r3, .L7+24
  75 0040 1970     		strb	r1, [r3]
  76              	.L4:
 151:Generated_Source\PSoC5/screen_INT.c ****                     }
 152:Generated_Source\PSoC5/screen_INT.c ****                     /* Set next pointer. */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 5


 153:Generated_Source\PSoC5/screen_INT.c ****                     screen_rxBufferWrite++;
  77              		.loc 1 153 0
  78 0042 1049     		ldr	r1, .L7+12
  79 0044 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  80 0046 0133     		adds	r3, r3, #1
  81 0048 DBB2     		uxtb	r3, r3
  82 004a 0B70     		strb	r3, [r1]
 154:Generated_Source\PSoC5/screen_INT.c **** 
 155:Generated_Source\PSoC5/screen_INT.c ****                     /* Check pointer for a loop condition */
 156:Generated_Source\PSoC5/screen_INT.c ****                     if(screen_rxBufferWrite >= screen_RX_BUFFER_SIZE)
  83              		.loc 1 156 0
  84 004c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  85 004e DBB2     		uxtb	r3, r3
  86 0050 132B     		cmp	r3, #19
  87 0052 02D9     		bls	.L5
 157:Generated_Source\PSoC5/screen_INT.c ****                     {
 158:Generated_Source\PSoC5/screen_INT.c ****                         screen_rxBufferWrite = 0u;
  88              		.loc 1 158 0
  89 0054 0021     		movs	r1, #0
  90 0056 0B4B     		ldr	r3, .L7+12
  91 0058 1970     		strb	r1, [r3]
  92              	.L5:
 159:Generated_Source\PSoC5/screen_INT.c ****                     }
 160:Generated_Source\PSoC5/screen_INT.c **** 
 161:Generated_Source\PSoC5/screen_INT.c ****                     /* Detect pre-overload condition and set flag */
 162:Generated_Source\PSoC5/screen_INT.c ****                     if(screen_rxBufferWrite == screen_rxBufferRead)
  93              		.loc 1 162 0
  94 005a 0A4B     		ldr	r3, .L7+12
  95 005c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
  96 005e C9B2     		uxtb	r1, r1
  97 0060 0C4B     		ldr	r3, .L7+28
  98 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  99 0064 DBB2     		uxtb	r3, r3
 100 0066 9942     		cmp	r1, r3
 101 0068 02D1     		bne	.L3
 163:Generated_Source\PSoC5/screen_INT.c ****                     {
 164:Generated_Source\PSoC5/screen_INT.c ****                         screen_rxBufferLoopDetect = 1u;
 102              		.loc 1 164 0
 103 006a 0121     		movs	r1, #1
 104 006c 074B     		ldr	r3, .L7+20
 105 006e 1970     		strb	r1, [r3]
 106              	.LVL5:
 107              	.L3:
 165:Generated_Source\PSoC5/screen_INT.c ****                         /* When Hardware Flow Control selected */
 166:Generated_Source\PSoC5/screen_INT.c ****                         #if (screen_FLOW_CONTROL != 0u)
 167:Generated_Source\PSoC5/screen_INT.c ****                             /* Disable RX interrupt mask, it is enabled when user read data from th
 168:Generated_Source\PSoC5/screen_INT.c ****                             screen_RXSTATUS_MASK_REG  &= (uint8)~screen_RX_STS_FIFO_NOTEMPTY;
 169:Generated_Source\PSoC5/screen_INT.c ****                             CyIntClearPending(screen_RX_VECT_NUM);
 170:Generated_Source\PSoC5/screen_INT.c ****                             break; /* Break the reading of the FIFO loop, leave the data there for 
 171:Generated_Source\PSoC5/screen_INT.c ****                         #endif /* (screen_FLOW_CONTROL != 0u) */
 172:Generated_Source\PSoC5/screen_INT.c ****                     }
 173:Generated_Source\PSoC5/screen_INT.c ****                 }
 174:Generated_Source\PSoC5/screen_INT.c ****             }
 175:Generated_Source\PSoC5/screen_INT.c ****         }while((readStatus & screen_RX_STS_FIFO_NOTEMPTY) != 0u);
 108              		.loc 1 175 0
 109 0070 002A     		cmp	r2, #0
 110 0072 C5D1     		bne	.L6
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 6


 176:Generated_Source\PSoC5/screen_INT.c **** 
 177:Generated_Source\PSoC5/screen_INT.c ****         /* User code required at end of ISR (Optional) */
 178:Generated_Source\PSoC5/screen_INT.c ****         /* `#START screen_RXISR_END` */
 179:Generated_Source\PSoC5/screen_INT.c **** 
 180:Generated_Source\PSoC5/screen_INT.c ****         /* `#END` */
 181:Generated_Source\PSoC5/screen_INT.c **** 
 182:Generated_Source\PSoC5/screen_INT.c ****     #ifdef screen_RXISR_EXIT_CALLBACK
 183:Generated_Source\PSoC5/screen_INT.c ****         screen_RXISR_ExitCallback();
 184:Generated_Source\PSoC5/screen_INT.c ****     #endif /* screen_RXISR_EXIT_CALLBACK */
 185:Generated_Source\PSoC5/screen_INT.c **** 
 186:Generated_Source\PSoC5/screen_INT.c ****     #if(CY_PSOC3)
 187:Generated_Source\PSoC5/screen_INT.c ****         EA = int_en;
 188:Generated_Source\PSoC5/screen_INT.c ****     #endif /* (CY_PSOC3) */
 189:Generated_Source\PSoC5/screen_INT.c ****     }
 111              		.loc 1 189 0
 112 0074 7047     		bx	lr
 113              	.L8:
 114 0076 00BF     		.align	2
 115              	.L7:
 116 0078 66650040 		.word	1073767782
 117 007c 00000000 		.word	screen_errorStatus
 118 0080 46650040 		.word	1073767750
 119 0084 00000000 		.word	screen_rxBufferWrite
 120 0088 00000000 		.word	screen_rxBuffer
 121 008c 00000000 		.word	screen_rxBufferLoopDetect
 122 0090 00000000 		.word	screen_rxBufferOverflow
 123 0094 00000000 		.word	screen_rxBufferRead
 124              		.cfi_endproc
 125              	.LFE0:
 126              		.size	screen_RXISR, .-screen_RXISR
 127              		.section	.text.screen_TXISR,"ax",%progbits
 128              		.align	2
 129              		.global	screen_TXISR
 130              		.thumb
 131              		.thumb_func
 132              		.type	screen_TXISR, %function
 133              	screen_TXISR:
 134              	.LFB1:
 190:Generated_Source\PSoC5/screen_INT.c ****     
 191:Generated_Source\PSoC5/screen_INT.c **** #endif /* (screen_RX_INTERRUPT_ENABLED && (screen_RX_ENABLED || screen_HD_ENABLED)) */
 192:Generated_Source\PSoC5/screen_INT.c **** 
 193:Generated_Source\PSoC5/screen_INT.c **** 
 194:Generated_Source\PSoC5/screen_INT.c **** #if (screen_TX_INTERRUPT_ENABLED && screen_TX_ENABLED)
 195:Generated_Source\PSoC5/screen_INT.c ****     /*******************************************************************************
 196:Generated_Source\PSoC5/screen_INT.c ****     * Function Name: screen_TXISR
 197:Generated_Source\PSoC5/screen_INT.c ****     ********************************************************************************
 198:Generated_Source\PSoC5/screen_INT.c ****     *
 199:Generated_Source\PSoC5/screen_INT.c ****     * Summary:
 200:Generated_Source\PSoC5/screen_INT.c ****     * Interrupt Service Routine for the TX portion of the UART
 201:Generated_Source\PSoC5/screen_INT.c ****     *
 202:Generated_Source\PSoC5/screen_INT.c ****     * Parameters:
 203:Generated_Source\PSoC5/screen_INT.c ****     *  None.
 204:Generated_Source\PSoC5/screen_INT.c ****     *
 205:Generated_Source\PSoC5/screen_INT.c ****     * Return:
 206:Generated_Source\PSoC5/screen_INT.c ****     *  None.
 207:Generated_Source\PSoC5/screen_INT.c ****     *
 208:Generated_Source\PSoC5/screen_INT.c ****     * Global Variables:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 7


 209:Generated_Source\PSoC5/screen_INT.c ****     *  screen_txBuffer - RAM buffer pointer for transmit data from.
 210:Generated_Source\PSoC5/screen_INT.c ****     *  screen_txBufferRead - cyclic index for read and transmit data
 211:Generated_Source\PSoC5/screen_INT.c ****     *     from txBuffer, increments after each transmitted byte.
 212:Generated_Source\PSoC5/screen_INT.c ****     *  screen_rxBufferWrite - cyclic index for write to txBuffer,
 213:Generated_Source\PSoC5/screen_INT.c ****     *     checked to detect available for transmission bytes.
 214:Generated_Source\PSoC5/screen_INT.c ****     *
 215:Generated_Source\PSoC5/screen_INT.c ****     *******************************************************************************/
 216:Generated_Source\PSoC5/screen_INT.c ****     CY_ISR(screen_TXISR)
 217:Generated_Source\PSoC5/screen_INT.c ****     {
 135              		.loc 1 217 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 218:Generated_Source\PSoC5/screen_INT.c ****     #if(CY_PSOC3)
 219:Generated_Source\PSoC5/screen_INT.c ****         uint8 int_en;
 220:Generated_Source\PSoC5/screen_INT.c ****     #endif /* (CY_PSOC3) */
 221:Generated_Source\PSoC5/screen_INT.c **** 
 222:Generated_Source\PSoC5/screen_INT.c ****     #ifdef screen_TXISR_ENTRY_CALLBACK
 223:Generated_Source\PSoC5/screen_INT.c ****         screen_TXISR_EntryCallback();
 224:Generated_Source\PSoC5/screen_INT.c ****     #endif /* screen_TXISR_ENTRY_CALLBACK */
 225:Generated_Source\PSoC5/screen_INT.c **** 
 226:Generated_Source\PSoC5/screen_INT.c ****         /* User code required at start of ISR */
 227:Generated_Source\PSoC5/screen_INT.c ****         /* `#START screen_TXISR_START` */
 228:Generated_Source\PSoC5/screen_INT.c **** 
 229:Generated_Source\PSoC5/screen_INT.c ****         /* `#END` */
 230:Generated_Source\PSoC5/screen_INT.c **** 
 231:Generated_Source\PSoC5/screen_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
 232:Generated_Source\PSoC5/screen_INT.c ****         int_en = EA;
 233:Generated_Source\PSoC5/screen_INT.c ****         CyGlobalIntEnable;
 234:Generated_Source\PSoC5/screen_INT.c ****     #endif /* (CY_PSOC3) */
 235:Generated_Source\PSoC5/screen_INT.c **** 
 236:Generated_Source\PSoC5/screen_INT.c ****         while((screen_txBufferRead != screen_txBufferWrite) &&
 140              		.loc 1 236 0
 141 0000 13E0     		b	.L10
 142              	.L13:
 237:Generated_Source\PSoC5/screen_INT.c ****              ((screen_TXSTATUS_REG & screen_TX_STS_FIFO_FULL) == 0u))
 238:Generated_Source\PSoC5/screen_INT.c ****         {
 239:Generated_Source\PSoC5/screen_INT.c ****             /* Check pointer wrap around */
 240:Generated_Source\PSoC5/screen_INT.c ****             if(screen_txBufferRead >= screen_TX_BUFFER_SIZE)
 143              		.loc 1 240 0
 144 0002 104B     		ldr	r3, .L14
 145 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 146 0006 DBB2     		uxtb	r3, r3
 147 0008 072B     		cmp	r3, #7
 148 000a 02D9     		bls	.L11
 241:Generated_Source\PSoC5/screen_INT.c ****             {
 242:Generated_Source\PSoC5/screen_INT.c ****                 screen_txBufferRead = 0u;
 149              		.loc 1 242 0
 150 000c 0022     		movs	r2, #0
 151 000e 0D4B     		ldr	r3, .L14
 152 0010 1A70     		strb	r2, [r3]
 153              	.L11:
 243:Generated_Source\PSoC5/screen_INT.c ****             }
 244:Generated_Source\PSoC5/screen_INT.c **** 
 245:Generated_Source\PSoC5/screen_INT.c ****             screen_TXDATA_REG = screen_txBuffer[screen_txBufferRead];
 154              		.loc 1 245 0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 8


 155 0012 0C4A     		ldr	r2, .L14
 156 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 157 0016 DBB2     		uxtb	r3, r3
 158 0018 0B49     		ldr	r1, .L14+4
 159 001a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 160 001c DBB2     		uxtb	r3, r3
 161 001e 0B49     		ldr	r1, .L14+8
 162 0020 0B70     		strb	r3, [r1]
 246:Generated_Source\PSoC5/screen_INT.c **** 
 247:Generated_Source\PSoC5/screen_INT.c ****             /* Set next pointer */
 248:Generated_Source\PSoC5/screen_INT.c ****             screen_txBufferRead++;
 163              		.loc 1 248 0
 164 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 165 0024 0133     		adds	r3, r3, #1
 166 0026 DBB2     		uxtb	r3, r3
 167 0028 1370     		strb	r3, [r2]
 168              	.L10:
 236:Generated_Source\PSoC5/screen_INT.c ****              ((screen_TXSTATUS_REG & screen_TX_STS_FIFO_FULL) == 0u))
 169              		.loc 1 236 0
 170 002a 064B     		ldr	r3, .L14
 171 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 172 002e DBB2     		uxtb	r3, r3
 173 0030 074A     		ldr	r2, .L14+12
 174 0032 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 175 0034 9342     		cmp	r3, r2
 176 0036 04D0     		beq	.L9
 237:Generated_Source\PSoC5/screen_INT.c ****         {
 177              		.loc 1 237 0 discriminator 1
 178 0038 064B     		ldr	r3, .L14+16
 179 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 236:Generated_Source\PSoC5/screen_INT.c ****              ((screen_TXSTATUS_REG & screen_TX_STS_FIFO_FULL) == 0u))
 180              		.loc 1 236 0 discriminator 1
 181 003c 13F0040F 		tst	r3, #4
 182 0040 DFD0     		beq	.L13
 183              	.L9:
 184 0042 7047     		bx	lr
 185              	.L15:
 186              		.align	2
 187              	.L14:
 188 0044 00000000 		.word	screen_txBufferRead
 189 0048 00000000 		.word	screen_txBuffer
 190 004c 47640040 		.word	1073767495
 191 0050 00000000 		.word	screen_txBufferWrite
 192 0054 67640040 		.word	1073767527
 193              		.cfi_endproc
 194              	.LFE1:
 195              		.size	screen_TXISR, .-screen_TXISR
 196              		.text
 197              	.Letext0:
 198              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 199              		.file 3 "Generated_Source\\PSoC5\\screen.h"
 200              		.section	.debug_info,"",%progbits
 201              	.Ldebug_info0:
 202 0000 92010000 		.4byte	0x192
 203 0004 0400     		.2byte	0x4
 204 0006 00000000 		.4byte	.Ldebug_abbrev0
 205 000a 04       		.byte	0x4
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 9


 206 000b 01       		.uleb128 0x1
 207 000c 01010000 		.4byte	.LASF28
 208 0010 0C       		.byte	0xc
 209 0011 0D000000 		.4byte	.LASF29
 210 0015 4B000000 		.4byte	.LASF30
 211 0019 00000000 		.4byte	.Ldebug_ranges0+0
 212 001d 00000000 		.4byte	0
 213 0021 00000000 		.4byte	.Ldebug_line0
 214 0025 02       		.uleb128 0x2
 215 0026 01       		.byte	0x1
 216 0027 06       		.byte	0x6
 217 0028 87020000 		.4byte	.LASF0
 218 002c 02       		.uleb128 0x2
 219 002d 01       		.byte	0x1
 220 002e 08       		.byte	0x8
 221 002f F3000000 		.4byte	.LASF1
 222 0033 02       		.uleb128 0x2
 223 0034 02       		.byte	0x2
 224 0035 05       		.byte	0x5
 225 0036 63020000 		.4byte	.LASF2
 226 003a 02       		.uleb128 0x2
 227 003b 02       		.byte	0x2
 228 003c 07       		.byte	0x7
 229 003d B0000000 		.4byte	.LASF3
 230 0041 02       		.uleb128 0x2
 231 0042 04       		.byte	0x4
 232 0043 05       		.byte	0x5
 233 0044 6D020000 		.4byte	.LASF4
 234 0048 02       		.uleb128 0x2
 235 0049 04       		.byte	0x4
 236 004a 07       		.byte	0x7
 237 004b 94010000 		.4byte	.LASF5
 238 004f 02       		.uleb128 0x2
 239 0050 08       		.byte	0x8
 240 0051 05       		.byte	0x5
 241 0052 1F020000 		.4byte	.LASF6
 242 0056 02       		.uleb128 0x2
 243 0057 08       		.byte	0x8
 244 0058 07       		.byte	0x7
 245 0059 CD010000 		.4byte	.LASF7
 246 005d 03       		.uleb128 0x3
 247 005e 04       		.byte	0x4
 248 005f 05       		.byte	0x5
 249 0060 696E7400 		.ascii	"int\000"
 250 0064 02       		.uleb128 0x2
 251 0065 04       		.byte	0x4
 252 0066 07       		.byte	0x7
 253 0067 C0010000 		.4byte	.LASF8
 254 006b 04       		.uleb128 0x4
 255 006c A6010000 		.4byte	.LASF12
 256 0070 02       		.byte	0x2
 257 0071 9201     		.2byte	0x192
 258 0073 2C000000 		.4byte	0x2c
 259 0077 02       		.uleb128 0x2
 260 0078 04       		.byte	0x4
 261 0079 04       		.byte	0x4
 262 007a 31000000 		.4byte	.LASF9
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 10


 263 007e 02       		.uleb128 0x2
 264 007f 08       		.byte	0x8
 265 0080 04       		.byte	0x4
 266 0081 AC010000 		.4byte	.LASF10
 267 0085 02       		.uleb128 0x2
 268 0086 01       		.byte	0x1
 269 0087 08       		.byte	0x8
 270 0088 76020000 		.4byte	.LASF11
 271 008c 04       		.uleb128 0x4
 272 008d 8F010000 		.4byte	.LASF13
 273 0091 02       		.byte	0x2
 274 0092 3C02     		.2byte	0x23c
 275 0094 98000000 		.4byte	0x98
 276 0098 05       		.uleb128 0x5
 277 0099 6B000000 		.4byte	0x6b
 278 009d 02       		.uleb128 0x2
 279 009e 08       		.byte	0x8
 280 009f 04       		.byte	0x4
 281 00a0 7B020000 		.4byte	.LASF14
 282 00a4 02       		.uleb128 0x2
 283 00a5 04       		.byte	0x4
 284 00a6 07       		.byte	0x7
 285 00a7 16020000 		.4byte	.LASF15
 286 00ab 06       		.uleb128 0x6
 287 00ac 00000000 		.4byte	.LASF31
 288 00b0 01       		.byte	0x1
 289 00b1 3B       		.byte	0x3b
 290 00b2 00000000 		.4byte	.LFB0
 291 00b6 98000000 		.4byte	.LFE0-.LFB0
 292 00ba 01       		.uleb128 0x1
 293 00bb 9C       		.byte	0x9c
 294 00bc EE000000 		.4byte	0xee
 295 00c0 07       		.uleb128 0x7
 296 00c1 A6020000 		.4byte	.LASF16
 297 00c5 01       		.byte	0x1
 298 00c6 3D       		.byte	0x3d
 299 00c7 6B000000 		.4byte	0x6b
 300 00cb 00000000 		.4byte	.LLST0
 301 00cf 07       		.uleb128 0x7
 302 00d0 E8000000 		.4byte	.LASF17
 303 00d4 01       		.byte	0x1
 304 00d5 3E       		.byte	0x3e
 305 00d6 6B000000 		.4byte	0x6b
 306 00da 1E000000 		.4byte	.LLST1
 307 00de 07       		.uleb128 0x7
 308 00df 2D020000 		.4byte	.LASF18
 309 00e3 01       		.byte	0x1
 310 00e4 3F       		.byte	0x3f
 311 00e5 6B000000 		.4byte	0x6b
 312 00e9 31000000 		.4byte	.LLST2
 313 00ed 00       		.byte	0
 314 00ee 08       		.uleb128 0x8
 315 00ef B3010000 		.4byte	.LASF32
 316 00f3 01       		.byte	0x1
 317 00f4 D8       		.byte	0xd8
 318 00f5 00000000 		.4byte	.LFB1
 319 00f9 58000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 11


 320 00fd 01       		.uleb128 0x1
 321 00fe 9C       		.byte	0x9c
 322 00ff 09       		.uleb128 0x9
 323 0100 98000000 		.4byte	0x98
 324 0104 0F010000 		.4byte	0x10f
 325 0108 0A       		.uleb128 0xa
 326 0109 A4000000 		.4byte	0xa4
 327 010d 07       		.byte	0x7
 328 010e 00       		.byte	0
 329 010f 0B       		.uleb128 0xb
 330 0110 3F020000 		.4byte	.LASF19
 331 0114 03       		.byte	0x3
 332 0115 3801     		.2byte	0x138
 333 0117 1B010000 		.4byte	0x11b
 334 011b 05       		.uleb128 0x5
 335 011c FF000000 		.4byte	0xff
 336 0120 0B       		.uleb128 0xb
 337 0121 37000000 		.4byte	.LASF20
 338 0125 03       		.byte	0x3
 339 0126 3901     		.2byte	0x139
 340 0128 98000000 		.4byte	0x98
 341 012c 0B       		.uleb128 0xb
 342 012d C3000000 		.4byte	.LASF21
 343 0131 03       		.byte	0x3
 344 0132 3A01     		.2byte	0x13a
 345 0134 6B000000 		.4byte	0x6b
 346 0138 0B       		.uleb128 0xb
 347 0139 93020000 		.4byte	.LASF22
 348 013d 03       		.byte	0x3
 349 013e 3D01     		.2byte	0x13d
 350 0140 6B000000 		.4byte	0x6b
 351 0144 09       		.uleb128 0x9
 352 0145 98000000 		.4byte	0x98
 353 0149 54010000 		.4byte	0x154
 354 014d 0A       		.uleb128 0xa
 355 014e A4000000 		.4byte	0xa4
 356 0152 13       		.byte	0x13
 357 0153 00       		.byte	0
 358 0154 0B       		.uleb128 0xb
 359 0155 D8000000 		.4byte	.LASF23
 360 0159 03       		.byte	0x3
 361 015a 3E01     		.2byte	0x13e
 362 015c 60010000 		.4byte	0x160
 363 0160 05       		.uleb128 0x5
 364 0161 44010000 		.4byte	0x144
 365 0165 0B       		.uleb128 0xb
 366 0166 4F020000 		.4byte	.LASF24
 367 016a 03       		.byte	0x3
 368 016b 3F01     		.2byte	0x13f
 369 016d 98000000 		.4byte	0x98
 370 0171 0B       		.uleb128 0xb
 371 0172 AF020000 		.4byte	.LASF25
 372 0176 03       		.byte	0x3
 373 0177 4001     		.2byte	0x140
 374 0179 98000000 		.4byte	0x98
 375 017d 0B       		.uleb128 0xb
 376 017e FC010000 		.4byte	.LASF26
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 12


 377 0182 03       		.byte	0x3
 378 0183 4101     		.2byte	0x141
 379 0185 98000000 		.4byte	0x98
 380 0189 0B       		.uleb128 0xb
 381 018a E4010000 		.4byte	.LASF27
 382 018e 03       		.byte	0x3
 383 018f 4201     		.2byte	0x142
 384 0191 98000000 		.4byte	0x98
 385 0195 00       		.byte	0
 386              		.section	.debug_abbrev,"",%progbits
 387              	.Ldebug_abbrev0:
 388 0000 01       		.uleb128 0x1
 389 0001 11       		.uleb128 0x11
 390 0002 01       		.byte	0x1
 391 0003 25       		.uleb128 0x25
 392 0004 0E       		.uleb128 0xe
 393 0005 13       		.uleb128 0x13
 394 0006 0B       		.uleb128 0xb
 395 0007 03       		.uleb128 0x3
 396 0008 0E       		.uleb128 0xe
 397 0009 1B       		.uleb128 0x1b
 398 000a 0E       		.uleb128 0xe
 399 000b 55       		.uleb128 0x55
 400 000c 17       		.uleb128 0x17
 401 000d 11       		.uleb128 0x11
 402 000e 01       		.uleb128 0x1
 403 000f 10       		.uleb128 0x10
 404 0010 17       		.uleb128 0x17
 405 0011 00       		.byte	0
 406 0012 00       		.byte	0
 407 0013 02       		.uleb128 0x2
 408 0014 24       		.uleb128 0x24
 409 0015 00       		.byte	0
 410 0016 0B       		.uleb128 0xb
 411 0017 0B       		.uleb128 0xb
 412 0018 3E       		.uleb128 0x3e
 413 0019 0B       		.uleb128 0xb
 414 001a 03       		.uleb128 0x3
 415 001b 0E       		.uleb128 0xe
 416 001c 00       		.byte	0
 417 001d 00       		.byte	0
 418 001e 03       		.uleb128 0x3
 419 001f 24       		.uleb128 0x24
 420 0020 00       		.byte	0
 421 0021 0B       		.uleb128 0xb
 422 0022 0B       		.uleb128 0xb
 423 0023 3E       		.uleb128 0x3e
 424 0024 0B       		.uleb128 0xb
 425 0025 03       		.uleb128 0x3
 426 0026 08       		.uleb128 0x8
 427 0027 00       		.byte	0
 428 0028 00       		.byte	0
 429 0029 04       		.uleb128 0x4
 430 002a 16       		.uleb128 0x16
 431 002b 00       		.byte	0
 432 002c 03       		.uleb128 0x3
 433 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 13


 434 002e 3A       		.uleb128 0x3a
 435 002f 0B       		.uleb128 0xb
 436 0030 3B       		.uleb128 0x3b
 437 0031 05       		.uleb128 0x5
 438 0032 49       		.uleb128 0x49
 439 0033 13       		.uleb128 0x13
 440 0034 00       		.byte	0
 441 0035 00       		.byte	0
 442 0036 05       		.uleb128 0x5
 443 0037 35       		.uleb128 0x35
 444 0038 00       		.byte	0
 445 0039 49       		.uleb128 0x49
 446 003a 13       		.uleb128 0x13
 447 003b 00       		.byte	0
 448 003c 00       		.byte	0
 449 003d 06       		.uleb128 0x6
 450 003e 2E       		.uleb128 0x2e
 451 003f 01       		.byte	0x1
 452 0040 3F       		.uleb128 0x3f
 453 0041 19       		.uleb128 0x19
 454 0042 03       		.uleb128 0x3
 455 0043 0E       		.uleb128 0xe
 456 0044 3A       		.uleb128 0x3a
 457 0045 0B       		.uleb128 0xb
 458 0046 3B       		.uleb128 0x3b
 459 0047 0B       		.uleb128 0xb
 460 0048 27       		.uleb128 0x27
 461 0049 19       		.uleb128 0x19
 462 004a 11       		.uleb128 0x11
 463 004b 01       		.uleb128 0x1
 464 004c 12       		.uleb128 0x12
 465 004d 06       		.uleb128 0x6
 466 004e 40       		.uleb128 0x40
 467 004f 18       		.uleb128 0x18
 468 0050 9742     		.uleb128 0x2117
 469 0052 19       		.uleb128 0x19
 470 0053 01       		.uleb128 0x1
 471 0054 13       		.uleb128 0x13
 472 0055 00       		.byte	0
 473 0056 00       		.byte	0
 474 0057 07       		.uleb128 0x7
 475 0058 34       		.uleb128 0x34
 476 0059 00       		.byte	0
 477 005a 03       		.uleb128 0x3
 478 005b 0E       		.uleb128 0xe
 479 005c 3A       		.uleb128 0x3a
 480 005d 0B       		.uleb128 0xb
 481 005e 3B       		.uleb128 0x3b
 482 005f 0B       		.uleb128 0xb
 483 0060 49       		.uleb128 0x49
 484 0061 13       		.uleb128 0x13
 485 0062 02       		.uleb128 0x2
 486 0063 17       		.uleb128 0x17
 487 0064 00       		.byte	0
 488 0065 00       		.byte	0
 489 0066 08       		.uleb128 0x8
 490 0067 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 14


 491 0068 00       		.byte	0
 492 0069 3F       		.uleb128 0x3f
 493 006a 19       		.uleb128 0x19
 494 006b 03       		.uleb128 0x3
 495 006c 0E       		.uleb128 0xe
 496 006d 3A       		.uleb128 0x3a
 497 006e 0B       		.uleb128 0xb
 498 006f 3B       		.uleb128 0x3b
 499 0070 0B       		.uleb128 0xb
 500 0071 27       		.uleb128 0x27
 501 0072 19       		.uleb128 0x19
 502 0073 11       		.uleb128 0x11
 503 0074 01       		.uleb128 0x1
 504 0075 12       		.uleb128 0x12
 505 0076 06       		.uleb128 0x6
 506 0077 40       		.uleb128 0x40
 507 0078 18       		.uleb128 0x18
 508 0079 9742     		.uleb128 0x2117
 509 007b 19       		.uleb128 0x19
 510 007c 00       		.byte	0
 511 007d 00       		.byte	0
 512 007e 09       		.uleb128 0x9
 513 007f 01       		.uleb128 0x1
 514 0080 01       		.byte	0x1
 515 0081 49       		.uleb128 0x49
 516 0082 13       		.uleb128 0x13
 517 0083 01       		.uleb128 0x1
 518 0084 13       		.uleb128 0x13
 519 0085 00       		.byte	0
 520 0086 00       		.byte	0
 521 0087 0A       		.uleb128 0xa
 522 0088 21       		.uleb128 0x21
 523 0089 00       		.byte	0
 524 008a 49       		.uleb128 0x49
 525 008b 13       		.uleb128 0x13
 526 008c 2F       		.uleb128 0x2f
 527 008d 0B       		.uleb128 0xb
 528 008e 00       		.byte	0
 529 008f 00       		.byte	0
 530 0090 0B       		.uleb128 0xb
 531 0091 34       		.uleb128 0x34
 532 0092 00       		.byte	0
 533 0093 03       		.uleb128 0x3
 534 0094 0E       		.uleb128 0xe
 535 0095 3A       		.uleb128 0x3a
 536 0096 0B       		.uleb128 0xb
 537 0097 3B       		.uleb128 0x3b
 538 0098 05       		.uleb128 0x5
 539 0099 49       		.uleb128 0x49
 540 009a 13       		.uleb128 0x13
 541 009b 3F       		.uleb128 0x3f
 542 009c 19       		.uleb128 0x19
 543 009d 3C       		.uleb128 0x3c
 544 009e 19       		.uleb128 0x19
 545 009f 00       		.byte	0
 546 00a0 00       		.byte	0
 547 00a1 00       		.byte	0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 15


 548              		.section	.debug_loc,"",%progbits
 549              	.Ldebug_loc0:
 550              	.LLST0:
 551 0000 06000000 		.4byte	.LVL0
 552 0004 1C000000 		.4byte	.LVL1
 553 0008 0100     		.2byte	0x1
 554 000a 53       		.byte	0x53
 555 000b 28000000 		.4byte	.LVL2
 556 000f 3E000000 		.4byte	.LVL4
 557 0013 0100     		.2byte	0x1
 558 0015 51       		.byte	0x51
 559 0016 00000000 		.4byte	0
 560 001a 00000000 		.4byte	0
 561              	.LLST1:
 562 001e 06000000 		.4byte	.LVL0
 563 0022 1C000000 		.4byte	.LVL1
 564 0026 0100     		.2byte	0x1
 565 0028 53       		.byte	0x53
 566 0029 00000000 		.4byte	0
 567 002d 00000000 		.4byte	0
 568              	.LLST2:
 569 0031 32000000 		.4byte	.LVL3
 570 0035 70000000 		.4byte	.LVL5
 571 0039 0200     		.2byte	0x2
 572 003b 31       		.byte	0x31
 573 003c 9F       		.byte	0x9f
 574 003d 00000000 		.4byte	0
 575 0041 00000000 		.4byte	0
 576              		.section	.debug_aranges,"",%progbits
 577 0000 24000000 		.4byte	0x24
 578 0004 0200     		.2byte	0x2
 579 0006 00000000 		.4byte	.Ldebug_info0
 580 000a 04       		.byte	0x4
 581 000b 00       		.byte	0
 582 000c 0000     		.2byte	0
 583 000e 0000     		.2byte	0
 584 0010 00000000 		.4byte	.LFB0
 585 0014 98000000 		.4byte	.LFE0-.LFB0
 586 0018 00000000 		.4byte	.LFB1
 587 001c 58000000 		.4byte	.LFE1-.LFB1
 588 0020 00000000 		.4byte	0
 589 0024 00000000 		.4byte	0
 590              		.section	.debug_ranges,"",%progbits
 591              	.Ldebug_ranges0:
 592 0000 00000000 		.4byte	.LFB0
 593 0004 98000000 		.4byte	.LFE0
 594 0008 00000000 		.4byte	.LFB1
 595 000c 58000000 		.4byte	.LFE1
 596 0010 00000000 		.4byte	0
 597 0014 00000000 		.4byte	0
 598              		.section	.debug_line,"",%progbits
 599              	.Ldebug_line0:
 600 0000 A5000000 		.section	.debug_str,"MS",%progbits,1
 600      02005300 
 600      00000201 
 600      FB0E0D00 
 600      01010101 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 16


 601              	.LASF31:
 602 0000 73637265 		.ascii	"screen_RXISR\000"
 602      656E5F52 
 602      58495352 
 602      00
 603              	.LASF29:
 604 000d 47656E65 		.ascii	"Generated_Source\\PSoC5\\screen_INT.c\000"
 604      72617465 
 604      645F536F 
 604      75726365 
 604      5C50536F 
 605              	.LASF9:
 606 0031 666C6F61 		.ascii	"float\000"
 606      7400
 607              	.LASF20:
 608 0037 73637265 		.ascii	"screen_txBufferRead\000"
 608      656E5F74 
 608      78427566 
 608      66657252 
 608      65616400 
 609              	.LASF30:
 610 004b 433A5C55 		.ascii	"C:\\Users\\Lenovo\\Documents\\PSoC Creator\\Digital"
 610      73657273 
 610      5C4C656E 
 610      6F766F5C 
 610      446F6375 
 611 0079 5574696C 		.ascii	"UtilityExample01\\IMP-CRR\\DigitalUtilityExample01."
 611      69747945 
 611      78616D70 
 611      6C653031 
 611      5C494D50 
 612 00aa 63796473 		.ascii	"cydsn\000"
 612      6E00
 613              	.LASF3:
 614 00b0 73686F72 		.ascii	"short unsigned int\000"
 614      7420756E 
 614      7369676E 
 614      65642069 
 614      6E7400
 615              	.LASF21:
 616 00c3 73637265 		.ascii	"screen_txBufferWrite\000"
 616      656E5F74 
 616      78427566 
 616      66657257 
 616      72697465 
 617              	.LASF23:
 618 00d8 73637265 		.ascii	"screen_rxBuffer\000"
 618      656E5F72 
 618      78427566 
 618      66657200 
 619              	.LASF17:
 620 00e8 72656164 		.ascii	"readStatus\000"
 620      53746174 
 620      757300
 621              	.LASF1:
 622 00f3 756E7369 		.ascii	"unsigned char\000"
 622      676E6564 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 17


 622      20636861 
 622      7200
 623              	.LASF28:
 624 0101 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 624      43313120 
 624      352E342E 
 624      31203230 
 624      31363036 
 625 0134 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 625      20726576 
 625      6973696F 
 625      6E203233 
 625      37373135 
 626 0167 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 626      66756E63 
 626      74696F6E 
 626      2D736563 
 626      74696F6E 
 627              	.LASF13:
 628 018f 72656738 		.ascii	"reg8\000"
 628      00
 629              	.LASF5:
 630 0194 6C6F6E67 		.ascii	"long unsigned int\000"
 630      20756E73 
 630      69676E65 
 630      6420696E 
 630      7400
 631              	.LASF12:
 632 01a6 75696E74 		.ascii	"uint8\000"
 632      3800
 633              	.LASF10:
 634 01ac 646F7562 		.ascii	"double\000"
 634      6C6500
 635              	.LASF32:
 636 01b3 73637265 		.ascii	"screen_TXISR\000"
 636      656E5F54 
 636      58495352 
 636      00
 637              	.LASF8:
 638 01c0 756E7369 		.ascii	"unsigned int\000"
 638      676E6564 
 638      20696E74 
 638      00
 639              	.LASF7:
 640 01cd 6C6F6E67 		.ascii	"long long unsigned int\000"
 640      206C6F6E 
 640      6720756E 
 640      7369676E 
 640      65642069 
 641              	.LASF27:
 642 01e4 73637265 		.ascii	"screen_rxBufferOverflow\000"
 642      656E5F72 
 642      78427566 
 642      6665724F 
 642      76657266 
 643              	.LASF26:
 644 01fc 73637265 		.ascii	"screen_rxBufferLoopDetect\000"
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 18


 644      656E5F72 
 644      78427566 
 644      6665724C 
 644      6F6F7044 
 645              	.LASF15:
 646 0216 73697A65 		.ascii	"sizetype\000"
 646      74797065 
 646      00
 647              	.LASF6:
 648 021f 6C6F6E67 		.ascii	"long long int\000"
 648      206C6F6E 
 648      6720696E 
 648      7400
 649              	.LASF18:
 650 022d 696E6372 		.ascii	"increment_pointer\000"
 650      656D656E 
 650      745F706F 
 650      696E7465 
 650      7200
 651              	.LASF19:
 652 023f 73637265 		.ascii	"screen_txBuffer\000"
 652      656E5F74 
 652      78427566 
 652      66657200 
 653              	.LASF24:
 654 024f 73637265 		.ascii	"screen_rxBufferRead\000"
 654      656E5F72 
 654      78427566 
 654      66657252 
 654      65616400 
 655              	.LASF2:
 656 0263 73686F72 		.ascii	"short int\000"
 656      7420696E 
 656      7400
 657              	.LASF4:
 658 026d 6C6F6E67 		.ascii	"long int\000"
 658      20696E74 
 658      00
 659              	.LASF11:
 660 0276 63686172 		.ascii	"char\000"
 660      00
 661              	.LASF14:
 662 027b 6C6F6E67 		.ascii	"long double\000"
 662      20646F75 
 662      626C6500 
 663              	.LASF0:
 664 0287 7369676E 		.ascii	"signed char\000"
 664      65642063 
 664      68617200 
 665              	.LASF22:
 666 0293 73637265 		.ascii	"screen_errorStatus\000"
 666      656E5F65 
 666      72726F72 
 666      53746174 
 666      757300
 667              	.LASF16:
 668 02a6 72656164 		.ascii	"readData\000"
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccTDPRmv.s 			page 19


 668      44617461 
 668      00
 669              	.LASF25:
 670 02af 73637265 		.ascii	"screen_rxBufferWrite\000"
 670      656E5F72 
 670      78427566 
 670      66657257 
 670      72697465 
 671              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
