ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"screen.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.screen_Init,"ax",%progbits
  20              		.align	2
  21              		.global	screen_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	screen_Init, %function
  25              	screen_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\screen.c"
   1:Generated_Source\PSoC5/screen.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/screen.c **** * File Name: screen.c
   3:Generated_Source\PSoC5/screen.c **** * Version 2.50
   4:Generated_Source\PSoC5/screen.c **** *
   5:Generated_Source\PSoC5/screen.c **** * Description:
   6:Generated_Source\PSoC5/screen.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/screen.c **** *
   8:Generated_Source\PSoC5/screen.c **** * Note:
   9:Generated_Source\PSoC5/screen.c **** *
  10:Generated_Source\PSoC5/screen.c **** ********************************************************************************
  11:Generated_Source\PSoC5/screen.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/screen.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/screen.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/screen.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/screen.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/screen.c **** 
  17:Generated_Source\PSoC5/screen.c **** #include "screen.h"
  18:Generated_Source\PSoC5/screen.c **** #if (screen_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/screen.c ****     #include "screen_IntClock.h"
  20:Generated_Source\PSoC5/screen.c **** #endif /* End screen_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/screen.c **** 
  22:Generated_Source\PSoC5/screen.c **** 
  23:Generated_Source\PSoC5/screen.c **** /***************************************
  24:Generated_Source\PSoC5/screen.c **** * Global data allocation
  25:Generated_Source\PSoC5/screen.c **** ***************************************/
  26:Generated_Source\PSoC5/screen.c **** 
  27:Generated_Source\PSoC5/screen.c **** uint8 screen_initVar = 0u;
  28:Generated_Source\PSoC5/screen.c **** 
  29:Generated_Source\PSoC5/screen.c **** #if (screen_TX_INTERRUPT_ENABLED && screen_TX_ENABLED)
  30:Generated_Source\PSoC5/screen.c ****     volatile uint8 screen_txBuffer[screen_TX_BUFFER_SIZE];
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 2


  31:Generated_Source\PSoC5/screen.c ****     volatile uint8 screen_txBufferRead = 0u;
  32:Generated_Source\PSoC5/screen.c ****     uint8 screen_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/screen.c **** #endif /* (screen_TX_INTERRUPT_ENABLED && screen_TX_ENABLED) */
  34:Generated_Source\PSoC5/screen.c **** 
  35:Generated_Source\PSoC5/screen.c **** #if (screen_RX_INTERRUPT_ENABLED && (screen_RX_ENABLED || screen_HD_ENABLED))
  36:Generated_Source\PSoC5/screen.c ****     uint8 screen_errorStatus = 0u;
  37:Generated_Source\PSoC5/screen.c ****     volatile uint8 screen_rxBuffer[screen_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/screen.c ****     volatile uint8 screen_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/screen.c ****     volatile uint8 screen_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/screen.c ****     volatile uint8 screen_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/screen.c ****     volatile uint8 screen_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/screen.c ****     #if (screen_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/screen.c ****         volatile uint8 screen_rxAddressMode = screen_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/screen.c ****         volatile uint8 screen_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/screen.c ****     #endif /* (screen_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/screen.c **** #endif /* (screen_RX_INTERRUPT_ENABLED && (screen_RX_ENABLED || screen_HD_ENABLED)) */
  47:Generated_Source\PSoC5/screen.c **** 
  48:Generated_Source\PSoC5/screen.c **** 
  49:Generated_Source\PSoC5/screen.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/screen.c **** * Function Name: screen_Start
  51:Generated_Source\PSoC5/screen.c **** ********************************************************************************
  52:Generated_Source\PSoC5/screen.c **** *
  53:Generated_Source\PSoC5/screen.c **** * Summary:
  54:Generated_Source\PSoC5/screen.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/screen.c **** *  screen_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/screen.c **** *  screen_Init() function, and then calls the
  57:Generated_Source\PSoC5/screen.c **** *  screen_Enable() function.
  58:Generated_Source\PSoC5/screen.c **** *
  59:Generated_Source\PSoC5/screen.c **** * Parameters:
  60:Generated_Source\PSoC5/screen.c **** *  None.
  61:Generated_Source\PSoC5/screen.c **** *
  62:Generated_Source\PSoC5/screen.c **** * Return:
  63:Generated_Source\PSoC5/screen.c **** *  None.
  64:Generated_Source\PSoC5/screen.c **** *
  65:Generated_Source\PSoC5/screen.c **** * Global variables:
  66:Generated_Source\PSoC5/screen.c **** *  The screen_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/screen.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/screen.c **** *  and set to one (1u) the first time screen_Start() is called. This
  69:Generated_Source\PSoC5/screen.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/screen.c **** *  subsequent calls to the screen_Start() routine.
  71:Generated_Source\PSoC5/screen.c **** *
  72:Generated_Source\PSoC5/screen.c **** * Reentrant:
  73:Generated_Source\PSoC5/screen.c **** *  No.
  74:Generated_Source\PSoC5/screen.c **** *
  75:Generated_Source\PSoC5/screen.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/screen.c **** void screen_Start(void) 
  77:Generated_Source\PSoC5/screen.c **** {
  78:Generated_Source\PSoC5/screen.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/screen.c ****     if(screen_initVar == 0u)
  80:Generated_Source\PSoC5/screen.c ****     {
  81:Generated_Source\PSoC5/screen.c ****         screen_Init();
  82:Generated_Source\PSoC5/screen.c ****         screen_initVar = 1u;
  83:Generated_Source\PSoC5/screen.c ****     }
  84:Generated_Source\PSoC5/screen.c **** 
  85:Generated_Source\PSoC5/screen.c ****     screen_Enable();
  86:Generated_Source\PSoC5/screen.c **** }
  87:Generated_Source\PSoC5/screen.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 3


  88:Generated_Source\PSoC5/screen.c **** 
  89:Generated_Source\PSoC5/screen.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/screen.c **** * Function Name: screen_Init
  91:Generated_Source\PSoC5/screen.c **** ********************************************************************************
  92:Generated_Source\PSoC5/screen.c **** *
  93:Generated_Source\PSoC5/screen.c **** * Summary:
  94:Generated_Source\PSoC5/screen.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/screen.c **** *  dialog settings. It is not necessary to call screen_Init() because
  96:Generated_Source\PSoC5/screen.c **** *  the screen_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/screen.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/screen.c **** *
  99:Generated_Source\PSoC5/screen.c **** * Parameters:
 100:Generated_Source\PSoC5/screen.c **** *  None.
 101:Generated_Source\PSoC5/screen.c **** *
 102:Generated_Source\PSoC5/screen.c **** * Return:
 103:Generated_Source\PSoC5/screen.c **** *  None.
 104:Generated_Source\PSoC5/screen.c **** *
 105:Generated_Source\PSoC5/screen.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/screen.c **** void screen_Init(void) 
 107:Generated_Source\PSoC5/screen.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 108:Generated_Source\PSoC5/screen.c ****     #if(screen_RX_ENABLED || screen_HD_ENABLED)
 109:Generated_Source\PSoC5/screen.c **** 
 110:Generated_Source\PSoC5/screen.c ****         #if (screen_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/screen.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/screen.c ****             (void) CyIntSetVector(screen_RX_VECT_NUM, &screen_RXISR);
  36              		.loc 1 112 0
  37 0002 1249     		ldr	r1, .L3
  38 0004 0120     		movs	r0, #1
  39 0006 FFF7FEFF 		bl	CyIntSetVector
  40              	.LVL0:
 113:Generated_Source\PSoC5/screen.c ****             CyIntSetPriority(screen_RX_VECT_NUM, screen_RX_PRIOR_NUM);
  41              		.loc 1 113 0
  42 000a 0721     		movs	r1, #7
  43 000c 0120     		movs	r0, #1
  44 000e FFF7FEFF 		bl	CyIntSetPriority
  45              	.LVL1:
 114:Generated_Source\PSoC5/screen.c ****             screen_errorStatus = 0u;
  46              		.loc 1 114 0
  47 0012 0022     		movs	r2, #0
  48 0014 0E4B     		ldr	r3, .L3+4
  49 0016 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC5/screen.c ****         #endif /* (screen_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/screen.c **** 
 117:Generated_Source\PSoC5/screen.c ****         #if (screen_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/screen.c ****             screen_SetRxAddressMode(screen_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/screen.c ****             screen_SetRxAddress1(screen_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/screen.c ****             screen_SetRxAddress2(screen_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/screen.c ****         #endif /* End screen_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/screen.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 4


 123:Generated_Source\PSoC5/screen.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/screen.c ****         screen_RXBITCTR_PERIOD_REG = screen_RXBITCTR_INIT;
  50              		.loc 1 124 0
  51 0018 7222     		movs	r2, #114
  52 001a 0E4B     		ldr	r3, .L3+8
  53 001c 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/screen.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/screen.c ****         screen_RXSTATUS_MASK_REG  = screen_INIT_RX_INTERRUPTS_MASK;
  54              		.loc 1 126 0
  55 001e 2022     		movs	r2, #32
  56 0020 03F20113 		addw	r3, r3, #257
  57 0024 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/screen.c ****     #endif /* End screen_RX_ENABLED || screen_HD_ENABLED*/
 128:Generated_Source\PSoC5/screen.c **** 
 129:Generated_Source\PSoC5/screen.c ****     #if(screen_TX_ENABLED)
 130:Generated_Source\PSoC5/screen.c ****         #if (screen_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/screen.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/screen.c ****             (void) CyIntSetVector(screen_TX_VECT_NUM, &screen_TXISR);
  58              		.loc 1 132 0
  59 0026 0C49     		ldr	r1, .L3+12
  60 0028 0220     		movs	r0, #2
  61 002a FFF7FEFF 		bl	CyIntSetVector
  62              	.LVL2:
 133:Generated_Source\PSoC5/screen.c ****             CyIntSetPriority(screen_TX_VECT_NUM, screen_TX_PRIOR_NUM);
  63              		.loc 1 133 0
  64 002e 0721     		movs	r1, #7
  65 0030 0220     		movs	r0, #2
  66 0032 FFF7FEFF 		bl	CyIntSetPriority
  67              	.LVL3:
 134:Generated_Source\PSoC5/screen.c ****         #endif /* (screen_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/screen.c **** 
 136:Generated_Source\PSoC5/screen.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/screen.c ****         #if (screen_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/screen.c ****             screen_TXBITCLKGEN_CTR_REG = screen_BIT_CENTER;
  68              		.loc 1 138 0
  69 0036 0622     		movs	r2, #6
  70 0038 084B     		ldr	r3, .L3+16
  71 003a 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/screen.c ****             screen_TXBITCLKTX_COMPLETE_REG = ((screen_NUMBER_OF_DATA_BITS +
  72              		.loc 1 139 0
  73 003c 4722     		movs	r2, #71
  74 003e 1033     		adds	r3, r3, #16
  75 0040 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC5/screen.c ****                         screen_NUMBER_OF_START_BIT) * screen_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/screen.c ****         #else
 142:Generated_Source\PSoC5/screen.c ****             screen_TXBITCTR_PERIOD_REG = ((screen_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/screen.c ****                         screen_NUMBER_OF_START_BIT) * screen_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/screen.c ****         #endif /* End screen_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/screen.c **** 
 146:Generated_Source\PSoC5/screen.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/screen.c ****         #if (screen_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/screen.c ****             screen_TXSTATUS_MASK_REG = screen_TX_STS_FIFO_EMPTY;
  76              		.loc 1 148 0
  77 0042 0222     		movs	r2, #2
  78 0044 5233     		adds	r3, r3, #82
  79 0046 1A70     		strb	r2, [r3]
  80 0048 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 5


  81              	.L4:
  82 004a 00BF     		.align	2
  83              	.L3:
  84 004c 00000000 		.word	screen_RXISR
  85 0050 00000000 		.word	.LANCHOR0
  86 0054 85640040 		.word	1073767557
  87 0058 00000000 		.word	screen_TXISR
  88 005c 25640040 		.word	1073767461
  89              		.cfi_endproc
  90              	.LFE1:
  91              		.size	screen_Init, .-screen_Init
  92              		.section	.text.screen_Enable,"ax",%progbits
  93              		.align	2
  94              		.global	screen_Enable
  95              		.thumb
  96              		.thumb_func
  97              		.type	screen_Enable, %function
  98              	screen_Enable:
  99              	.LFB2:
 149:Generated_Source\PSoC5/screen.c ****         #else
 150:Generated_Source\PSoC5/screen.c ****             screen_TXSTATUS_MASK_REG = screen_INIT_TX_INTERRUPTS_MASK;
 151:Generated_Source\PSoC5/screen.c ****         #endif /*End screen_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/screen.c **** 
 153:Generated_Source\PSoC5/screen.c ****     #endif /* End screen_TX_ENABLED */
 154:Generated_Source\PSoC5/screen.c **** 
 155:Generated_Source\PSoC5/screen.c ****     #if(screen_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/screen.c ****         screen_WriteControlRegister( \
 157:Generated_Source\PSoC5/screen.c ****             (screen_ReadControlRegister() & (uint8)~screen_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/screen.c ****             (uint8)(screen_PARITY_TYPE << screen_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/screen.c ****     #endif /* End screen_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/screen.c **** }
 161:Generated_Source\PSoC5/screen.c **** 
 162:Generated_Source\PSoC5/screen.c **** 
 163:Generated_Source\PSoC5/screen.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/screen.c **** * Function Name: screen_Enable
 165:Generated_Source\PSoC5/screen.c **** ********************************************************************************
 166:Generated_Source\PSoC5/screen.c **** *
 167:Generated_Source\PSoC5/screen.c **** * Summary:
 168:Generated_Source\PSoC5/screen.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/screen.c **** *  to call screen_Enable() because the screen_Start() API
 170:Generated_Source\PSoC5/screen.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/screen.c **** *  operation.
 172:Generated_Source\PSoC5/screen.c **** 
 173:Generated_Source\PSoC5/screen.c **** * Parameters:
 174:Generated_Source\PSoC5/screen.c **** *  None.
 175:Generated_Source\PSoC5/screen.c **** *
 176:Generated_Source\PSoC5/screen.c **** * Return:
 177:Generated_Source\PSoC5/screen.c **** *  None.
 178:Generated_Source\PSoC5/screen.c **** *
 179:Generated_Source\PSoC5/screen.c **** * Global Variables:
 180:Generated_Source\PSoC5/screen.c **** *  screen_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/screen.c **** *
 182:Generated_Source\PSoC5/screen.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/screen.c **** void screen_Enable(void) 
 184:Generated_Source\PSoC5/screen.c **** {
 100              		.loc 1 184 0
 101              		.cfi_startproc
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 6


 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104 0000 10B5     		push	{r4, lr}
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 4, -8
 107              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/screen.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/screen.c ****     enableInterrupts = CyEnterCriticalSection();
 108              		.loc 1 186 0
 109 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 110              	.LVL4:
 111 0006 0446     		mov	r4, r0
 112              	.LVL5:
 187:Generated_Source\PSoC5/screen.c **** 
 188:Generated_Source\PSoC5/screen.c ****     #if (screen_RX_ENABLED || screen_HD_ENABLED)
 189:Generated_Source\PSoC5/screen.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/screen.c ****         screen_RXBITCTR_CONTROL_REG |= screen_CNTR_ENABLE;
 113              		.loc 1 190 0
 114 0008 0E4A     		ldr	r2, .L7
 115 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 116 000c 43F02003 		orr	r3, r3, #32
 117 0010 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/screen.c **** 
 192:Generated_Source\PSoC5/screen.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/screen.c ****         screen_RXSTATUS_ACTL_REG  |= screen_INT_ENABLE;
 118              		.loc 1 193 0
 119 0012 02F20112 		addw	r2, r2, #257
 120 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 121 0018 43F01003 		orr	r3, r3, #16
 122 001c 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/screen.c **** 
 195:Generated_Source\PSoC5/screen.c ****         #if (screen_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/screen.c ****             screen_EnableRxInt();
 123              		.loc 1 196 0
 124 001e 0A4A     		ldr	r2, .L7+4
 125 0020 0223     		movs	r3, #2
 126 0022 1360     		str	r3, [r2]
 197:Generated_Source\PSoC5/screen.c **** 
 198:Generated_Source\PSoC5/screen.c ****             #if (screen_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/screen.c ****                 screen_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/screen.c ****             #endif /* (screen_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/screen.c ****         #endif /* (screen_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/screen.c ****     #endif /* (screen_RX_ENABLED || screen_HD_ENABLED) */
 203:Generated_Source\PSoC5/screen.c **** 
 204:Generated_Source\PSoC5/screen.c ****     #if(screen_TX_ENABLED)
 205:Generated_Source\PSoC5/screen.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/screen.c ****         #if(!screen_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/screen.c ****             screen_TXBITCTR_CONTROL_REG |= screen_CNTR_ENABLE;
 208:Generated_Source\PSoC5/screen.c ****         #endif /* End screen_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/screen.c **** 
 210:Generated_Source\PSoC5/screen.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/screen.c ****         screen_TXSTATUS_ACTL_REG |= screen_INT_ENABLE;
 127              		.loc 1 211 0
 128 0024 0949     		ldr	r1, .L7+8
 129 0026 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 130 0028 43F01003 		orr	r3, r3, #16
 131 002c 0B70     		strb	r3, [r1]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 7


 212:Generated_Source\PSoC5/screen.c ****         #if (screen_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/screen.c ****             screen_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 132              		.loc 1 213 0
 133 002e 0423     		movs	r3, #4
 134 0030 0749     		ldr	r1, .L7+12
 135 0032 0B60     		str	r3, [r1]
 214:Generated_Source\PSoC5/screen.c ****             screen_EnableTxInt();
 136              		.loc 1 214 0
 137 0034 1360     		str	r3, [r2]
 215:Generated_Source\PSoC5/screen.c ****         #endif /* (screen_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/screen.c ****      #endif /* (screen_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/screen.c **** 
 218:Generated_Source\PSoC5/screen.c ****     #if (screen_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/screen.c ****         screen_IntClock_Start();  /* Enable the clock */
 138              		.loc 1 219 0
 139 0036 FFF7FEFF 		bl	screen_IntClock_Start
 140              	.LVL6:
 220:Generated_Source\PSoC5/screen.c ****     #endif /* (screen_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/screen.c **** 
 222:Generated_Source\PSoC5/screen.c ****     CyExitCriticalSection(enableInterrupts);
 141              		.loc 1 222 0
 142 003a 2046     		mov	r0, r4
 143 003c FFF7FEFF 		bl	CyExitCriticalSection
 144              	.LVL7:
 145 0040 10BD     		pop	{r4, pc}
 146              	.LVL8:
 147              	.L8:
 148 0042 00BF     		.align	2
 149              	.L7:
 150 0044 95640040 		.word	1073767573
 151 0048 00E100E0 		.word	-536813312
 152 004c 97640040 		.word	1073767575
 153 0050 80E200E0 		.word	-536812928
 154              		.cfi_endproc
 155              	.LFE2:
 156              		.size	screen_Enable, .-screen_Enable
 157              		.section	.text.screen_Start,"ax",%progbits
 158              		.align	2
 159              		.global	screen_Start
 160              		.thumb
 161              		.thumb_func
 162              		.type	screen_Start, %function
 163              	screen_Start:
 164              	.LFB0:
  77:Generated_Source\PSoC5/screen.c ****     /* If not initialized then initialize all required hardware and software */
 165              		.loc 1 77 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169 0000 08B5     		push	{r3, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 3, -8
 172              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/screen.c ****     {
 173              		.loc 1 79 0
 174 0002 054B     		ldr	r3, .L12
 175 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 8


 176 0006 23B9     		cbnz	r3, .L10
  81:Generated_Source\PSoC5/screen.c ****         screen_initVar = 1u;
 177              		.loc 1 81 0
 178 0008 FFF7FEFF 		bl	screen_Init
 179              	.LVL9:
  82:Generated_Source\PSoC5/screen.c ****     }
 180              		.loc 1 82 0
 181 000c 0122     		movs	r2, #1
 182 000e 024B     		ldr	r3, .L12
 183 0010 5A70     		strb	r2, [r3, #1]
 184              	.L10:
  85:Generated_Source\PSoC5/screen.c **** }
 185              		.loc 1 85 0
 186 0012 FFF7FEFF 		bl	screen_Enable
 187              	.LVL10:
 188 0016 08BD     		pop	{r3, pc}
 189              	.L13:
 190              		.align	2
 191              	.L12:
 192 0018 00000000 		.word	.LANCHOR0
 193              		.cfi_endproc
 194              	.LFE0:
 195              		.size	screen_Start, .-screen_Start
 196              		.section	.text.screen_Stop,"ax",%progbits
 197              		.align	2
 198              		.global	screen_Stop
 199              		.thumb
 200              		.thumb_func
 201              		.type	screen_Stop, %function
 202              	screen_Stop:
 203              	.LFB3:
 223:Generated_Source\PSoC5/screen.c **** }
 224:Generated_Source\PSoC5/screen.c **** 
 225:Generated_Source\PSoC5/screen.c **** 
 226:Generated_Source\PSoC5/screen.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/screen.c **** * Function Name: screen_Stop
 228:Generated_Source\PSoC5/screen.c **** ********************************************************************************
 229:Generated_Source\PSoC5/screen.c **** *
 230:Generated_Source\PSoC5/screen.c **** * Summary:
 231:Generated_Source\PSoC5/screen.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/screen.c **** *
 233:Generated_Source\PSoC5/screen.c **** * Parameters:
 234:Generated_Source\PSoC5/screen.c **** *  None.
 235:Generated_Source\PSoC5/screen.c **** *
 236:Generated_Source\PSoC5/screen.c **** * Return:
 237:Generated_Source\PSoC5/screen.c **** *  None.
 238:Generated_Source\PSoC5/screen.c **** *
 239:Generated_Source\PSoC5/screen.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/screen.c **** void screen_Stop(void) 
 241:Generated_Source\PSoC5/screen.c **** {
 204              		.loc 1 241 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208 0000 10B5     		push	{r4, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 4, -8
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 9


 211              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/screen.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/screen.c ****     enableInterrupts = CyEnterCriticalSection();
 212              		.loc 1 243 0
 213 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 214              	.LVL11:
 215 0006 0446     		mov	r4, r0
 216              	.LVL12:
 244:Generated_Source\PSoC5/screen.c **** 
 245:Generated_Source\PSoC5/screen.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/screen.c ****     #if (screen_RX_ENABLED || screen_HD_ENABLED)
 247:Generated_Source\PSoC5/screen.c ****         screen_RXBITCTR_CONTROL_REG &= (uint8) ~screen_CNTR_ENABLE;
 217              		.loc 1 247 0
 218 0008 0C4A     		ldr	r2, .L16
 219 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 220 000c 03F0DF03 		and	r3, r3, #223
 221 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/screen.c ****     #endif /* (screen_RX_ENABLED || screen_HD_ENABLED) */
 249:Generated_Source\PSoC5/screen.c **** 
 250:Generated_Source\PSoC5/screen.c ****     #if (screen_TX_ENABLED)
 251:Generated_Source\PSoC5/screen.c ****         #if(!screen_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/screen.c ****             screen_TXBITCTR_CONTROL_REG &= (uint8) ~screen_CNTR_ENABLE;
 253:Generated_Source\PSoC5/screen.c ****         #endif /* (!screen_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/screen.c ****     #endif /* (screen_TX_ENABLED) */
 255:Generated_Source\PSoC5/screen.c **** 
 256:Generated_Source\PSoC5/screen.c ****     #if (screen_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/screen.c ****         screen_IntClock_Stop();   /* Disable the clock */
 222              		.loc 1 257 0
 223 0012 FFF7FEFF 		bl	screen_IntClock_Stop
 224              	.LVL13:
 258:Generated_Source\PSoC5/screen.c ****     #endif /* (screen_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/screen.c **** 
 260:Generated_Source\PSoC5/screen.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/screen.c ****     #if (screen_RX_ENABLED || screen_HD_ENABLED)
 262:Generated_Source\PSoC5/screen.c ****         screen_RXSTATUS_ACTL_REG  &= (uint8) ~screen_INT_ENABLE;
 225              		.loc 1 262 0
 226 0016 0A4A     		ldr	r2, .L16+4
 227 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 228 001a 03F0EF03 		and	r3, r3, #239
 229 001e 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/screen.c **** 
 264:Generated_Source\PSoC5/screen.c ****         #if (screen_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/screen.c ****             screen_DisableRxInt();
 230              		.loc 1 265 0
 231 0020 084A     		ldr	r2, .L16+8
 232 0022 0223     		movs	r3, #2
 233 0024 1360     		str	r3, [r2]
 266:Generated_Source\PSoC5/screen.c ****         #endif /* (screen_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/screen.c ****     #endif /* (screen_RX_ENABLED || screen_HD_ENABLED) */
 268:Generated_Source\PSoC5/screen.c **** 
 269:Generated_Source\PSoC5/screen.c ****     #if (screen_TX_ENABLED)
 270:Generated_Source\PSoC5/screen.c ****         screen_TXSTATUS_ACTL_REG &= (uint8) ~screen_INT_ENABLE;
 234              		.loc 1 270 0
 235 0026 0849     		ldr	r1, .L16+12
 236 0028 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 237 002a 03F0EF03 		and	r3, r3, #239
 238 002e 0B70     		strb	r3, [r1]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 10


 271:Generated_Source\PSoC5/screen.c **** 
 272:Generated_Source\PSoC5/screen.c ****         #if (screen_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/screen.c ****             screen_DisableTxInt();
 239              		.loc 1 273 0
 240 0030 0423     		movs	r3, #4
 241 0032 1360     		str	r3, [r2]
 274:Generated_Source\PSoC5/screen.c ****         #endif /* (screen_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/screen.c ****     #endif /* (screen_TX_ENABLED) */
 276:Generated_Source\PSoC5/screen.c **** 
 277:Generated_Source\PSoC5/screen.c ****     CyExitCriticalSection(enableInterrupts);
 242              		.loc 1 277 0
 243 0034 2046     		mov	r0, r4
 244 0036 FFF7FEFF 		bl	CyExitCriticalSection
 245              	.LVL14:
 246 003a 10BD     		pop	{r4, pc}
 247              	.LVL15:
 248              	.L17:
 249              		.align	2
 250              	.L16:
 251 003c 95640040 		.word	1073767573
 252 0040 96650040 		.word	1073767830
 253 0044 80E100E0 		.word	-536813184
 254 0048 97640040 		.word	1073767575
 255              		.cfi_endproc
 256              	.LFE3:
 257              		.size	screen_Stop, .-screen_Stop
 258              		.section	.text.screen_ReadControlRegister,"ax",%progbits
 259              		.align	2
 260              		.global	screen_ReadControlRegister
 261              		.thumb
 262              		.thumb_func
 263              		.type	screen_ReadControlRegister, %function
 264              	screen_ReadControlRegister:
 265              	.LFB4:
 278:Generated_Source\PSoC5/screen.c **** }
 279:Generated_Source\PSoC5/screen.c **** 
 280:Generated_Source\PSoC5/screen.c **** 
 281:Generated_Source\PSoC5/screen.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/screen.c **** * Function Name: screen_ReadControlRegister
 283:Generated_Source\PSoC5/screen.c **** ********************************************************************************
 284:Generated_Source\PSoC5/screen.c **** *
 285:Generated_Source\PSoC5/screen.c **** * Summary:
 286:Generated_Source\PSoC5/screen.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/screen.c **** *
 288:Generated_Source\PSoC5/screen.c **** * Parameters:
 289:Generated_Source\PSoC5/screen.c **** *  None.
 290:Generated_Source\PSoC5/screen.c **** *
 291:Generated_Source\PSoC5/screen.c **** * Return:
 292:Generated_Source\PSoC5/screen.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/screen.c **** *
 294:Generated_Source\PSoC5/screen.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/screen.c **** uint8 screen_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/screen.c **** {
 266              		.loc 1 296 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 11


 270              		@ link register save eliminated.
 297:Generated_Source\PSoC5/screen.c ****     #if (screen_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/screen.c ****         return(0u);
 299:Generated_Source\PSoC5/screen.c ****     #else
 300:Generated_Source\PSoC5/screen.c ****         return(screen_CONTROL_REG);
 301:Generated_Source\PSoC5/screen.c ****     #endif /* (screen_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/screen.c **** }
 271              		.loc 1 302 0
 272 0000 0020     		movs	r0, #0
 273 0002 7047     		bx	lr
 274              		.cfi_endproc
 275              	.LFE4:
 276              		.size	screen_ReadControlRegister, .-screen_ReadControlRegister
 277              		.section	.text.screen_WriteControlRegister,"ax",%progbits
 278              		.align	2
 279              		.global	screen_WriteControlRegister
 280              		.thumb
 281              		.thumb_func
 282              		.type	screen_WriteControlRegister, %function
 283              	screen_WriteControlRegister:
 284              	.LFB5:
 303:Generated_Source\PSoC5/screen.c **** 
 304:Generated_Source\PSoC5/screen.c **** 
 305:Generated_Source\PSoC5/screen.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/screen.c **** * Function Name: screen_WriteControlRegister
 307:Generated_Source\PSoC5/screen.c **** ********************************************************************************
 308:Generated_Source\PSoC5/screen.c **** *
 309:Generated_Source\PSoC5/screen.c **** * Summary:
 310:Generated_Source\PSoC5/screen.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/screen.c **** *
 312:Generated_Source\PSoC5/screen.c **** * Parameters:
 313:Generated_Source\PSoC5/screen.c **** *  control:  control register value
 314:Generated_Source\PSoC5/screen.c **** *
 315:Generated_Source\PSoC5/screen.c **** * Return:
 316:Generated_Source\PSoC5/screen.c **** *  None.
 317:Generated_Source\PSoC5/screen.c **** *
 318:Generated_Source\PSoC5/screen.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/screen.c **** void  screen_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/screen.c **** {
 285              		.loc 1 320 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 290              	.LVL16:
 291 0000 7047     		bx	lr
 292              		.cfi_endproc
 293              	.LFE5:
 294              		.size	screen_WriteControlRegister, .-screen_WriteControlRegister
 295 0002 00BF     		.section	.text.screen_SetRxInterruptMode,"ax",%progbits
 296              		.align	2
 297              		.global	screen_SetRxInterruptMode
 298              		.thumb
 299              		.thumb_func
 300              		.type	screen_SetRxInterruptMode, %function
 301              	screen_SetRxInterruptMode:
 302              	.LFB6:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 12


 321:Generated_Source\PSoC5/screen.c ****     #if (screen_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/screen.c ****         if(0u != control)
 323:Generated_Source\PSoC5/screen.c ****         {
 324:Generated_Source\PSoC5/screen.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/screen.c ****         }
 326:Generated_Source\PSoC5/screen.c ****     #else
 327:Generated_Source\PSoC5/screen.c ****        screen_CONTROL_REG = control;
 328:Generated_Source\PSoC5/screen.c ****     #endif /* (screen_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/screen.c **** }
 330:Generated_Source\PSoC5/screen.c **** 
 331:Generated_Source\PSoC5/screen.c **** 
 332:Generated_Source\PSoC5/screen.c **** #if(screen_RX_ENABLED || screen_HD_ENABLED)
 333:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_SetRxInterruptMode
 335:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/screen.c ****     *
 337:Generated_Source\PSoC5/screen.c ****     * Summary:
 338:Generated_Source\PSoC5/screen.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/screen.c ****     *
 340:Generated_Source\PSoC5/screen.c ****     * Parameters:
 341:Generated_Source\PSoC5/screen.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/screen.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/screen.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/screen.c ****     *      screen_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/screen.c ****     *      screen_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/screen.c ****     *      screen_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/screen.c ****     *      screen_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/screen.c ****     *      screen_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/screen.c ****     *      screen_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/screen.c ****     *      screen_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/screen.c ****     *
 352:Generated_Source\PSoC5/screen.c ****     * Return:
 353:Generated_Source\PSoC5/screen.c ****     *  None.
 354:Generated_Source\PSoC5/screen.c ****     *
 355:Generated_Source\PSoC5/screen.c ****     * Theory:
 356:Generated_Source\PSoC5/screen.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/screen.c ****     *
 358:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/screen.c ****     void screen_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/screen.c ****     {
 303              		.loc 1 360 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308              	.LVL17:
 361:Generated_Source\PSoC5/screen.c ****         screen_RXSTATUS_MASK_REG  = intSrc;
 309              		.loc 1 361 0
 310 0000 014B     		ldr	r3, .L21
 311 0002 1870     		strb	r0, [r3]
 312 0004 7047     		bx	lr
 313              	.L22:
 314 0006 00BF     		.align	2
 315              	.L21:
 316 0008 86650040 		.word	1073767814
 317              		.cfi_endproc
 318              	.LFE6:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 13


 319              		.size	screen_SetRxInterruptMode, .-screen_SetRxInterruptMode
 320              		.section	.text.screen_ReadRxData,"ax",%progbits
 321              		.align	2
 322              		.global	screen_ReadRxData
 323              		.thumb
 324              		.thumb_func
 325              		.type	screen_ReadRxData, %function
 326              	screen_ReadRxData:
 327              	.LFB7:
 362:Generated_Source\PSoC5/screen.c ****     }
 363:Generated_Source\PSoC5/screen.c **** 
 364:Generated_Source\PSoC5/screen.c **** 
 365:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_ReadRxData
 367:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/screen.c ****     *
 369:Generated_Source\PSoC5/screen.c ****     * Summary:
 370:Generated_Source\PSoC5/screen.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/screen.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/screen.c ****     *
 373:Generated_Source\PSoC5/screen.c ****     * Parameters:
 374:Generated_Source\PSoC5/screen.c ****     *  None.
 375:Generated_Source\PSoC5/screen.c ****     *
 376:Generated_Source\PSoC5/screen.c ****     * Return:
 377:Generated_Source\PSoC5/screen.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/screen.c ****     *
 379:Generated_Source\PSoC5/screen.c ****     * Global Variables:
 380:Generated_Source\PSoC5/screen.c ****     *  screen_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/screen.c ****     *  screen_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/screen.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/screen.c ****     *  screen_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/screen.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/screen.c ****     *  screen_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/screen.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/screen.c ****     *
 388:Generated_Source\PSoC5/screen.c ****     * Reentrant:
 389:Generated_Source\PSoC5/screen.c ****     *  No.
 390:Generated_Source\PSoC5/screen.c ****     *
 391:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/screen.c ****     uint8 screen_ReadRxData(void) 
 393:Generated_Source\PSoC5/screen.c ****     {
 328              		.loc 1 393 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 394:Generated_Source\PSoC5/screen.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/screen.c **** 
 396:Generated_Source\PSoC5/screen.c ****     #if (screen_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/screen.c **** 
 398:Generated_Source\PSoC5/screen.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/screen.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/screen.c **** 
 401:Generated_Source\PSoC5/screen.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/screen.c ****         screen_DisableRxInt();
 333              		.loc 1 402 0
 334 0000 0222     		movs	r2, #2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 14


 335 0002 134B     		ldr	r3, .L29
 336 0004 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC5/screen.c **** 
 404:Generated_Source\PSoC5/screen.c ****         locRxBufferRead  = screen_rxBufferRead;
 337              		.loc 1 404 0
 338 0006 134A     		ldr	r2, .L29+4
 339 0008 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 340 000a DBB2     		uxtb	r3, r3
 341              	.LVL18:
 405:Generated_Source\PSoC5/screen.c ****         locRxBufferWrite = screen_rxBufferWrite;
 342              		.loc 1 405 0
 343 000c D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 344 000e C9B2     		uxtb	r1, r1
 345              	.LVL19:
 406:Generated_Source\PSoC5/screen.c **** 
 407:Generated_Source\PSoC5/screen.c ****         if( (screen_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 346              		.loc 1 407 0
 347 0010 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 348 0012 12F0FF0F 		tst	r2, #255
 349 0016 01D1     		bne	.L24
 350              		.loc 1 407 0 is_stmt 0 discriminator 1
 351 0018 8B42     		cmp	r3, r1
 352 001a 11D0     		beq	.L25
 353              	.L24:
 408:Generated_Source\PSoC5/screen.c ****         {
 409:Generated_Source\PSoC5/screen.c ****             rxData = screen_rxBuffer[locRxBufferRead];
 354              		.loc 1 409 0 is_stmt 1
 355 001c 0E4A     		ldr	r2, .L29+8
 356 001e D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 357 0020 C0B2     		uxtb	r0, r0
 358              	.LVL20:
 410:Generated_Source\PSoC5/screen.c ****             locRxBufferRead++;
 359              		.loc 1 410 0
 360 0022 0133     		adds	r3, r3, #1
 361              	.LVL21:
 362 0024 DBB2     		uxtb	r3, r3
 363              	.LVL22:
 411:Generated_Source\PSoC5/screen.c **** 
 412:Generated_Source\PSoC5/screen.c ****             if(locRxBufferRead >= screen_RX_BUFFER_SIZE)
 364              		.loc 1 412 0
 365 0026 132B     		cmp	r3, #19
 366 0028 00D9     		bls	.L26
 413:Generated_Source\PSoC5/screen.c ****             {
 414:Generated_Source\PSoC5/screen.c ****                 locRxBufferRead = 0u;
 367              		.loc 1 414 0
 368 002a 0023     		movs	r3, #0
 369              	.LVL23:
 370              	.L26:
 415:Generated_Source\PSoC5/screen.c ****             }
 416:Generated_Source\PSoC5/screen.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/screen.c ****             screen_rxBufferRead = locRxBufferRead;
 371              		.loc 1 417 0
 372 002c 094A     		ldr	r2, .L29+4
 373 002e 9370     		strb	r3, [r2, #2]
 418:Generated_Source\PSoC5/screen.c **** 
 419:Generated_Source\PSoC5/screen.c ****             if(screen_rxBufferLoopDetect != 0u)
 374              		.loc 1 419 0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 15


 375 0030 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 376              	.LVL24:
 377 0032 13F0FF0F 		tst	r3, #255
 378 0036 06D0     		beq	.L27
 420:Generated_Source\PSoC5/screen.c ****             {
 421:Generated_Source\PSoC5/screen.c ****                 screen_rxBufferLoopDetect = 0u;
 379              		.loc 1 421 0
 380 0038 0022     		movs	r2, #0
 381 003a 064B     		ldr	r3, .L29+4
 382 003c 1A71     		strb	r2, [r3, #4]
 383              	.LVL25:
 384 003e 02E0     		b	.L27
 385              	.LVL26:
 386              	.L25:
 422:Generated_Source\PSoC5/screen.c ****                 #if ((screen_RX_INTERRUPT_ENABLED) && (screen_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/screen.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/screen.c ****                     #if( screen_HD_ENABLED )
 425:Generated_Source\PSoC5/screen.c ****                         if((screen_CONTROL_REG & screen_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/screen.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/screen.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/screen.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/screen.c ****                             */
 430:Generated_Source\PSoC5/screen.c ****                             screen_RXSTATUS_MASK_REG  |= screen_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/screen.c ****                         }
 432:Generated_Source\PSoC5/screen.c ****                     #else
 433:Generated_Source\PSoC5/screen.c ****                         screen_RXSTATUS_MASK_REG  |= screen_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/screen.c ****                     #endif /* end screen_HD_ENABLED */
 435:Generated_Source\PSoC5/screen.c ****                 #endif /* ((screen_RX_INTERRUPT_ENABLED) && (screen_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/screen.c ****             }
 437:Generated_Source\PSoC5/screen.c ****         }
 438:Generated_Source\PSoC5/screen.c ****         else
 439:Generated_Source\PSoC5/screen.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/screen.c ****             rxData = screen_RXDATA_REG;
 387              		.loc 1 440 0
 388 0040 064B     		ldr	r3, .L29+12
 389              	.LVL27:
 390 0042 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 391 0044 C0B2     		uxtb	r0, r0
 392              	.LVL28:
 393              	.L27:
 441:Generated_Source\PSoC5/screen.c ****         }
 442:Generated_Source\PSoC5/screen.c **** 
 443:Generated_Source\PSoC5/screen.c ****         screen_EnableRxInt();
 394              		.loc 1 443 0
 395 0046 0222     		movs	r2, #2
 396 0048 054B     		ldr	r3, .L29+16
 397 004a 1A60     		str	r2, [r3]
 444:Generated_Source\PSoC5/screen.c **** 
 445:Generated_Source\PSoC5/screen.c ****     #else
 446:Generated_Source\PSoC5/screen.c **** 
 447:Generated_Source\PSoC5/screen.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/screen.c ****         rxData = screen_RXDATA_REG;
 449:Generated_Source\PSoC5/screen.c **** 
 450:Generated_Source\PSoC5/screen.c ****     #endif /* (screen_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/screen.c **** 
 452:Generated_Source\PSoC5/screen.c ****         return(rxData);
 453:Generated_Source\PSoC5/screen.c ****     }
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 16


 398              		.loc 1 453 0
 399 004c 7047     		bx	lr
 400              	.L30:
 401 004e 00BF     		.align	2
 402              	.L29:
 403 0050 80E100E0 		.word	-536813184
 404 0054 00000000 		.word	.LANCHOR0
 405 0058 00000000 		.word	screen_rxBuffer
 406 005c 46650040 		.word	1073767750
 407 0060 00E100E0 		.word	-536813312
 408              		.cfi_endproc
 409              	.LFE7:
 410              		.size	screen_ReadRxData, .-screen_ReadRxData
 411              		.section	.text.screen_ReadRxStatus,"ax",%progbits
 412              		.align	2
 413              		.global	screen_ReadRxStatus
 414              		.thumb
 415              		.thumb_func
 416              		.type	screen_ReadRxStatus, %function
 417              	screen_ReadRxStatus:
 418              	.LFB8:
 454:Generated_Source\PSoC5/screen.c **** 
 455:Generated_Source\PSoC5/screen.c **** 
 456:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_ReadRxStatus
 458:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/screen.c ****     *
 460:Generated_Source\PSoC5/screen.c ****     * Summary:
 461:Generated_Source\PSoC5/screen.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/screen.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/screen.c ****     *
 464:Generated_Source\PSoC5/screen.c ****     * Parameters:
 465:Generated_Source\PSoC5/screen.c ****     *  None.
 466:Generated_Source\PSoC5/screen.c ****     *
 467:Generated_Source\PSoC5/screen.c ****     * Return:
 468:Generated_Source\PSoC5/screen.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/screen.c ****     *
 470:Generated_Source\PSoC5/screen.c ****     * Side Effect:
 471:Generated_Source\PSoC5/screen.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/screen.c ****     *  screen_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/screen.c ****     *  screen_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/screen.c ****     *  register read.
 475:Generated_Source\PSoC5/screen.c ****     *
 476:Generated_Source\PSoC5/screen.c ****     * Global Variables:
 477:Generated_Source\PSoC5/screen.c ****     *  screen_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/screen.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/screen.c ****     *   screen_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/screen.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/screen.c ****     *   screen_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/screen.c ****     *   bits.
 483:Generated_Source\PSoC5/screen.c ****     *
 484:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/screen.c ****     uint8 screen_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/screen.c ****     {
 419              		.loc 1 486 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 17


 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 487:Generated_Source\PSoC5/screen.c ****         uint8 status;
 488:Generated_Source\PSoC5/screen.c **** 
 489:Generated_Source\PSoC5/screen.c ****         status = screen_RXSTATUS_REG & screen_RX_HW_MASK;
 424              		.loc 1 489 0
 425 0000 074B     		ldr	r3, .L33
 426 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 427 0004 00F07F00 		and	r0, r0, #127
 428              	.LVL29:
 490:Generated_Source\PSoC5/screen.c **** 
 491:Generated_Source\PSoC5/screen.c ****     #if (screen_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/screen.c ****         if(screen_rxBufferOverflow != 0u)
 429              		.loc 1 492 0
 430 0008 064B     		ldr	r3, .L33+4
 431 000a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 432 000c 13F0FF0F 		tst	r3, #255
 433 0010 04D0     		beq	.L32
 493:Generated_Source\PSoC5/screen.c ****         {
 494:Generated_Source\PSoC5/screen.c ****             status |= screen_RX_STS_SOFT_BUFF_OVER;
 434              		.loc 1 494 0
 435 0012 40F08000 		orr	r0, r0, #128
 436              	.LVL30:
 495:Generated_Source\PSoC5/screen.c ****             screen_rxBufferOverflow = 0u;
 437              		.loc 1 495 0
 438 0016 0022     		movs	r2, #0
 439 0018 024B     		ldr	r3, .L33+4
 440 001a 5A71     		strb	r2, [r3, #5]
 441              	.L32:
 496:Generated_Source\PSoC5/screen.c ****         }
 497:Generated_Source\PSoC5/screen.c ****     #endif /* (screen_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/screen.c **** 
 499:Generated_Source\PSoC5/screen.c ****         return(status);
 500:Generated_Source\PSoC5/screen.c ****     }
 442              		.loc 1 500 0
 443 001c 7047     		bx	lr
 444              	.L34:
 445 001e 00BF     		.align	2
 446              	.L33:
 447 0020 66650040 		.word	1073767782
 448 0024 00000000 		.word	.LANCHOR0
 449              		.cfi_endproc
 450              	.LFE8:
 451              		.size	screen_ReadRxStatus, .-screen_ReadRxStatus
 452              		.section	.text.screen_GetChar,"ax",%progbits
 453              		.align	2
 454              		.global	screen_GetChar
 455              		.thumb
 456              		.thumb_func
 457              		.type	screen_GetChar, %function
 458              	screen_GetChar:
 459              	.LFB9:
 501:Generated_Source\PSoC5/screen.c **** 
 502:Generated_Source\PSoC5/screen.c **** 
 503:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_GetChar
 505:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 18


 506:Generated_Source\PSoC5/screen.c ****     *
 507:Generated_Source\PSoC5/screen.c ****     * Summary:
 508:Generated_Source\PSoC5/screen.c ****     *  Returns the last received byte of data. screen_GetChar() is
 509:Generated_Source\PSoC5/screen.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/screen.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/screen.c ****     *
 512:Generated_Source\PSoC5/screen.c ****     * Parameters:
 513:Generated_Source\PSoC5/screen.c ****     *  None.
 514:Generated_Source\PSoC5/screen.c ****     *
 515:Generated_Source\PSoC5/screen.c ****     * Return:
 516:Generated_Source\PSoC5/screen.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/screen.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/screen.c ****     *
 519:Generated_Source\PSoC5/screen.c ****     * Global Variables:
 520:Generated_Source\PSoC5/screen.c ****     *  screen_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/screen.c ****     *  screen_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/screen.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/screen.c ****     *  screen_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/screen.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/screen.c ****     *  screen_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/screen.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/screen.c ****     *
 528:Generated_Source\PSoC5/screen.c ****     * Reentrant:
 529:Generated_Source\PSoC5/screen.c ****     *  No.
 530:Generated_Source\PSoC5/screen.c ****     *
 531:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/screen.c ****     uint8 screen_GetChar(void) 
 533:Generated_Source\PSoC5/screen.c ****     {
 460              		.loc 1 533 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              		@ link register save eliminated.
 465              	.LVL31:
 534:Generated_Source\PSoC5/screen.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/screen.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/screen.c **** 
 537:Generated_Source\PSoC5/screen.c ****     #if (screen_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/screen.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/screen.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/screen.c **** 
 541:Generated_Source\PSoC5/screen.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/screen.c ****         screen_DisableRxInt();
 466              		.loc 1 542 0
 467 0000 0222     		movs	r2, #2
 468 0002 194B     		ldr	r3, .L43
 469 0004 1A60     		str	r2, [r3]
 543:Generated_Source\PSoC5/screen.c **** 
 544:Generated_Source\PSoC5/screen.c ****         locRxBufferRead  = screen_rxBufferRead;
 470              		.loc 1 544 0
 471 0006 194A     		ldr	r2, .L43+4
 472 0008 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 473 000a DBB2     		uxtb	r3, r3
 474              	.LVL32:
 545:Generated_Source\PSoC5/screen.c ****         locRxBufferWrite = screen_rxBufferWrite;
 475              		.loc 1 545 0
 476 000c D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 19


 477 000e C9B2     		uxtb	r1, r1
 478              	.LVL33:
 546:Generated_Source\PSoC5/screen.c **** 
 547:Generated_Source\PSoC5/screen.c ****         if( (screen_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 479              		.loc 1 547 0
 480 0010 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 481 0012 12F0FF0F 		tst	r2, #255
 482 0016 01D1     		bne	.L36
 483              		.loc 1 547 0 is_stmt 0 discriminator 1
 484 0018 8B42     		cmp	r3, r1
 485 001a 11D0     		beq	.L37
 486              	.L36:
 548:Generated_Source\PSoC5/screen.c ****         {
 549:Generated_Source\PSoC5/screen.c ****             rxData = screen_rxBuffer[locRxBufferRead];
 487              		.loc 1 549 0 is_stmt 1
 488 001c 144A     		ldr	r2, .L43+8
 489 001e D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 490 0020 C0B2     		uxtb	r0, r0
 491              	.LVL34:
 550:Generated_Source\PSoC5/screen.c ****             locRxBufferRead++;
 492              		.loc 1 550 0
 493 0022 0133     		adds	r3, r3, #1
 494              	.LVL35:
 495 0024 DBB2     		uxtb	r3, r3
 496              	.LVL36:
 551:Generated_Source\PSoC5/screen.c ****             if(locRxBufferRead >= screen_RX_BUFFER_SIZE)
 497              		.loc 1 551 0
 498 0026 132B     		cmp	r3, #19
 499 0028 00D9     		bls	.L38
 552:Generated_Source\PSoC5/screen.c ****             {
 553:Generated_Source\PSoC5/screen.c ****                 locRxBufferRead = 0u;
 500              		.loc 1 553 0
 501 002a 0023     		movs	r3, #0
 502              	.LVL37:
 503              	.L38:
 554:Generated_Source\PSoC5/screen.c ****             }
 555:Generated_Source\PSoC5/screen.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/screen.c ****             screen_rxBufferRead = locRxBufferRead;
 504              		.loc 1 556 0
 505 002c 0F4A     		ldr	r2, .L43+4
 506 002e 9370     		strb	r3, [r2, #2]
 557:Generated_Source\PSoC5/screen.c **** 
 558:Generated_Source\PSoC5/screen.c ****             if(screen_rxBufferLoopDetect != 0u)
 507              		.loc 1 558 0
 508 0030 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 509              	.LVL38:
 510 0032 13F0FF0F 		tst	r3, #255
 511 0036 13D0     		beq	.L39
 559:Generated_Source\PSoC5/screen.c ****             {
 560:Generated_Source\PSoC5/screen.c ****                 screen_rxBufferLoopDetect = 0u;
 512              		.loc 1 560 0
 513 0038 0022     		movs	r2, #0
 514 003a 0C4B     		ldr	r3, .L43+4
 515 003c 1A71     		strb	r2, [r3, #4]
 516              	.LVL39:
 517 003e 0FE0     		b	.L39
 518              	.LVL40:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 20


 519              	.L37:
 561:Generated_Source\PSoC5/screen.c ****                 #if( (screen_RX_INTERRUPT_ENABLED) && (screen_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/screen.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/screen.c ****                     #if( screen_HD_ENABLED )
 564:Generated_Source\PSoC5/screen.c ****                         if((screen_CONTROL_REG & screen_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/screen.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/screen.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/screen.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/screen.c ****                             */
 569:Generated_Source\PSoC5/screen.c ****                             screen_RXSTATUS_MASK_REG |= screen_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/screen.c ****                         }
 571:Generated_Source\PSoC5/screen.c ****                     #else
 572:Generated_Source\PSoC5/screen.c ****                         screen_RXSTATUS_MASK_REG |= screen_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/screen.c ****                     #endif /* end screen_HD_ENABLED */
 574:Generated_Source\PSoC5/screen.c ****                 #endif /* screen_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/screen.c ****             }
 576:Generated_Source\PSoC5/screen.c **** 
 577:Generated_Source\PSoC5/screen.c ****         }
 578:Generated_Source\PSoC5/screen.c ****         else
 579:Generated_Source\PSoC5/screen.c ****         {   rxStatus = screen_RXSTATUS_REG;
 520              		.loc 1 579 0
 521 0040 0C4B     		ldr	r3, .L43+12
 522              	.LVL41:
 523 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 524 0044 DBB2     		uxtb	r3, r3
 525              	.LVL42:
 580:Generated_Source\PSoC5/screen.c ****             if((rxStatus & screen_RX_STS_FIFO_NOTEMPTY) != 0u)
 526              		.loc 1 580 0
 527 0046 13F0200F 		tst	r3, #32
 528 004a 06D0     		beq	.L41
 581:Generated_Source\PSoC5/screen.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/screen.c ****                 rxData = screen_RXDATA_REG;
 529              		.loc 1 582 0
 530 004c 0A4A     		ldr	r2, .L43+16
 531 004e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 532 0050 C0B2     		uxtb	r0, r0
 533              	.LVL43:
 583:Generated_Source\PSoC5/screen.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/screen.c ****                 if((rxStatus & (screen_RX_STS_BREAK | screen_RX_STS_PAR_ERROR |
 534              		.loc 1 584 0
 535 0052 13F01E0F 		tst	r3, #30
 536 0056 02D1     		bne	.L42
 537 0058 02E0     		b	.L39
 538              	.LVL44:
 539              	.L41:
 534:Generated_Source\PSoC5/screen.c ****         uint8 rxStatus;
 540              		.loc 1 534 0
 541 005a 0020     		movs	r0, #0
 542 005c 00E0     		b	.L39
 543              	.LVL45:
 544              	.L42:
 585:Generated_Source\PSoC5/screen.c ****                                 screen_RX_STS_STOP_ERROR | screen_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/screen.c ****                 {
 587:Generated_Source\PSoC5/screen.c ****                     rxData = 0u;
 545              		.loc 1 587 0
 546 005e 0020     		movs	r0, #0
 547              	.LVL46:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 21


 548              	.L39:
 588:Generated_Source\PSoC5/screen.c ****                 }
 589:Generated_Source\PSoC5/screen.c ****             }
 590:Generated_Source\PSoC5/screen.c ****         }
 591:Generated_Source\PSoC5/screen.c **** 
 592:Generated_Source\PSoC5/screen.c ****         screen_EnableRxInt();
 549              		.loc 1 592 0
 550 0060 0222     		movs	r2, #2
 551 0062 064B     		ldr	r3, .L43+20
 552 0064 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC5/screen.c **** 
 594:Generated_Source\PSoC5/screen.c ****     #else
 595:Generated_Source\PSoC5/screen.c **** 
 596:Generated_Source\PSoC5/screen.c ****         rxStatus =screen_RXSTATUS_REG;
 597:Generated_Source\PSoC5/screen.c ****         if((rxStatus & screen_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC5/screen.c ****         {
 599:Generated_Source\PSoC5/screen.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/screen.c ****             rxData = screen_RXDATA_REG;
 601:Generated_Source\PSoC5/screen.c **** 
 602:Generated_Source\PSoC5/screen.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/screen.c ****             if((rxStatus & (screen_RX_STS_BREAK | screen_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/screen.c ****                             screen_RX_STS_STOP_ERROR | screen_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/screen.c ****             {
 606:Generated_Source\PSoC5/screen.c ****                 rxData = 0u;
 607:Generated_Source\PSoC5/screen.c ****             }
 608:Generated_Source\PSoC5/screen.c ****         }
 609:Generated_Source\PSoC5/screen.c ****     #endif /* (screen_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/screen.c **** 
 611:Generated_Source\PSoC5/screen.c ****         return(rxData);
 612:Generated_Source\PSoC5/screen.c ****     }
 553              		.loc 1 612 0
 554 0066 7047     		bx	lr
 555              	.L44:
 556              		.align	2
 557              	.L43:
 558 0068 80E100E0 		.word	-536813184
 559 006c 00000000 		.word	.LANCHOR0
 560 0070 00000000 		.word	screen_rxBuffer
 561 0074 66650040 		.word	1073767782
 562 0078 46650040 		.word	1073767750
 563 007c 00E100E0 		.word	-536813312
 564              		.cfi_endproc
 565              	.LFE9:
 566              		.size	screen_GetChar, .-screen_GetChar
 567              		.section	.text.screen_GetByte,"ax",%progbits
 568              		.align	2
 569              		.global	screen_GetByte
 570              		.thumb
 571              		.thumb_func
 572              		.type	screen_GetByte, %function
 573              	screen_GetByte:
 574              	.LFB10:
 613:Generated_Source\PSoC5/screen.c **** 
 614:Generated_Source\PSoC5/screen.c **** 
 615:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_GetByte
 617:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 22


 618:Generated_Source\PSoC5/screen.c ****     *
 619:Generated_Source\PSoC5/screen.c ****     * Summary:
 620:Generated_Source\PSoC5/screen.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/screen.c ****     *  condition.
 622:Generated_Source\PSoC5/screen.c ****     *
 623:Generated_Source\PSoC5/screen.c ****     * Parameters:
 624:Generated_Source\PSoC5/screen.c ****     *  None.
 625:Generated_Source\PSoC5/screen.c ****     *
 626:Generated_Source\PSoC5/screen.c ****     * Return:
 627:Generated_Source\PSoC5/screen.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/screen.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/screen.c ****     *
 630:Generated_Source\PSoC5/screen.c ****     * Reentrant:
 631:Generated_Source\PSoC5/screen.c ****     *  No.
 632:Generated_Source\PSoC5/screen.c ****     *
 633:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/screen.c ****     uint16 screen_GetByte(void) 
 635:Generated_Source\PSoC5/screen.c ****     {
 575              		.loc 1 635 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579 0000 10B5     		push	{r4, lr}
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 4, -8
 582              		.cfi_offset 14, -4
 636:Generated_Source\PSoC5/screen.c ****         
 637:Generated_Source\PSoC5/screen.c ****     #if (screen_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/screen.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/screen.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/screen.c ****         screen_DisableRxInt();
 583              		.loc 1 640 0
 584 0002 0223     		movs	r3, #2
 585 0004 064A     		ldr	r2, .L47
 586 0006 1360     		str	r3, [r2]
 641:Generated_Source\PSoC5/screen.c ****         locErrorStatus = (uint16)screen_errorStatus;
 587              		.loc 1 641 0
 588 0008 064A     		ldr	r2, .L47+4
 589 000a 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 590              	.LVL47:
 642:Generated_Source\PSoC5/screen.c ****         screen_errorStatus = 0u;
 591              		.loc 1 642 0
 592 000c 0021     		movs	r1, #0
 593 000e 1170     		strb	r1, [r2]
 643:Generated_Source\PSoC5/screen.c ****         screen_EnableRxInt();
 594              		.loc 1 643 0
 595 0010 054A     		ldr	r2, .L47+8
 596 0012 1360     		str	r3, [r2]
 644:Generated_Source\PSoC5/screen.c ****         return ( (uint16)(locErrorStatus << 8u) | screen_ReadRxData() );
 597              		.loc 1 644 0
 598 0014 2402     		lsls	r4, r4, #8
 599              	.LVL48:
 600 0016 FFF7FEFF 		bl	screen_ReadRxData
 601              	.LVL49:
 602 001a 2043     		orrs	r0, r0, r4
 645:Generated_Source\PSoC5/screen.c ****     #else
 646:Generated_Source\PSoC5/screen.c ****         return ( ((uint16)screen_ReadRxStatus() << 8u) | screen_ReadRxData() );
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 23


 647:Generated_Source\PSoC5/screen.c ****     #endif /* screen_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/screen.c ****         
 649:Generated_Source\PSoC5/screen.c ****     }
 603              		.loc 1 649 0
 604 001c 80B2     		uxth	r0, r0
 605 001e 10BD     		pop	{r4, pc}
 606              	.L48:
 607              		.align	2
 608              	.L47:
 609 0020 80E100E0 		.word	-536813184
 610 0024 00000000 		.word	.LANCHOR0
 611 0028 00E100E0 		.word	-536813312
 612              		.cfi_endproc
 613              	.LFE10:
 614              		.size	screen_GetByte, .-screen_GetByte
 615              		.section	.text.screen_GetRxBufferSize,"ax",%progbits
 616              		.align	2
 617              		.global	screen_GetRxBufferSize
 618              		.thumb
 619              		.thumb_func
 620              		.type	screen_GetRxBufferSize, %function
 621              	screen_GetRxBufferSize:
 622              	.LFB11:
 650:Generated_Source\PSoC5/screen.c **** 
 651:Generated_Source\PSoC5/screen.c **** 
 652:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_GetRxBufferSize
 654:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/screen.c ****     *
 656:Generated_Source\PSoC5/screen.c ****     * Summary:
 657:Generated_Source\PSoC5/screen.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/screen.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/screen.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/screen.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/screen.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/screen.c ****     *    account.
 663:Generated_Source\PSoC5/screen.c ****     *
 664:Generated_Source\PSoC5/screen.c ****     * Parameters:
 665:Generated_Source\PSoC5/screen.c ****     *  None.
 666:Generated_Source\PSoC5/screen.c ****     *
 667:Generated_Source\PSoC5/screen.c ****     * Return:
 668:Generated_Source\PSoC5/screen.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/screen.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/screen.c ****     *
 671:Generated_Source\PSoC5/screen.c ****     * Global Variables:
 672:Generated_Source\PSoC5/screen.c ****     *  screen_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/screen.c ****     *  screen_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/screen.c ****     *  screen_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/screen.c ****     *
 676:Generated_Source\PSoC5/screen.c ****     * Reentrant:
 677:Generated_Source\PSoC5/screen.c ****     *  No.
 678:Generated_Source\PSoC5/screen.c ****     *
 679:Generated_Source\PSoC5/screen.c ****     * Theory:
 680:Generated_Source\PSoC5/screen.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/screen.c ****     *
 682:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/screen.c ****     uint8 screen_GetRxBufferSize(void)
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 24


 684:Generated_Source\PSoC5/screen.c ****                                                             
 685:Generated_Source\PSoC5/screen.c ****     {
 623              		.loc 1 685 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 686:Generated_Source\PSoC5/screen.c ****         uint8 size;
 687:Generated_Source\PSoC5/screen.c **** 
 688:Generated_Source\PSoC5/screen.c ****     #if (screen_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/screen.c **** 
 690:Generated_Source\PSoC5/screen.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/screen.c ****         screen_DisableRxInt();
 628              		.loc 1 691 0
 629 0000 0222     		movs	r2, #2
 630 0002 144B     		ldr	r3, .L54
 631 0004 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC5/screen.c **** 
 693:Generated_Source\PSoC5/screen.c ****         if(screen_rxBufferRead == screen_rxBufferWrite)
 632              		.loc 1 693 0
 633 0006 144B     		ldr	r3, .L54+4
 634 0008 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 635 000a D2B2     		uxtb	r2, r2
 636 000c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 637 000e DBB2     		uxtb	r3, r3
 638 0010 9A42     		cmp	r2, r3
 639 0012 06D1     		bne	.L50
 694:Generated_Source\PSoC5/screen.c ****         {
 695:Generated_Source\PSoC5/screen.c ****             if(screen_rxBufferLoopDetect != 0u)
 640              		.loc 1 695 0
 641 0014 104B     		ldr	r3, .L54+4
 642 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 643 0018 13F0FF0F 		tst	r3, #255
 644 001c 15D0     		beq	.L53
 696:Generated_Source\PSoC5/screen.c ****             {
 697:Generated_Source\PSoC5/screen.c ****                 size = screen_RX_BUFFER_SIZE;
 645              		.loc 1 697 0
 646 001e 1420     		movs	r0, #20
 647 0020 14E0     		b	.L51
 648              	.L50:
 698:Generated_Source\PSoC5/screen.c ****             }
 699:Generated_Source\PSoC5/screen.c ****             else
 700:Generated_Source\PSoC5/screen.c ****             {
 701:Generated_Source\PSoC5/screen.c ****                 size = 0u;
 702:Generated_Source\PSoC5/screen.c ****             }
 703:Generated_Source\PSoC5/screen.c ****         }
 704:Generated_Source\PSoC5/screen.c ****         else if(screen_rxBufferRead < screen_rxBufferWrite)
 649              		.loc 1 704 0
 650 0022 0D4B     		ldr	r3, .L54+4
 651 0024 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 652 0026 D2B2     		uxtb	r2, r2
 653 0028 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 654 002a DBB2     		uxtb	r3, r3
 655 002c 9A42     		cmp	r2, r3
 656 002e 05D2     		bcs	.L52
 705:Generated_Source\PSoC5/screen.c ****         {
 706:Generated_Source\PSoC5/screen.c ****             size = (screen_rxBufferWrite - screen_rxBufferRead);
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 25


 657              		.loc 1 706 0
 658 0030 094A     		ldr	r2, .L54+4
 659 0032 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 660 0034 9078     		ldrb	r0, [r2, #2]	@ zero_extendqisi2
 661 0036 181A     		subs	r0, r3, r0
 662 0038 C0B2     		uxtb	r0, r0
 663              	.LVL50:
 664 003a 07E0     		b	.L51
 665              	.LVL51:
 666              	.L52:
 707:Generated_Source\PSoC5/screen.c ****         }
 708:Generated_Source\PSoC5/screen.c ****         else
 709:Generated_Source\PSoC5/screen.c ****         {
 710:Generated_Source\PSoC5/screen.c ****             size = (screen_RX_BUFFER_SIZE - screen_rxBufferRead) + screen_rxBufferWrite;
 667              		.loc 1 710 0
 668 003c 064A     		ldr	r2, .L54+4
 669 003e D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 670 0040 9078     		ldrb	r0, [r2, #2]	@ zero_extendqisi2
 671 0042 181A     		subs	r0, r3, r0
 672 0044 1430     		adds	r0, r0, #20
 673 0046 C0B2     		uxtb	r0, r0
 674              	.LVL52:
 675 0048 00E0     		b	.L51
 676              	.LVL53:
 677              	.L53:
 701:Generated_Source\PSoC5/screen.c ****             }
 678              		.loc 1 701 0
 679 004a 0020     		movs	r0, #0
 680              	.L51:
 681              	.LVL54:
 711:Generated_Source\PSoC5/screen.c ****         }
 712:Generated_Source\PSoC5/screen.c **** 
 713:Generated_Source\PSoC5/screen.c ****         screen_EnableRxInt();
 682              		.loc 1 713 0
 683 004c 0222     		movs	r2, #2
 684 004e 034B     		ldr	r3, .L54+8
 685 0050 1A60     		str	r2, [r3]
 714:Generated_Source\PSoC5/screen.c **** 
 715:Generated_Source\PSoC5/screen.c ****     #else
 716:Generated_Source\PSoC5/screen.c **** 
 717:Generated_Source\PSoC5/screen.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/screen.c ****         size = ((screen_RXSTATUS_REG & screen_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC5/screen.c **** 
 720:Generated_Source\PSoC5/screen.c ****     #endif /* (screen_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/screen.c **** 
 722:Generated_Source\PSoC5/screen.c ****         return(size);
 723:Generated_Source\PSoC5/screen.c ****     }
 686              		.loc 1 723 0
 687 0052 7047     		bx	lr
 688              	.L55:
 689              		.align	2
 690              	.L54:
 691 0054 80E100E0 		.word	-536813184
 692 0058 00000000 		.word	.LANCHOR0
 693 005c 00E100E0 		.word	-536813312
 694              		.cfi_endproc
 695              	.LFE11:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 26


 696              		.size	screen_GetRxBufferSize, .-screen_GetRxBufferSize
 697              		.section	.text.screen_ClearRxBuffer,"ax",%progbits
 698              		.align	2
 699              		.global	screen_ClearRxBuffer
 700              		.thumb
 701              		.thumb_func
 702              		.type	screen_ClearRxBuffer, %function
 703              	screen_ClearRxBuffer:
 704              	.LFB12:
 724:Generated_Source\PSoC5/screen.c **** 
 725:Generated_Source\PSoC5/screen.c **** 
 726:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_ClearRxBuffer
 728:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/screen.c ****     *
 730:Generated_Source\PSoC5/screen.c ****     * Summary:
 731:Generated_Source\PSoC5/screen.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/screen.c ****     *
 733:Generated_Source\PSoC5/screen.c ****     * Parameters:
 734:Generated_Source\PSoC5/screen.c ****     *  None.
 735:Generated_Source\PSoC5/screen.c ****     *
 736:Generated_Source\PSoC5/screen.c ****     * Return:
 737:Generated_Source\PSoC5/screen.c ****     *  None.
 738:Generated_Source\PSoC5/screen.c ****     *
 739:Generated_Source\PSoC5/screen.c ****     * Global Variables:
 740:Generated_Source\PSoC5/screen.c ****     *  screen_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/screen.c ****     *  screen_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/screen.c ****     *  screen_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/screen.c ****     *  screen_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/screen.c ****     *
 745:Generated_Source\PSoC5/screen.c ****     * Reentrant:
 746:Generated_Source\PSoC5/screen.c ****     *  No.
 747:Generated_Source\PSoC5/screen.c ****     *
 748:Generated_Source\PSoC5/screen.c ****     * Theory:
 749:Generated_Source\PSoC5/screen.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/screen.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/screen.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/screen.c ****     *
 753:Generated_Source\PSoC5/screen.c ****     * Side Effects:
 754:Generated_Source\PSoC5/screen.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/screen.c ****     *
 756:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/screen.c ****     void screen_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/screen.c ****     {
 705              		.loc 1 758 0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709 0000 08B5     		push	{r3, lr}
 710              		.cfi_def_cfa_offset 8
 711              		.cfi_offset 3, -8
 712              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/screen.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/screen.c **** 
 761:Generated_Source\PSoC5/screen.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/screen.c ****         enableInterrupts = CyEnterCriticalSection();
 713              		.loc 1 762 0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 27


 714 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 715              	.LVL55:
 763:Generated_Source\PSoC5/screen.c ****         screen_RXDATA_AUX_CTL_REG |= (uint8)  screen_RX_FIFO_CLR;
 716              		.loc 1 763 0
 717 0006 0B4B     		ldr	r3, .L58
 718 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 719 000a 42F00102 		orr	r2, r2, #1
 720 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/screen.c ****         screen_RXDATA_AUX_CTL_REG &= (uint8) ~screen_RX_FIFO_CLR;
 721              		.loc 1 764 0
 722 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 723 0012 02F0FE02 		and	r2, r2, #254
 724 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/screen.c ****         CyExitCriticalSection(enableInterrupts);
 725              		.loc 1 765 0
 726 0018 FFF7FEFF 		bl	CyExitCriticalSection
 727              	.LVL56:
 766:Generated_Source\PSoC5/screen.c **** 
 767:Generated_Source\PSoC5/screen.c ****     #if (screen_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/screen.c **** 
 769:Generated_Source\PSoC5/screen.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/screen.c ****         screen_DisableRxInt();
 728              		.loc 1 770 0
 729 001c 0221     		movs	r1, #2
 730 001e 064B     		ldr	r3, .L58+4
 731 0020 1960     		str	r1, [r3]
 771:Generated_Source\PSoC5/screen.c **** 
 772:Generated_Source\PSoC5/screen.c ****         screen_rxBufferRead = 0u;
 732              		.loc 1 772 0
 733 0022 064B     		ldr	r3, .L58+8
 734 0024 0022     		movs	r2, #0
 735 0026 9A70     		strb	r2, [r3, #2]
 773:Generated_Source\PSoC5/screen.c ****         screen_rxBufferWrite = 0u;
 736              		.loc 1 773 0
 737 0028 DA70     		strb	r2, [r3, #3]
 774:Generated_Source\PSoC5/screen.c ****         screen_rxBufferLoopDetect = 0u;
 738              		.loc 1 774 0
 739 002a 1A71     		strb	r2, [r3, #4]
 775:Generated_Source\PSoC5/screen.c ****         screen_rxBufferOverflow = 0u;
 740              		.loc 1 775 0
 741 002c 5A71     		strb	r2, [r3, #5]
 776:Generated_Source\PSoC5/screen.c **** 
 777:Generated_Source\PSoC5/screen.c ****         screen_EnableRxInt();
 742              		.loc 1 777 0
 743 002e 044B     		ldr	r3, .L58+12
 744 0030 1960     		str	r1, [r3]
 745 0032 08BD     		pop	{r3, pc}
 746              	.L59:
 747              		.align	2
 748              	.L58:
 749 0034 96650040 		.word	1073767830
 750 0038 80E100E0 		.word	-536813184
 751 003c 00000000 		.word	.LANCHOR0
 752 0040 00E100E0 		.word	-536813312
 753              		.cfi_endproc
 754              	.LFE12:
 755              		.size	screen_ClearRxBuffer, .-screen_ClearRxBuffer
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 28


 756              		.section	.text.screen_SetRxAddressMode,"ax",%progbits
 757              		.align	2
 758              		.global	screen_SetRxAddressMode
 759              		.thumb
 760              		.thumb_func
 761              		.type	screen_SetRxAddressMode, %function
 762              	screen_SetRxAddressMode:
 763              	.LFB13:
 778:Generated_Source\PSoC5/screen.c **** 
 779:Generated_Source\PSoC5/screen.c ****     #endif /* (screen_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/screen.c **** 
 781:Generated_Source\PSoC5/screen.c ****     }
 782:Generated_Source\PSoC5/screen.c **** 
 783:Generated_Source\PSoC5/screen.c **** 
 784:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_SetRxAddressMode
 786:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/screen.c ****     *
 788:Generated_Source\PSoC5/screen.c ****     * Summary:
 789:Generated_Source\PSoC5/screen.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/screen.c ****     *  UART.
 791:Generated_Source\PSoC5/screen.c ****     *
 792:Generated_Source\PSoC5/screen.c ****     * Parameters:
 793:Generated_Source\PSoC5/screen.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/screen.c ****     *  screen__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/screen.c ****     *                                               detection
 796:Generated_Source\PSoC5/screen.c ****     *  screen__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/screen.c ****     *                                               address detection
 798:Generated_Source\PSoC5/screen.c ****     *  screen__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/screen.c ****     *                                               detection
 800:Generated_Source\PSoC5/screen.c ****     *  screen__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/screen.c ****     *                                               address detection
 802:Generated_Source\PSoC5/screen.c ****     *  screen__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/screen.c ****     *
 804:Generated_Source\PSoC5/screen.c ****     * Return:
 805:Generated_Source\PSoC5/screen.c ****     *  None.
 806:Generated_Source\PSoC5/screen.c ****     *
 807:Generated_Source\PSoC5/screen.c ****     * Global Variables:
 808:Generated_Source\PSoC5/screen.c ****     *  screen_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/screen.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/screen.c ****     *  screen_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/screen.c ****     *
 812:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/screen.c ****     void screen_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/screen.c ****                                                         
 815:Generated_Source\PSoC5/screen.c ****     {
 764              		.loc 1 815 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768              		@ link register save eliminated.
 769              	.LVL57:
 770 0000 7047     		bx	lr
 771              		.cfi_endproc
 772              	.LFE13:
 773              		.size	screen_SetRxAddressMode, .-screen_SetRxAddressMode
 774 0002 00BF     		.section	.text.screen_SetRxAddress1,"ax",%progbits
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 29


 775              		.align	2
 776              		.global	screen_SetRxAddress1
 777              		.thumb
 778              		.thumb_func
 779              		.type	screen_SetRxAddress1, %function
 780              	screen_SetRxAddress1:
 781              	.LFB14:
 816:Generated_Source\PSoC5/screen.c ****         #if(screen_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/screen.c ****             #if(screen_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/screen.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/screen.c ****                 {
 820:Generated_Source\PSoC5/screen.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/screen.c ****                 }
 822:Generated_Source\PSoC5/screen.c ****             #else /* screen_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/screen.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/screen.c ****                 tmpCtrl = screen_CONTROL_REG & (uint8)~screen_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/screen.c ****                 tmpCtrl |= (uint8)(addressMode << screen_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/screen.c ****                 screen_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/screen.c **** 
 828:Generated_Source\PSoC5/screen.c ****                 #if(screen_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/screen.c ****                    (screen_RXBUFFERSIZE > screen_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/screen.c ****                     screen_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/screen.c ****                     screen_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/screen.c ****                 #endif /* End screen_RXBUFFERSIZE > screen_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/screen.c ****             #endif /* End screen_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/screen.c ****         #else /* screen_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/screen.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/screen.c ****             {
 837:Generated_Source\PSoC5/screen.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/screen.c ****             }
 839:Generated_Source\PSoC5/screen.c ****         #endif /* End screen_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/screen.c ****     }
 841:Generated_Source\PSoC5/screen.c **** 
 842:Generated_Source\PSoC5/screen.c **** 
 843:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_SetRxAddress1
 845:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/screen.c ****     *
 847:Generated_Source\PSoC5/screen.c ****     * Summary:
 848:Generated_Source\PSoC5/screen.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/screen.c ****     *
 850:Generated_Source\PSoC5/screen.c ****     * Parameters:
 851:Generated_Source\PSoC5/screen.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/screen.c ****     *
 853:Generated_Source\PSoC5/screen.c ****     * Return:
 854:Generated_Source\PSoC5/screen.c ****     *  None.
 855:Generated_Source\PSoC5/screen.c ****     *
 856:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/screen.c ****     void screen_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/screen.c ****     {
 782              		.loc 1 858 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              		@ link register save eliminated.
 787              	.LVL58:
 859:Generated_Source\PSoC5/screen.c ****         screen_RXADDRESS1_REG = address;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 30


 788              		.loc 1 859 0
 789 0000 014B     		ldr	r3, .L62
 790 0002 1870     		strb	r0, [r3]
 791 0004 7047     		bx	lr
 792              	.L63:
 793 0006 00BF     		.align	2
 794              	.L62:
 795 0008 26650040 		.word	1073767718
 796              		.cfi_endproc
 797              	.LFE14:
 798              		.size	screen_SetRxAddress1, .-screen_SetRxAddress1
 799              		.section	.text.screen_SetRxAddress2,"ax",%progbits
 800              		.align	2
 801              		.global	screen_SetRxAddress2
 802              		.thumb
 803              		.thumb_func
 804              		.type	screen_SetRxAddress2, %function
 805              	screen_SetRxAddress2:
 806              	.LFB15:
 860:Generated_Source\PSoC5/screen.c ****     }
 861:Generated_Source\PSoC5/screen.c **** 
 862:Generated_Source\PSoC5/screen.c **** 
 863:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_SetRxAddress2
 865:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/screen.c ****     *
 867:Generated_Source\PSoC5/screen.c ****     * Summary:
 868:Generated_Source\PSoC5/screen.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/screen.c ****     *
 870:Generated_Source\PSoC5/screen.c ****     * Parameters:
 871:Generated_Source\PSoC5/screen.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/screen.c ****     *
 873:Generated_Source\PSoC5/screen.c ****     * Return:
 874:Generated_Source\PSoC5/screen.c ****     *  None.
 875:Generated_Source\PSoC5/screen.c ****     *
 876:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/screen.c ****     void screen_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/screen.c ****     {
 807              		.loc 1 878 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 0
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811              		@ link register save eliminated.
 812              	.LVL59:
 879:Generated_Source\PSoC5/screen.c ****         screen_RXADDRESS2_REG = address;
 813              		.loc 1 879 0
 814 0000 014B     		ldr	r3, .L65
 815 0002 1870     		strb	r0, [r3]
 816 0004 7047     		bx	lr
 817              	.L66:
 818 0006 00BF     		.align	2
 819              	.L65:
 820 0008 36650040 		.word	1073767734
 821              		.cfi_endproc
 822              	.LFE15:
 823              		.size	screen_SetRxAddress2, .-screen_SetRxAddress2
 824              		.section	.text.screen_SetTxInterruptMode,"ax",%progbits
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 31


 825              		.align	2
 826              		.global	screen_SetTxInterruptMode
 827              		.thumb
 828              		.thumb_func
 829              		.type	screen_SetTxInterruptMode, %function
 830              	screen_SetTxInterruptMode:
 831              	.LFB16:
 880:Generated_Source\PSoC5/screen.c ****     }
 881:Generated_Source\PSoC5/screen.c **** 
 882:Generated_Source\PSoC5/screen.c **** #endif  /* screen_RX_ENABLED || screen_HD_ENABLED*/
 883:Generated_Source\PSoC5/screen.c **** 
 884:Generated_Source\PSoC5/screen.c **** 
 885:Generated_Source\PSoC5/screen.c **** #if( (screen_TX_ENABLED) || (screen_HD_ENABLED) )
 886:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_SetTxInterruptMode
 888:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/screen.c ****     *
 890:Generated_Source\PSoC5/screen.c ****     * Summary:
 891:Generated_Source\PSoC5/screen.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/screen.c ****     *  interrupt.
 893:Generated_Source\PSoC5/screen.c ****     *
 894:Generated_Source\PSoC5/screen.c ****     * Parameters:
 895:Generated_Source\PSoC5/screen.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/screen.c ****     *   screen_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/screen.c ****     *   screen_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/screen.c ****     *   screen_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/screen.c ****     *   screen_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/screen.c ****     *
 901:Generated_Source\PSoC5/screen.c ****     * Return:
 902:Generated_Source\PSoC5/screen.c ****     *  None.
 903:Generated_Source\PSoC5/screen.c ****     *
 904:Generated_Source\PSoC5/screen.c ****     * Theory:
 905:Generated_Source\PSoC5/screen.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/screen.c ****     *
 907:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/screen.c ****     void screen_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/screen.c ****     {
 832              		.loc 1 909 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 0
 835              		@ frame_needed = 0, uses_anonymous_args = 0
 836              		@ link register save eliminated.
 837              	.LVL60:
 910:Generated_Source\PSoC5/screen.c ****         screen_TXSTATUS_MASK_REG = intSrc;
 838              		.loc 1 910 0
 839 0000 014B     		ldr	r3, .L68
 840 0002 1870     		strb	r0, [r3]
 841 0004 7047     		bx	lr
 842              	.L69:
 843 0006 00BF     		.align	2
 844              	.L68:
 845 0008 87640040 		.word	1073767559
 846              		.cfi_endproc
 847              	.LFE16:
 848              		.size	screen_SetTxInterruptMode, .-screen_SetTxInterruptMode
 849              		.section	.text.screen_WriteTxData,"ax",%progbits
 850              		.align	2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 32


 851              		.global	screen_WriteTxData
 852              		.thumb
 853              		.thumb_func
 854              		.type	screen_WriteTxData, %function
 855              	screen_WriteTxData:
 856              	.LFB17:
 911:Generated_Source\PSoC5/screen.c ****     }
 912:Generated_Source\PSoC5/screen.c **** 
 913:Generated_Source\PSoC5/screen.c **** 
 914:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_WriteTxData
 916:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/screen.c ****     *
 918:Generated_Source\PSoC5/screen.c ****     * Summary:
 919:Generated_Source\PSoC5/screen.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/screen.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/screen.c ****     *  separately.
 922:Generated_Source\PSoC5/screen.c ****     *
 923:Generated_Source\PSoC5/screen.c ****     * Parameters:
 924:Generated_Source\PSoC5/screen.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/screen.c ****     *
 926:Generated_Source\PSoC5/screen.c ****     * Return:
 927:Generated_Source\PSoC5/screen.c ****     * None.
 928:Generated_Source\PSoC5/screen.c ****     *
 929:Generated_Source\PSoC5/screen.c ****     * Global Variables:
 930:Generated_Source\PSoC5/screen.c ****     *  screen_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/screen.c ****     *  screen_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/screen.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/screen.c ****     *  screen_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/screen.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/screen.c ****     *  screen_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/screen.c ****     *    initialized.
 937:Generated_Source\PSoC5/screen.c ****     *
 938:Generated_Source\PSoC5/screen.c ****     * Reentrant:
 939:Generated_Source\PSoC5/screen.c ****     *  No.
 940:Generated_Source\PSoC5/screen.c ****     *
 941:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/screen.c ****     void screen_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/screen.c ****     {
 857              		.loc 1 943 0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 0
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861              		@ link register save eliminated.
 862              	.LVL61:
 944:Generated_Source\PSoC5/screen.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/screen.c ****         if(screen_initVar != 0u)
 863              		.loc 1 945 0
 864 0000 114B     		ldr	r3, .L75
 865 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 866 0004 F3B1     		cbz	r3, .L70
 946:Generated_Source\PSoC5/screen.c ****         {
 947:Generated_Source\PSoC5/screen.c ****         #if (screen_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/screen.c **** 
 949:Generated_Source\PSoC5/screen.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/screen.c ****             screen_DisableTxInt();
 867              		.loc 1 950 0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 33


 868 0006 0422     		movs	r2, #4
 869 0008 104B     		ldr	r3, .L75+4
 870 000a 1A60     		str	r2, [r3]
 951:Generated_Source\PSoC5/screen.c **** 
 952:Generated_Source\PSoC5/screen.c ****             if( (screen_txBufferRead == screen_txBufferWrite) &&
 871              		.loc 1 952 0
 872 000c 0E4A     		ldr	r2, .L75
 873 000e 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 874 0010 DBB2     		uxtb	r3, r3
 875 0012 D279     		ldrb	r2, [r2, #7]	@ zero_extendqisi2
 876 0014 9342     		cmp	r3, r2
 877 0016 07D1     		bne	.L72
 953:Generated_Source\PSoC5/screen.c ****                 ((screen_TXSTATUS_REG & screen_TX_STS_FIFO_FULL) == 0u) )
 878              		.loc 1 953 0 discriminator 1
 879 0018 0D4B     		ldr	r3, .L75+8
 880 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 952:Generated_Source\PSoC5/screen.c ****                 ((screen_TXSTATUS_REG & screen_TX_STS_FIFO_FULL) == 0u) )
 881              		.loc 1 952 0 discriminator 1
 882 001c 13F0040F 		tst	r3, #4
 883 0020 02D1     		bne	.L72
 954:Generated_Source\PSoC5/screen.c ****             {
 955:Generated_Source\PSoC5/screen.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/screen.c ****                 screen_TXDATA_REG = txDataByte;
 884              		.loc 1 956 0
 885 0022 0C4B     		ldr	r3, .L75+12
 886 0024 1870     		strb	r0, [r3]
 887 0026 0AE0     		b	.L73
 888              	.L72:
 957:Generated_Source\PSoC5/screen.c ****             }
 958:Generated_Source\PSoC5/screen.c ****             else
 959:Generated_Source\PSoC5/screen.c ****             {
 960:Generated_Source\PSoC5/screen.c ****                 if(screen_txBufferWrite >= screen_TX_BUFFER_SIZE)
 889              		.loc 1 960 0
 890 0028 072A     		cmp	r2, #7
 891 002a 02D9     		bls	.L74
 961:Generated_Source\PSoC5/screen.c ****                 {
 962:Generated_Source\PSoC5/screen.c ****                     screen_txBufferWrite = 0u;
 892              		.loc 1 962 0
 893 002c 0022     		movs	r2, #0
 894 002e 064B     		ldr	r3, .L75
 895 0030 DA71     		strb	r2, [r3, #7]
 896              	.L74:
 963:Generated_Source\PSoC5/screen.c ****                 }
 964:Generated_Source\PSoC5/screen.c **** 
 965:Generated_Source\PSoC5/screen.c ****                 screen_txBuffer[screen_txBufferWrite] = txDataByte;
 897              		.loc 1 965 0
 898 0032 054A     		ldr	r2, .L75
 899 0034 D379     		ldrb	r3, [r2, #7]	@ zero_extendqisi2
 900 0036 0849     		ldr	r1, .L75+16
 901 0038 C854     		strb	r0, [r1, r3]
 966:Generated_Source\PSoC5/screen.c **** 
 967:Generated_Source\PSoC5/screen.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/screen.c ****                 screen_txBufferWrite++;
 902              		.loc 1 968 0
 903 003a 0133     		adds	r3, r3, #1
 904 003c D371     		strb	r3, [r2, #7]
 905              	.L73:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 34


 969:Generated_Source\PSoC5/screen.c ****             }
 970:Generated_Source\PSoC5/screen.c **** 
 971:Generated_Source\PSoC5/screen.c ****             screen_EnableTxInt();
 906              		.loc 1 971 0
 907 003e 0422     		movs	r2, #4
 908 0040 064B     		ldr	r3, .L75+20
 909 0042 1A60     		str	r2, [r3]
 910              	.L70:
 911 0044 7047     		bx	lr
 912              	.L76:
 913 0046 00BF     		.align	2
 914              	.L75:
 915 0048 00000000 		.word	.LANCHOR0
 916 004c 80E100E0 		.word	-536813184
 917 0050 67640040 		.word	1073767527
 918 0054 47640040 		.word	1073767495
 919 0058 00000000 		.word	screen_txBuffer
 920 005c 00E100E0 		.word	-536813312
 921              		.cfi_endproc
 922              	.LFE17:
 923              		.size	screen_WriteTxData, .-screen_WriteTxData
 924              		.section	.text.screen_ReadTxStatus,"ax",%progbits
 925              		.align	2
 926              		.global	screen_ReadTxStatus
 927              		.thumb
 928              		.thumb_func
 929              		.type	screen_ReadTxStatus, %function
 930              	screen_ReadTxStatus:
 931              	.LFB18:
 972:Generated_Source\PSoC5/screen.c **** 
 973:Generated_Source\PSoC5/screen.c ****         #else
 974:Generated_Source\PSoC5/screen.c **** 
 975:Generated_Source\PSoC5/screen.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/screen.c ****             screen_TXDATA_REG = txDataByte;
 977:Generated_Source\PSoC5/screen.c **** 
 978:Generated_Source\PSoC5/screen.c ****         #endif /*(screen_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/screen.c ****         }
 980:Generated_Source\PSoC5/screen.c ****     }
 981:Generated_Source\PSoC5/screen.c **** 
 982:Generated_Source\PSoC5/screen.c **** 
 983:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_ReadTxStatus
 985:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/screen.c ****     *
 987:Generated_Source\PSoC5/screen.c ****     * Summary:
 988:Generated_Source\PSoC5/screen.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/screen.c ****     *
 990:Generated_Source\PSoC5/screen.c ****     * Parameters:
 991:Generated_Source\PSoC5/screen.c ****     *  None.
 992:Generated_Source\PSoC5/screen.c ****     *
 993:Generated_Source\PSoC5/screen.c ****     * Return:
 994:Generated_Source\PSoC5/screen.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/screen.c ****     *
 996:Generated_Source\PSoC5/screen.c ****     * Theory:
 997:Generated_Source\PSoC5/screen.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/screen.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/screen.c ****     *  even if the bit was not enabled as an interrupt source the event happened
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 35


1000:Generated_Source\PSoC5/screen.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/screen.c ****     *
1002:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/screen.c ****     uint8 screen_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/screen.c ****     {
 932              		.loc 1 1004 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936              		@ link register save eliminated.
1005:Generated_Source\PSoC5/screen.c ****         return(screen_TXSTATUS_REG);
 937              		.loc 1 1005 0
 938 0000 014B     		ldr	r3, .L78
 939 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/screen.c ****     }
 940              		.loc 1 1006 0
 941 0004 7047     		bx	lr
 942              	.L79:
 943 0006 00BF     		.align	2
 944              	.L78:
 945 0008 67640040 		.word	1073767527
 946              		.cfi_endproc
 947              	.LFE18:
 948              		.size	screen_ReadTxStatus, .-screen_ReadTxStatus
 949              		.section	.text.screen_PutChar,"ax",%progbits
 950              		.align	2
 951              		.global	screen_PutChar
 952              		.thumb
 953              		.thumb_func
 954              		.type	screen_PutChar, %function
 955              	screen_PutChar:
 956              	.LFB19:
1007:Generated_Source\PSoC5/screen.c **** 
1008:Generated_Source\PSoC5/screen.c **** 
1009:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_PutChar
1011:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/screen.c ****     *
1013:Generated_Source\PSoC5/screen.c ****     * Summary:
1014:Generated_Source\PSoC5/screen.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/screen.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/screen.c ****     *  hold the data.
1017:Generated_Source\PSoC5/screen.c ****     *
1018:Generated_Source\PSoC5/screen.c ****     * Parameters:
1019:Generated_Source\PSoC5/screen.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/screen.c ****     *
1021:Generated_Source\PSoC5/screen.c ****     * Return:
1022:Generated_Source\PSoC5/screen.c ****     *  None.
1023:Generated_Source\PSoC5/screen.c ****     *
1024:Generated_Source\PSoC5/screen.c ****     * Global Variables:
1025:Generated_Source\PSoC5/screen.c ****     *  screen_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/screen.c ****     *  screen_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/screen.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/screen.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/screen.c ****     *  screen_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/screen.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/screen.c ****     *  screen_initVar - checked to identify that the component has been
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 36


1032:Generated_Source\PSoC5/screen.c ****     *     initialized.
1033:Generated_Source\PSoC5/screen.c ****     *
1034:Generated_Source\PSoC5/screen.c ****     * Reentrant:
1035:Generated_Source\PSoC5/screen.c ****     *  No.
1036:Generated_Source\PSoC5/screen.c ****     *
1037:Generated_Source\PSoC5/screen.c ****     * Theory:
1038:Generated_Source\PSoC5/screen.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/screen.c ****     *
1040:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/screen.c ****     void screen_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/screen.c ****     {
 957              		.loc 1 1042 0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961              		@ link register save eliminated.
 962              	.LVL62:
 963              	.L83:
1043:Generated_Source\PSoC5/screen.c ****     #if (screen_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/screen.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/screen.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/screen.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/screen.c ****         */
1048:Generated_Source\PSoC5/screen.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/screen.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/screen.c **** 
1051:Generated_Source\PSoC5/screen.c ****         do
1052:Generated_Source\PSoC5/screen.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/screen.c **** 
1054:Generated_Source\PSoC5/screen.c ****         #if ((screen_TX_BUFFER_SIZE > screen_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/screen.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/screen.c ****             screen_DisableTxInt();
1057:Generated_Source\PSoC5/screen.c ****         #endif /* (screen_TX_BUFFER_SIZE > screen_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/screen.c **** 
1059:Generated_Source\PSoC5/screen.c ****             locTxBufferWrite = screen_txBufferWrite;
 964              		.loc 1 1059 0
 965 0000 164B     		ldr	r3, .L88
 966 0002 D979     		ldrb	r1, [r3, #7]	@ zero_extendqisi2
 967              	.LVL63:
1060:Generated_Source\PSoC5/screen.c ****             locTxBufferRead  = screen_txBufferRead;
 968              		.loc 1 1060 0
 969 0004 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 970 0006 DBB2     		uxtb	r3, r3
 971              	.LVL64:
1061:Generated_Source\PSoC5/screen.c **** 
1062:Generated_Source\PSoC5/screen.c ****         #if ((screen_TX_BUFFER_SIZE > screen_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/screen.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/screen.c ****             screen_EnableTxInt();
1065:Generated_Source\PSoC5/screen.c ****         #endif /* (screen_TX_BUFFER_SIZE > screen_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/screen.c ****         }
1067:Generated_Source\PSoC5/screen.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
 972              		.loc 1 1067 0
 973 0008 9942     		cmp	r1, r3
 974 000a 05D2     		bcs	.L81
 975              		.loc 1 1067 0 is_stmt 0 discriminator 1
 976 000c 5A1E     		subs	r2, r3, #1
 977 000e 9142     		cmp	r1, r2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 37


 978 0010 14BF     		ite	ne
 979 0012 0022     		movne	r2, #0
 980 0014 0122     		moveq	r2, #1
 981 0016 04E0     		b	.L82
 982              	.L81:
1068:Generated_Source\PSoC5/screen.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 983              		.loc 1 1068 0 is_stmt 1 discriminator 2
 984 0018 CA1A     		subs	r2, r1, r3
1067:Generated_Source\PSoC5/screen.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 985              		.loc 1 1067 0 discriminator 2
 986 001a 072A     		cmp	r2, #7
 987 001c 14BF     		ite	ne
 988 001e 0022     		movne	r2, #0
 989 0020 0122     		moveq	r2, #1
 990              	.L82:
1069:Generated_Source\PSoC5/screen.c ****                                 (uint8)(screen_TX_BUFFER_SIZE - 1u)) );
 991              		.loc 1 1069 0
 992 0022 002A     		cmp	r2, #0
 993 0024 ECD1     		bne	.L83
1070:Generated_Source\PSoC5/screen.c **** 
1071:Generated_Source\PSoC5/screen.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
 994              		.loc 1 1071 0
 995 0026 9942     		cmp	r1, r3
 996 0028 07D1     		bne	.L84
1072:Generated_Source\PSoC5/screen.c ****             ((screen_TXSTATUS_REG & screen_TX_STS_FIFO_FULL) == 0u) )
 997              		.loc 1 1072 0 discriminator 1
 998 002a 0D4B     		ldr	r3, .L88+4
 999              	.LVL65:
 1000 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1071:Generated_Source\PSoC5/screen.c ****             ((screen_TXSTATUS_REG & screen_TX_STS_FIFO_FULL) == 0u) )
 1001              		.loc 1 1071 0 discriminator 1
 1002 002e 13F0040F 		tst	r3, #4
 1003 0032 02D1     		bne	.L84
1073:Generated_Source\PSoC5/screen.c ****         {
1074:Generated_Source\PSoC5/screen.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/screen.c ****             screen_TXDATA_REG = txDataByte;
 1004              		.loc 1 1075 0
 1005 0034 0B4B     		ldr	r3, .L88+8
 1006 0036 1870     		strb	r0, [r3]
 1007 0038 7047     		bx	lr
 1008              	.L84:
1076:Generated_Source\PSoC5/screen.c ****         }
1077:Generated_Source\PSoC5/screen.c ****         else
1078:Generated_Source\PSoC5/screen.c ****         {
1079:Generated_Source\PSoC5/screen.c ****             if(locTxBufferWrite >= screen_TX_BUFFER_SIZE)
 1009              		.loc 1 1079 0
 1010 003a 0729     		cmp	r1, #7
 1011 003c 00D9     		bls	.L86
1080:Generated_Source\PSoC5/screen.c ****             {
1081:Generated_Source\PSoC5/screen.c ****                 locTxBufferWrite = 0u;
 1012              		.loc 1 1081 0
 1013 003e 0021     		movs	r1, #0
 1014              	.LVL66:
 1015              	.L86:
1082:Generated_Source\PSoC5/screen.c ****             }
1083:Generated_Source\PSoC5/screen.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/screen.c ****             screen_txBuffer[locTxBufferWrite] = txDataByte;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 38


 1016              		.loc 1 1084 0
 1017 0040 094B     		ldr	r3, .L88+12
 1018 0042 5854     		strb	r0, [r3, r1]
1085:Generated_Source\PSoC5/screen.c ****             locTxBufferWrite++;
 1019              		.loc 1 1085 0
 1020 0044 0131     		adds	r1, r1, #1
 1021              	.LVL67:
1086:Generated_Source\PSoC5/screen.c **** 
1087:Generated_Source\PSoC5/screen.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/screen.c ****         #if ((screen_TX_BUFFER_SIZE > screen_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/screen.c ****             screen_DisableTxInt();
1090:Generated_Source\PSoC5/screen.c ****         #endif /* (screen_TX_BUFFER_SIZE > screen_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/screen.c **** 
1092:Generated_Source\PSoC5/screen.c ****             screen_txBufferWrite = locTxBufferWrite;
 1022              		.loc 1 1092 0
 1023 0046 054B     		ldr	r3, .L88
 1024 0048 D971     		strb	r1, [r3, #7]
1093:Generated_Source\PSoC5/screen.c **** 
1094:Generated_Source\PSoC5/screen.c ****         #if ((screen_TX_BUFFER_SIZE > screen_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/screen.c ****             screen_EnableTxInt();
1096:Generated_Source\PSoC5/screen.c ****         #endif /* (screen_TX_BUFFER_SIZE > screen_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/screen.c **** 
1098:Generated_Source\PSoC5/screen.c ****             if(0u != (screen_TXSTATUS_REG & screen_TX_STS_FIFO_EMPTY))
 1025              		.loc 1 1098 0
 1026 004a 054B     		ldr	r3, .L88+4
 1027 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1028 004e 13F0020F 		tst	r3, #2
 1029 0052 02D0     		beq	.L80
1099:Generated_Source\PSoC5/screen.c ****             {
1100:Generated_Source\PSoC5/screen.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/screen.c ****                 screen_SetPendingTxInt();
 1030              		.loc 1 1101 0
 1031 0054 0422     		movs	r2, #4
 1032 0056 054B     		ldr	r3, .L88+16
 1033 0058 1A60     		str	r2, [r3]
 1034              	.L80:
 1035 005a 7047     		bx	lr
 1036              	.L89:
 1037              		.align	2
 1038              	.L88:
 1039 005c 00000000 		.word	.LANCHOR0
 1040 0060 67640040 		.word	1073767527
 1041 0064 47640040 		.word	1073767495
 1042 0068 00000000 		.word	screen_txBuffer
 1043 006c 00E200E0 		.word	-536813056
 1044              		.cfi_endproc
 1045              	.LFE19:
 1046              		.size	screen_PutChar, .-screen_PutChar
 1047              		.section	.text.screen_PutString,"ax",%progbits
 1048              		.align	2
 1049              		.global	screen_PutString
 1050              		.thumb
 1051              		.thumb_func
 1052              		.type	screen_PutString, %function
 1053              	screen_PutString:
 1054              	.LFB20:
1102:Generated_Source\PSoC5/screen.c ****             }
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 39


1103:Generated_Source\PSoC5/screen.c ****         }
1104:Generated_Source\PSoC5/screen.c **** 
1105:Generated_Source\PSoC5/screen.c ****     #else
1106:Generated_Source\PSoC5/screen.c **** 
1107:Generated_Source\PSoC5/screen.c ****         while((screen_TXSTATUS_REG & screen_TX_STS_FIFO_FULL) != 0u)
1108:Generated_Source\PSoC5/screen.c ****         {
1109:Generated_Source\PSoC5/screen.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/screen.c ****         }
1111:Generated_Source\PSoC5/screen.c **** 
1112:Generated_Source\PSoC5/screen.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/screen.c ****         screen_TXDATA_REG = txDataByte;
1114:Generated_Source\PSoC5/screen.c **** 
1115:Generated_Source\PSoC5/screen.c ****     #endif /* screen_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/screen.c ****     }
1117:Generated_Source\PSoC5/screen.c **** 
1118:Generated_Source\PSoC5/screen.c **** 
1119:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_PutString
1121:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/screen.c ****     *
1123:Generated_Source\PSoC5/screen.c ****     * Summary:
1124:Generated_Source\PSoC5/screen.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/screen.c ****     *
1126:Generated_Source\PSoC5/screen.c ****     * Parameters:
1127:Generated_Source\PSoC5/screen.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/screen.c ****     *
1129:Generated_Source\PSoC5/screen.c ****     * Return:
1130:Generated_Source\PSoC5/screen.c ****     *  None.
1131:Generated_Source\PSoC5/screen.c ****     *
1132:Generated_Source\PSoC5/screen.c ****     * Global Variables:
1133:Generated_Source\PSoC5/screen.c ****     *  screen_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/screen.c ****     *     initialized.
1135:Generated_Source\PSoC5/screen.c ****     *
1136:Generated_Source\PSoC5/screen.c ****     * Reentrant:
1137:Generated_Source\PSoC5/screen.c ****     *  No.
1138:Generated_Source\PSoC5/screen.c ****     *
1139:Generated_Source\PSoC5/screen.c ****     * Theory:
1140:Generated_Source\PSoC5/screen.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/screen.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/screen.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/screen.c ****     *
1144:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/screen.c ****     void screen_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/screen.c ****     {
 1055              		.loc 1 1146 0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 0
 1058              		@ frame_needed = 0, uses_anonymous_args = 0
 1059              	.LVL68:
 1060 0000 38B5     		push	{r3, r4, r5, lr}
 1061              		.cfi_def_cfa_offset 16
 1062              		.cfi_offset 3, -16
 1063              		.cfi_offset 4, -12
 1064              		.cfi_offset 5, -8
 1065              		.cfi_offset 14, -4
 1066              	.LVL69:
1147:Generated_Source\PSoC5/screen.c ****         uint16 bufIndex = 0u;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 40


1148:Generated_Source\PSoC5/screen.c **** 
1149:Generated_Source\PSoC5/screen.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/screen.c ****         if(screen_initVar != 0u)
 1067              		.loc 1 1150 0
 1068 0002 074B     		ldr	r3, .L96
 1069 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1070 0006 2BB9     		cbnz	r3, .L94
 1071 0008 38BD     		pop	{r3, r4, r5, pc}
 1072              	.LVL70:
 1073              	.L93:
1151:Generated_Source\PSoC5/screen.c ****         {
1152:Generated_Source\PSoC5/screen.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/screen.c ****             while(string[bufIndex] != (char8) 0)
1154:Generated_Source\PSoC5/screen.c ****             {
1155:Generated_Source\PSoC5/screen.c ****                 screen_PutChar((uint8)string[bufIndex]);
 1074              		.loc 1 1155 0
 1075 000a FFF7FEFF 		bl	screen_PutChar
 1076              	.LVL71:
1156:Generated_Source\PSoC5/screen.c ****                 bufIndex++;
 1077              		.loc 1 1156 0
 1078 000e 0134     		adds	r4, r4, #1
 1079              	.LVL72:
 1080 0010 A4B2     		uxth	r4, r4
 1081              	.LVL73:
 1082 0012 01E0     		b	.L91
 1083              	.LVL74:
 1084              	.L94:
 1085 0014 0546     		mov	r5, r0
 1086 0016 0024     		movs	r4, #0
 1087              	.LVL75:
 1088              	.L91:
1153:Generated_Source\PSoC5/screen.c ****             {
 1089              		.loc 1 1153 0
 1090 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 1091 001a 0028     		cmp	r0, #0
 1092 001c F5D1     		bne	.L93
 1093 001e 38BD     		pop	{r3, r4, r5, pc}
 1094              	.LVL76:
 1095              	.L97:
 1096              		.align	2
 1097              	.L96:
 1098 0020 00000000 		.word	.LANCHOR0
 1099              		.cfi_endproc
 1100              	.LFE20:
 1101              		.size	screen_PutString, .-screen_PutString
 1102              		.section	.text.screen_PutArray,"ax",%progbits
 1103              		.align	2
 1104              		.global	screen_PutArray
 1105              		.thumb
 1106              		.thumb_func
 1107              		.type	screen_PutArray, %function
 1108              	screen_PutArray:
 1109              	.LFB21:
1157:Generated_Source\PSoC5/screen.c ****             }
1158:Generated_Source\PSoC5/screen.c ****         }
1159:Generated_Source\PSoC5/screen.c ****     }
1160:Generated_Source\PSoC5/screen.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 41


1161:Generated_Source\PSoC5/screen.c **** 
1162:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_PutArray
1164:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/screen.c ****     *
1166:Generated_Source\PSoC5/screen.c ****     * Summary:
1167:Generated_Source\PSoC5/screen.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/screen.c ****     *  transmission.
1169:Generated_Source\PSoC5/screen.c ****     *
1170:Generated_Source\PSoC5/screen.c ****     * Parameters:
1171:Generated_Source\PSoC5/screen.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/screen.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/screen.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/screen.c ****     *
1175:Generated_Source\PSoC5/screen.c ****     * Return:
1176:Generated_Source\PSoC5/screen.c ****     *  None.
1177:Generated_Source\PSoC5/screen.c ****     *
1178:Generated_Source\PSoC5/screen.c ****     * Global Variables:
1179:Generated_Source\PSoC5/screen.c ****     *  screen_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/screen.c ****     *     initialized.
1181:Generated_Source\PSoC5/screen.c ****     *
1182:Generated_Source\PSoC5/screen.c ****     * Reentrant:
1183:Generated_Source\PSoC5/screen.c ****     *  No.
1184:Generated_Source\PSoC5/screen.c ****     *
1185:Generated_Source\PSoC5/screen.c ****     * Theory:
1186:Generated_Source\PSoC5/screen.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/screen.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/screen.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/screen.c ****     *
1190:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/screen.c ****     void screen_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/screen.c ****                                                                     
1193:Generated_Source\PSoC5/screen.c ****     {
 1110              		.loc 1 1193 0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 0
 1113              		@ frame_needed = 0, uses_anonymous_args = 0
 1114              	.LVL77:
1194:Generated_Source\PSoC5/screen.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/screen.c **** 
1196:Generated_Source\PSoC5/screen.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/screen.c ****         if(screen_initVar != 0u)
 1115              		.loc 1 1197 0
 1116 0000 084B     		ldr	r3, .L104
 1117 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1118 0004 33B9     		cbnz	r3, .L102
 1119 0006 7047     		bx	lr
 1120              	.LVL78:
 1121              	.L101:
 1122              		.cfi_def_cfa_offset 16
 1123              		.cfi_offset 4, -16
 1124              		.cfi_offset 5, -12
 1125              		.cfi_offset 6, -8
 1126              		.cfi_offset 14, -4
1198:Generated_Source\PSoC5/screen.c ****         {
1199:Generated_Source\PSoC5/screen.c ****             while(bufIndex < byteCount)
1200:Generated_Source\PSoC5/screen.c ****             {
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 42


1201:Generated_Source\PSoC5/screen.c ****                 screen_PutChar(string[bufIndex]);
 1127              		.loc 1 1201 0
 1128 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 1129 000a FFF7FEFF 		bl	screen_PutChar
 1130              	.LVL79:
1202:Generated_Source\PSoC5/screen.c ****                 bufIndex++;
 1131              		.loc 1 1202 0
 1132 000e 0134     		adds	r4, r4, #1
 1133              	.LVL80:
 1134 0010 E4B2     		uxtb	r4, r4
 1135              	.LVL81:
 1136 0012 03E0     		b	.L99
 1137              	.LVL82:
 1138              	.L102:
 1139              		.cfi_def_cfa_offset 0
 1140              		.cfi_restore 4
 1141              		.cfi_restore 5
 1142              		.cfi_restore 6
 1143              		.cfi_restore 14
1193:Generated_Source\PSoC5/screen.c ****         uint8 bufIndex = 0u;
 1144              		.loc 1 1193 0
 1145 0014 70B5     		push	{r4, r5, r6, lr}
 1146              		.cfi_def_cfa_offset 16
 1147              		.cfi_offset 4, -16
 1148              		.cfi_offset 5, -12
 1149              		.cfi_offset 6, -8
 1150              		.cfi_offset 14, -4
 1151 0016 0D46     		mov	r5, r1
 1152 0018 0646     		mov	r6, r0
 1153 001a 0024     		movs	r4, #0
 1154              	.LVL83:
 1155              	.L99:
1199:Generated_Source\PSoC5/screen.c ****             {
 1156              		.loc 1 1199 0
 1157 001c AC42     		cmp	r4, r5
 1158 001e F3D3     		bcc	.L101
 1159 0020 70BD     		pop	{r4, r5, r6, pc}
 1160              	.LVL84:
 1161              	.L105:
 1162 0022 00BF     		.align	2
 1163              	.L104:
 1164 0024 00000000 		.word	.LANCHOR0
 1165              		.cfi_endproc
 1166              	.LFE21:
 1167              		.size	screen_PutArray, .-screen_PutArray
 1168              		.section	.text.screen_PutCRLF,"ax",%progbits
 1169              		.align	2
 1170              		.global	screen_PutCRLF
 1171              		.thumb
 1172              		.thumb_func
 1173              		.type	screen_PutCRLF, %function
 1174              	screen_PutCRLF:
 1175              	.LFB22:
1203:Generated_Source\PSoC5/screen.c ****             }
1204:Generated_Source\PSoC5/screen.c ****         }
1205:Generated_Source\PSoC5/screen.c ****     }
1206:Generated_Source\PSoC5/screen.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 43


1207:Generated_Source\PSoC5/screen.c **** 
1208:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_PutCRLF
1210:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/screen.c ****     *
1212:Generated_Source\PSoC5/screen.c ****     * Summary:
1213:Generated_Source\PSoC5/screen.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/screen.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/screen.c ****     *
1216:Generated_Source\PSoC5/screen.c ****     * Parameters:
1217:Generated_Source\PSoC5/screen.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/screen.c ****     *
1219:Generated_Source\PSoC5/screen.c ****     * Return:
1220:Generated_Source\PSoC5/screen.c ****     *  None.
1221:Generated_Source\PSoC5/screen.c ****     *
1222:Generated_Source\PSoC5/screen.c ****     * Global Variables:
1223:Generated_Source\PSoC5/screen.c ****     *  screen_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/screen.c ****     *     initialized.
1225:Generated_Source\PSoC5/screen.c ****     *
1226:Generated_Source\PSoC5/screen.c ****     * Reentrant:
1227:Generated_Source\PSoC5/screen.c ****     *  No.
1228:Generated_Source\PSoC5/screen.c ****     *
1229:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/screen.c ****     void screen_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/screen.c ****     {
 1176              		.loc 1 1231 0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 0
 1179              		@ frame_needed = 0, uses_anonymous_args = 0
 1180              	.LVL85:
 1181 0000 08B5     		push	{r3, lr}
 1182              		.cfi_def_cfa_offset 8
 1183              		.cfi_offset 3, -8
 1184              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/screen.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/screen.c ****         if(screen_initVar != 0u)
 1185              		.loc 1 1233 0
 1186 0002 064B     		ldr	r3, .L109
 1187 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1188 0006 3BB1     		cbz	r3, .L106
1234:Generated_Source\PSoC5/screen.c ****         {
1235:Generated_Source\PSoC5/screen.c ****             screen_PutChar(txDataByte);
 1189              		.loc 1 1235 0
 1190 0008 FFF7FEFF 		bl	screen_PutChar
 1191              	.LVL86:
1236:Generated_Source\PSoC5/screen.c ****             screen_PutChar(0x0Du);
 1192              		.loc 1 1236 0
 1193 000c 0D20     		movs	r0, #13
 1194 000e FFF7FEFF 		bl	screen_PutChar
 1195              	.LVL87:
1237:Generated_Source\PSoC5/screen.c ****             screen_PutChar(0x0Au);
 1196              		.loc 1 1237 0
 1197 0012 0A20     		movs	r0, #10
 1198 0014 FFF7FEFF 		bl	screen_PutChar
 1199              	.LVL88:
 1200              	.L106:
 1201 0018 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 44


 1202              	.L110:
 1203 001a 00BF     		.align	2
 1204              	.L109:
 1205 001c 00000000 		.word	.LANCHOR0
 1206              		.cfi_endproc
 1207              	.LFE22:
 1208              		.size	screen_PutCRLF, .-screen_PutCRLF
 1209              		.section	.text.screen_GetTxBufferSize,"ax",%progbits
 1210              		.align	2
 1211              		.global	screen_GetTxBufferSize
 1212              		.thumb
 1213              		.thumb_func
 1214              		.type	screen_GetTxBufferSize, %function
 1215              	screen_GetTxBufferSize:
 1216              	.LFB23:
1238:Generated_Source\PSoC5/screen.c ****         }
1239:Generated_Source\PSoC5/screen.c ****     }
1240:Generated_Source\PSoC5/screen.c **** 
1241:Generated_Source\PSoC5/screen.c **** 
1242:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_GetTxBufferSize
1244:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/screen.c ****     *
1246:Generated_Source\PSoC5/screen.c ****     * Summary:
1247:Generated_Source\PSoC5/screen.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/screen.c ****     *  transmitted.
1249:Generated_Source\PSoC5/screen.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/screen.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/screen.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/screen.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/screen.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/screen.c ****     *
1255:Generated_Source\PSoC5/screen.c ****     * Parameters:
1256:Generated_Source\PSoC5/screen.c ****     *  None.
1257:Generated_Source\PSoC5/screen.c ****     *
1258:Generated_Source\PSoC5/screen.c ****     * Return:
1259:Generated_Source\PSoC5/screen.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/screen.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/screen.c ****     *
1262:Generated_Source\PSoC5/screen.c ****     * Global Variables:
1263:Generated_Source\PSoC5/screen.c ****     *  screen_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/screen.c ****     *  screen_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/screen.c ****     *
1266:Generated_Source\PSoC5/screen.c ****     * Reentrant:
1267:Generated_Source\PSoC5/screen.c ****     *  No.
1268:Generated_Source\PSoC5/screen.c ****     *
1269:Generated_Source\PSoC5/screen.c ****     * Theory:
1270:Generated_Source\PSoC5/screen.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/screen.c ****     *
1272:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/screen.c ****     uint8 screen_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/screen.c ****                                                             
1275:Generated_Source\PSoC5/screen.c ****     {
 1217              		.loc 1 1275 0
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 0
 1220              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 45


 1221              		@ link register save eliminated.
1276:Generated_Source\PSoC5/screen.c ****         uint8 size;
1277:Generated_Source\PSoC5/screen.c **** 
1278:Generated_Source\PSoC5/screen.c ****     #if (screen_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/screen.c **** 
1280:Generated_Source\PSoC5/screen.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/screen.c ****         screen_DisableTxInt();
 1222              		.loc 1 1281 0
 1223 0000 0422     		movs	r2, #4
 1224 0002 0E4B     		ldr	r3, .L115
 1225 0004 1A60     		str	r2, [r3]
1282:Generated_Source\PSoC5/screen.c **** 
1283:Generated_Source\PSoC5/screen.c ****         if(screen_txBufferRead == screen_txBufferWrite)
 1226              		.loc 1 1283 0
 1227 0006 0E4B     		ldr	r3, .L115+4
 1228 0008 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 1229 000a D2B2     		uxtb	r2, r2
 1230 000c DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 1231 000e 9A42     		cmp	r2, r3
 1232 0010 0FD0     		beq	.L114
1284:Generated_Source\PSoC5/screen.c ****         {
1285:Generated_Source\PSoC5/screen.c ****             size = 0u;
1286:Generated_Source\PSoC5/screen.c ****         }
1287:Generated_Source\PSoC5/screen.c ****         else if(screen_txBufferRead < screen_txBufferWrite)
 1233              		.loc 1 1287 0
 1234 0012 0B4A     		ldr	r2, .L115+4
 1235 0014 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 1236 0016 D2B2     		uxtb	r2, r2
 1237 0018 9342     		cmp	r3, r2
 1238 001a 04D9     		bls	.L113
1288:Generated_Source\PSoC5/screen.c ****         {
1289:Generated_Source\PSoC5/screen.c ****             size = (screen_txBufferWrite - screen_txBufferRead);
 1239              		.loc 1 1289 0
 1240 001c 084A     		ldr	r2, .L115+4
 1241 001e 9079     		ldrb	r0, [r2, #6]	@ zero_extendqisi2
 1242 0020 181A     		subs	r0, r3, r0
 1243 0022 C0B2     		uxtb	r0, r0
 1244              	.LVL89:
 1245 0024 06E0     		b	.L112
 1246              	.LVL90:
 1247              	.L113:
1290:Generated_Source\PSoC5/screen.c ****         }
1291:Generated_Source\PSoC5/screen.c ****         else
1292:Generated_Source\PSoC5/screen.c ****         {
1293:Generated_Source\PSoC5/screen.c ****             size = (screen_TX_BUFFER_SIZE - screen_txBufferRead) +
 1248              		.loc 1 1293 0
 1249 0026 064A     		ldr	r2, .L115+4
 1250 0028 9079     		ldrb	r0, [r2, #6]	@ zero_extendqisi2
 1251 002a 181A     		subs	r0, r3, r0
 1252 002c 0830     		adds	r0, r0, #8
 1253 002e C0B2     		uxtb	r0, r0
 1254              	.LVL91:
 1255 0030 00E0     		b	.L112
 1256              	.LVL92:
 1257              	.L114:
1285:Generated_Source\PSoC5/screen.c ****         }
 1258              		.loc 1 1285 0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 46


 1259 0032 0020     		movs	r0, #0
 1260              	.L112:
 1261              	.LVL93:
1294:Generated_Source\PSoC5/screen.c ****                     screen_txBufferWrite;
1295:Generated_Source\PSoC5/screen.c ****         }
1296:Generated_Source\PSoC5/screen.c **** 
1297:Generated_Source\PSoC5/screen.c ****         screen_EnableTxInt();
 1262              		.loc 1 1297 0
 1263 0034 0422     		movs	r2, #4
 1264 0036 034B     		ldr	r3, .L115+8
 1265 0038 1A60     		str	r2, [r3]
1298:Generated_Source\PSoC5/screen.c **** 
1299:Generated_Source\PSoC5/screen.c ****     #else
1300:Generated_Source\PSoC5/screen.c **** 
1301:Generated_Source\PSoC5/screen.c ****         size = screen_TXSTATUS_REG;
1302:Generated_Source\PSoC5/screen.c **** 
1303:Generated_Source\PSoC5/screen.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/screen.c ****         if((size & screen_TX_STS_FIFO_FULL) != 0u)
1305:Generated_Source\PSoC5/screen.c ****         {
1306:Generated_Source\PSoC5/screen.c ****             size = screen_FIFO_LENGTH;
1307:Generated_Source\PSoC5/screen.c ****         }
1308:Generated_Source\PSoC5/screen.c ****         else if((size & screen_TX_STS_FIFO_EMPTY) != 0u)
1309:Generated_Source\PSoC5/screen.c ****         {
1310:Generated_Source\PSoC5/screen.c ****             size = 0u;
1311:Generated_Source\PSoC5/screen.c ****         }
1312:Generated_Source\PSoC5/screen.c ****         else
1313:Generated_Source\PSoC5/screen.c ****         {
1314:Generated_Source\PSoC5/screen.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/screen.c ****             size = 1u;
1316:Generated_Source\PSoC5/screen.c ****         }
1317:Generated_Source\PSoC5/screen.c **** 
1318:Generated_Source\PSoC5/screen.c ****     #endif /* (screen_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/screen.c **** 
1320:Generated_Source\PSoC5/screen.c ****     return(size);
1321:Generated_Source\PSoC5/screen.c ****     }
 1266              		.loc 1 1321 0
 1267 003a 7047     		bx	lr
 1268              	.L116:
 1269              		.align	2
 1270              	.L115:
 1271 003c 80E100E0 		.word	-536813184
 1272 0040 00000000 		.word	.LANCHOR0
 1273 0044 00E100E0 		.word	-536813312
 1274              		.cfi_endproc
 1275              	.LFE23:
 1276              		.size	screen_GetTxBufferSize, .-screen_GetTxBufferSize
 1277              		.section	.text.screen_ClearTxBuffer,"ax",%progbits
 1278              		.align	2
 1279              		.global	screen_ClearTxBuffer
 1280              		.thumb
 1281              		.thumb_func
 1282              		.type	screen_ClearTxBuffer, %function
 1283              	screen_ClearTxBuffer:
 1284              	.LFB24:
1322:Generated_Source\PSoC5/screen.c **** 
1323:Generated_Source\PSoC5/screen.c **** 
1324:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 47


1325:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_ClearTxBuffer
1326:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/screen.c ****     *
1328:Generated_Source\PSoC5/screen.c ****     * Summary:
1329:Generated_Source\PSoC5/screen.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/screen.c ****     *
1331:Generated_Source\PSoC5/screen.c ****     * Parameters:
1332:Generated_Source\PSoC5/screen.c ****     *  None.
1333:Generated_Source\PSoC5/screen.c ****     *
1334:Generated_Source\PSoC5/screen.c ****     * Return:
1335:Generated_Source\PSoC5/screen.c ****     *  None.
1336:Generated_Source\PSoC5/screen.c ****     *
1337:Generated_Source\PSoC5/screen.c ****     * Global Variables:
1338:Generated_Source\PSoC5/screen.c ****     *  screen_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/screen.c ****     *  screen_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/screen.c ****     *
1341:Generated_Source\PSoC5/screen.c ****     * Reentrant:
1342:Generated_Source\PSoC5/screen.c ****     *  No.
1343:Generated_Source\PSoC5/screen.c ****     *
1344:Generated_Source\PSoC5/screen.c ****     * Theory:
1345:Generated_Source\PSoC5/screen.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/screen.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/screen.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/screen.c ****     *
1349:Generated_Source\PSoC5/screen.c ****     * Side Effects:
1350:Generated_Source\PSoC5/screen.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/screen.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/screen.c ****     *
1353:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/screen.c ****     void screen_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/screen.c ****     {
 1285              		.loc 1 1355 0
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 0
 1288              		@ frame_needed = 0, uses_anonymous_args = 0
 1289 0000 08B5     		push	{r3, lr}
 1290              		.cfi_def_cfa_offset 8
 1291              		.cfi_offset 3, -8
 1292              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/screen.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/screen.c **** 
1358:Generated_Source\PSoC5/screen.c ****         enableInterrupts = CyEnterCriticalSection();
 1293              		.loc 1 1358 0
 1294 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1295              	.LVL94:
1359:Generated_Source\PSoC5/screen.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/screen.c ****         screen_TXDATA_AUX_CTL_REG |= (uint8)  screen_TX_FIFO_CLR;
 1296              		.loc 1 1360 0
 1297 0006 0A4B     		ldr	r3, .L119
 1298 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1299 000a 42F00102 		orr	r2, r2, #1
 1300 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/screen.c ****         screen_TXDATA_AUX_CTL_REG &= (uint8) ~screen_TX_FIFO_CLR;
 1301              		.loc 1 1361 0
 1302 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1303 0012 02F0FE02 		and	r2, r2, #254
 1304 0016 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 48


1362:Generated_Source\PSoC5/screen.c ****         CyExitCriticalSection(enableInterrupts);
 1305              		.loc 1 1362 0
 1306 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1307              	.LVL95:
1363:Generated_Source\PSoC5/screen.c **** 
1364:Generated_Source\PSoC5/screen.c ****     #if (screen_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/screen.c **** 
1366:Generated_Source\PSoC5/screen.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/screen.c ****         screen_DisableTxInt();
 1308              		.loc 1 1367 0
 1309 001c 0423     		movs	r3, #4
 1310 001e 054A     		ldr	r2, .L119+4
 1311 0020 1360     		str	r3, [r2]
1368:Generated_Source\PSoC5/screen.c **** 
1369:Generated_Source\PSoC5/screen.c ****         screen_txBufferRead = 0u;
 1312              		.loc 1 1369 0
 1313 0022 054A     		ldr	r2, .L119+8
 1314 0024 0021     		movs	r1, #0
 1315 0026 9171     		strb	r1, [r2, #6]
1370:Generated_Source\PSoC5/screen.c ****         screen_txBufferWrite = 0u;
 1316              		.loc 1 1370 0
 1317 0028 D171     		strb	r1, [r2, #7]
1371:Generated_Source\PSoC5/screen.c **** 
1372:Generated_Source\PSoC5/screen.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/screen.c ****         screen_EnableTxInt();
 1318              		.loc 1 1373 0
 1319 002a 044A     		ldr	r2, .L119+12
 1320 002c 1360     		str	r3, [r2]
 1321 002e 08BD     		pop	{r3, pc}
 1322              	.L120:
 1323              		.align	2
 1324              	.L119:
 1325 0030 97640040 		.word	1073767575
 1326 0034 80E100E0 		.word	-536813184
 1327 0038 00000000 		.word	.LANCHOR0
 1328 003c 00E100E0 		.word	-536813312
 1329              		.cfi_endproc
 1330              	.LFE24:
 1331              		.size	screen_ClearTxBuffer, .-screen_ClearTxBuffer
 1332              		.section	.text.screen_SendBreak,"ax",%progbits
 1333              		.align	2
 1334              		.global	screen_SendBreak
 1335              		.thumb
 1336              		.thumb_func
 1337              		.type	screen_SendBreak, %function
 1338              	screen_SendBreak:
 1339              	.LFB25:
1374:Generated_Source\PSoC5/screen.c **** 
1375:Generated_Source\PSoC5/screen.c ****     #endif /* (screen_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/screen.c ****     }
1377:Generated_Source\PSoC5/screen.c **** 
1378:Generated_Source\PSoC5/screen.c **** 
1379:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_SendBreak
1381:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/screen.c ****     *
1383:Generated_Source\PSoC5/screen.c ****     * Summary:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 49


1384:Generated_Source\PSoC5/screen.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/screen.c ****     *
1386:Generated_Source\PSoC5/screen.c ****     * Parameters:
1387:Generated_Source\PSoC5/screen.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/screen.c ****     *   screen_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/screen.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/screen.c ****     *   screen_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/screen.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/screen.c ****     *   screen_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/screen.c ****     *       then return.
1394:Generated_Source\PSoC5/screen.c ****     *   screen_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/screen.c ****     *      screen_SEND_BREAK and screen_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/screen.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/screen.c ****     *
1398:Generated_Source\PSoC5/screen.c ****     * Return:
1399:Generated_Source\PSoC5/screen.c ****     *  None.
1400:Generated_Source\PSoC5/screen.c ****     *
1401:Generated_Source\PSoC5/screen.c ****     * Global Variables:
1402:Generated_Source\PSoC5/screen.c ****     *  screen_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/screen.c ****     *     initialized.
1404:Generated_Source\PSoC5/screen.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/screen.c ****     *
1406:Generated_Source\PSoC5/screen.c ****     * Reentrant:
1407:Generated_Source\PSoC5/screen.c ****     *  No.
1408:Generated_Source\PSoC5/screen.c ****     *
1409:Generated_Source\PSoC5/screen.c ****     * Theory:
1410:Generated_Source\PSoC5/screen.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/screen.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/screen.c ****     *  operation.
1413:Generated_Source\PSoC5/screen.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/screen.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/screen.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/screen.c ****     *     complete.
1417:Generated_Source\PSoC5/screen.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/screen.c ****     *     operation
1419:Generated_Source\PSoC5/screen.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/screen.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/screen.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/screen.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/screen.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/screen.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/screen.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/screen.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/screen.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/screen.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/screen.c ****     *     When interrupt appear with screen_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/screen.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/screen.c ****     *
1432:Generated_Source\PSoC5/screen.c ****     * Side Effects:
1433:Generated_Source\PSoC5/screen.c ****     *  The screen_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/screen.c ****     *  break signal.
1435:Generated_Source\PSoC5/screen.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/screen.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/screen.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/screen.c ****     *
1439:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/screen.c ****     void screen_SendBreak(uint8 retMode) 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 50


1441:Generated_Source\PSoC5/screen.c ****     {
 1340              		.loc 1 1441 0
 1341              		.cfi_startproc
 1342              		@ args = 0, pretend = 0, frame = 0
 1343              		@ frame_needed = 0, uses_anonymous_args = 0
 1344              		@ link register save eliminated.
 1345              	.LVL96:
1442:Generated_Source\PSoC5/screen.c **** 
1443:Generated_Source\PSoC5/screen.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/screen.c ****         if(screen_initVar != 0u)
 1346              		.loc 1 1444 0
 1347 0000 124B     		ldr	r3, .L128
 1348 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1349 0004 0BB3     		cbz	r3, .L121
 1350              	.LBB2:
1445:Generated_Source\PSoC5/screen.c ****         {
1446:Generated_Source\PSoC5/screen.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/screen.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/screen.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/screen.c **** 
1450:Generated_Source\PSoC5/screen.c ****         #if(screen_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/screen.c **** 
1452:Generated_Source\PSoC5/screen.c ****             if( (retMode == screen_SEND_BREAK) ||
1453:Generated_Source\PSoC5/screen.c ****                 (retMode == screen_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/screen.c ****             {
1455:Generated_Source\PSoC5/screen.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/screen.c ****                 screen_WriteControlRegister(screen_ReadControlRegister() |
1457:Generated_Source\PSoC5/screen.c ****                                                       screen_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/screen.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/screen.c ****                 screen_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/screen.c **** 
1461:Generated_Source\PSoC5/screen.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/screen.c ****                 {
1463:Generated_Source\PSoC5/screen.c ****                     tmpStat = screen_TXSTATUS_REG;
1464:Generated_Source\PSoC5/screen.c ****                 }
1465:Generated_Source\PSoC5/screen.c ****                 while((tmpStat & screen_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/screen.c ****             }
1467:Generated_Source\PSoC5/screen.c **** 
1468:Generated_Source\PSoC5/screen.c ****             if( (retMode == screen_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/screen.c ****                 (retMode == screen_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/screen.c ****             {
1471:Generated_Source\PSoC5/screen.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/screen.c ****                 {
1473:Generated_Source\PSoC5/screen.c ****                     tmpStat = screen_TXSTATUS_REG;
1474:Generated_Source\PSoC5/screen.c ****                 }
1475:Generated_Source\PSoC5/screen.c ****                 while(((uint8)~tmpStat & screen_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/screen.c ****             }
1477:Generated_Source\PSoC5/screen.c **** 
1478:Generated_Source\PSoC5/screen.c ****             if( (retMode == screen_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/screen.c ****                 (retMode == screen_REINIT) ||
1480:Generated_Source\PSoC5/screen.c ****                 (retMode == screen_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/screen.c ****             {
1482:Generated_Source\PSoC5/screen.c ****                 screen_WriteControlRegister(screen_ReadControlRegister() &
1483:Generated_Source\PSoC5/screen.c ****                                               (uint8)~screen_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/screen.c ****             }
1485:Generated_Source\PSoC5/screen.c **** 
1486:Generated_Source\PSoC5/screen.c ****         #else /* screen_HD_ENABLED Full Duplex mode */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 51


1487:Generated_Source\PSoC5/screen.c **** 
1488:Generated_Source\PSoC5/screen.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/screen.c **** 
1490:Generated_Source\PSoC5/screen.c ****             if( (retMode == screen_SEND_BREAK) ||
 1351              		.loc 1 1490 0
 1352 0006 08B1     		cbz	r0, .L123
 1353              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1354 0008 0328     		cmp	r0, #3
 1355 000a 0DD1     		bne	.L124
 1356              	.L123:
1491:Generated_Source\PSoC5/screen.c ****                 (retMode == screen_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/screen.c ****             {
1493:Generated_Source\PSoC5/screen.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/screen.c ****                 #if( (screen_PARITY_TYPE != screen__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/screen.c ****                                     (screen_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/screen.c ****                     screen_WriteControlRegister(screen_ReadControlRegister() |
1497:Generated_Source\PSoC5/screen.c ****                                                           screen_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/screen.c ****                 #endif /* End screen_PARITY_TYPE != screen__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/screen.c **** 
1500:Generated_Source\PSoC5/screen.c ****                 #if(screen_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/screen.c ****                     txPeriod = screen_TXBITCLKTX_COMPLETE_REG;
 1357              		.loc 1 1501 0 is_stmt 1
 1358 000c 104B     		ldr	r3, .L128+4
 1359 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1360 0010 0E4A     		ldr	r2, .L128
 1361 0012 1172     		strb	r1, [r2, #8]
1502:Generated_Source\PSoC5/screen.c ****                     screen_TXBITCLKTX_COMPLETE_REG = screen_TXBITCTR_BREAKBITS;
 1362              		.loc 1 1502 0
 1363 0014 6722     		movs	r2, #103
 1364 0016 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/screen.c ****                 #else
1504:Generated_Source\PSoC5/screen.c ****                     txPeriod = screen_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/screen.c ****                     screen_TXBITCTR_PERIOD_REG = screen_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/screen.c ****                 #endif /* End screen_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/screen.c **** 
1508:Generated_Source\PSoC5/screen.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/screen.c ****                 screen_TXDATA_REG = 0u;
 1365              		.loc 1 1509 0
 1366 0018 0022     		movs	r2, #0
 1367 001a 1233     		adds	r3, r3, #18
 1368 001c 1A70     		strb	r2, [r3]
 1369              	.L125:
1510:Generated_Source\PSoC5/screen.c **** 
1511:Generated_Source\PSoC5/screen.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/screen.c ****                 {
1513:Generated_Source\PSoC5/screen.c ****                     tmpStat = screen_TXSTATUS_REG;
 1370              		.loc 1 1513 0 discriminator 1
 1371 001e 0D4B     		ldr	r3, .L128+8
 1372 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1373              	.LVL97:
1514:Generated_Source\PSoC5/screen.c ****                 }
1515:Generated_Source\PSoC5/screen.c ****                 while((tmpStat & screen_TX_STS_FIFO_EMPTY) != 0u);
 1374              		.loc 1 1515 0 discriminator 1
 1375 0022 13F0020F 		tst	r3, #2
 1376 0026 FAD1     		bne	.L125
 1377              	.LVL98:
 1378              	.L124:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 52


1516:Generated_Source\PSoC5/screen.c ****             }
1517:Generated_Source\PSoC5/screen.c **** 
1518:Generated_Source\PSoC5/screen.c ****             if( (retMode == screen_WAIT_FOR_COMPLETE_REINIT) ||
 1379              		.loc 1 1518 0
 1380 0028 0128     		cmp	r0, #1
 1381 002a 01D0     		beq	.L126
 1382              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1383 002c 0328     		cmp	r0, #3
 1384 002e 04D1     		bne	.L127
 1385              	.L126:
1519:Generated_Source\PSoC5/screen.c ****                 (retMode == screen_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/screen.c ****             {
1521:Generated_Source\PSoC5/screen.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/screen.c ****                 {
1523:Generated_Source\PSoC5/screen.c ****                     tmpStat = screen_TXSTATUS_REG;
 1386              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1387 0030 084B     		ldr	r3, .L128+8
 1388 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1389              	.LVL99:
1524:Generated_Source\PSoC5/screen.c ****                 }
1525:Generated_Source\PSoC5/screen.c ****                 while(((uint8)~tmpStat & screen_TX_STS_COMPLETE) != 0u);
 1390              		.loc 1 1525 0 discriminator 1
 1391 0034 13F0010F 		tst	r3, #1
 1392 0038 FAD0     		beq	.L126
 1393              	.LVL100:
 1394              	.L127:
1526:Generated_Source\PSoC5/screen.c ****             }
1527:Generated_Source\PSoC5/screen.c **** 
1528:Generated_Source\PSoC5/screen.c ****             if( (retMode == screen_WAIT_FOR_COMPLETE_REINIT) ||
1529:Generated_Source\PSoC5/screen.c ****                 (retMode == screen_REINIT) ||
 1395              		.loc 1 1529 0
 1396 003a 0138     		subs	r0, r0, #1
 1397              	.LVL101:
 1398 003c C0B2     		uxtb	r0, r0
1528:Generated_Source\PSoC5/screen.c ****                 (retMode == screen_REINIT) ||
 1399              		.loc 1 1528 0
 1400 003e 0228     		cmp	r0, #2
 1401 0040 03D8     		bhi	.L121
1530:Generated_Source\PSoC5/screen.c ****                 (retMode == screen_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/screen.c ****             {
1532:Generated_Source\PSoC5/screen.c **** 
1533:Generated_Source\PSoC5/screen.c ****             #if(screen_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/screen.c ****                 screen_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1402              		.loc 1 1534 0
 1403 0042 024B     		ldr	r3, .L128
 1404 0044 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 1405 0046 024B     		ldr	r3, .L128+4
 1406 0048 1A70     		strb	r2, [r3]
 1407              	.L121:
 1408 004a 7047     		bx	lr
 1409              	.L129:
 1410              		.align	2
 1411              	.L128:
 1412 004c 00000000 		.word	.LANCHOR0
 1413 0050 35640040 		.word	1073767477
 1414 0054 67640040 		.word	1073767527
 1415              	.LBE2:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 53


 1416              		.cfi_endproc
 1417              	.LFE25:
 1418              		.size	screen_SendBreak, .-screen_SendBreak
 1419              		.section	.text.screen_SetTxAddressMode,"ax",%progbits
 1420              		.align	2
 1421              		.global	screen_SetTxAddressMode
 1422              		.thumb
 1423              		.thumb_func
 1424              		.type	screen_SetTxAddressMode, %function
 1425              	screen_SetTxAddressMode:
 1426              	.LFB26:
1535:Generated_Source\PSoC5/screen.c ****             #else
1536:Generated_Source\PSoC5/screen.c ****                 screen_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/screen.c ****             #endif /* End screen_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/screen.c **** 
1539:Generated_Source\PSoC5/screen.c ****             #if( (screen_PARITY_TYPE != screen__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/screen.c ****                  (screen_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/screen.c ****                 screen_WriteControlRegister(screen_ReadControlRegister() &
1542:Generated_Source\PSoC5/screen.c ****                                                       (uint8) ~screen_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/screen.c ****             #endif /* End screen_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/screen.c ****             }
1545:Generated_Source\PSoC5/screen.c ****         #endif    /* End screen_HD_ENABLED */
1546:Generated_Source\PSoC5/screen.c ****         }
1547:Generated_Source\PSoC5/screen.c ****     }
1548:Generated_Source\PSoC5/screen.c **** 
1549:Generated_Source\PSoC5/screen.c **** 
1550:Generated_Source\PSoC5/screen.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/screen.c ****     * Function Name: screen_SetTxAddressMode
1552:Generated_Source\PSoC5/screen.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/screen.c ****     *
1554:Generated_Source\PSoC5/screen.c ****     * Summary:
1555:Generated_Source\PSoC5/screen.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/screen.c ****     *
1557:Generated_Source\PSoC5/screen.c ****     * Parameters:
1558:Generated_Source\PSoC5/screen.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/screen.c ****     *       screen_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/screen.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/screen.c ****     *       screen_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/screen.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/screen.c ****     *
1564:Generated_Source\PSoC5/screen.c ****     * Return:
1565:Generated_Source\PSoC5/screen.c ****     *  None.
1566:Generated_Source\PSoC5/screen.c ****     *
1567:Generated_Source\PSoC5/screen.c ****     * Side Effects:
1568:Generated_Source\PSoC5/screen.c ****     *  This function sets and clears screen_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/screen.c ****     *  register.
1570:Generated_Source\PSoC5/screen.c ****     *
1571:Generated_Source\PSoC5/screen.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/screen.c ****     void screen_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/screen.c ****     {
 1427              		.loc 1 1573 0
 1428              		.cfi_startproc
 1429              		@ args = 0, pretend = 0, frame = 0
 1430              		@ frame_needed = 0, uses_anonymous_args = 0
 1431              		@ link register save eliminated.
 1432              	.LVL102:
 1433 0000 7047     		bx	lr
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 54


 1434              		.cfi_endproc
 1435              	.LFE26:
 1436              		.size	screen_SetTxAddressMode, .-screen_SetTxAddressMode
 1437              		.global	screen_rxBufferOverflow
 1438              		.global	screen_rxBufferLoopDetect
 1439              		.global	screen_rxBufferWrite
 1440              		.global	screen_rxBufferRead
 1441              		.comm	screen_rxBuffer,20,4
 1442              		.global	screen_errorStatus
 1443              		.global	screen_txBufferWrite
 1444              		.global	screen_txBufferRead
 1445              		.comm	screen_txBuffer,8,4
 1446              		.global	screen_initVar
 1447 0002 00BF     		.bss
 1448              		.set	.LANCHOR0,. + 0
 1449              		.type	screen_errorStatus, %object
 1450              		.size	screen_errorStatus, 1
 1451              	screen_errorStatus:
 1452 0000 00       		.space	1
 1453              		.type	screen_initVar, %object
 1454              		.size	screen_initVar, 1
 1455              	screen_initVar:
 1456 0001 00       		.space	1
 1457              		.type	screen_rxBufferRead, %object
 1458              		.size	screen_rxBufferRead, 1
 1459              	screen_rxBufferRead:
 1460 0002 00       		.space	1
 1461              		.type	screen_rxBufferWrite, %object
 1462              		.size	screen_rxBufferWrite, 1
 1463              	screen_rxBufferWrite:
 1464 0003 00       		.space	1
 1465              		.type	screen_rxBufferLoopDetect, %object
 1466              		.size	screen_rxBufferLoopDetect, 1
 1467              	screen_rxBufferLoopDetect:
 1468 0004 00       		.space	1
 1469              		.type	screen_rxBufferOverflow, %object
 1470              		.size	screen_rxBufferOverflow, 1
 1471              	screen_rxBufferOverflow:
 1472 0005 00       		.space	1
 1473              		.type	screen_txBufferRead, %object
 1474              		.size	screen_txBufferRead, 1
 1475              	screen_txBufferRead:
 1476 0006 00       		.space	1
 1477              		.type	screen_txBufferWrite, %object
 1478              		.size	screen_txBufferWrite, 1
 1479              	screen_txBufferWrite:
 1480 0007 00       		.space	1
 1481              		.type	txPeriod.5140, %object
 1482              		.size	txPeriod.5140, 1
 1483              	txPeriod.5140:
 1484 0008 00       		.space	1
 1485              		.text
 1486              	.Letext0:
 1487              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1488              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1489              		.file 4 "Generated_Source\\PSoC5\\screen_IntClock.h"
 1490              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 55


 1491              	.Ldebug_info0:
 1492 0000 BA070000 		.4byte	0x7ba
 1493 0004 0400     		.2byte	0x4
 1494 0006 00000000 		.4byte	.Ldebug_abbrev0
 1495 000a 04       		.byte	0x4
 1496 000b 01       		.uleb128 0x1
 1497 000c BF030000 		.4byte	.LASF84
 1498 0010 0C       		.byte	0xc
 1499 0011 C9000000 		.4byte	.LASF85
 1500 0015 2C050000 		.4byte	.LASF86
 1501 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1502 001d 00000000 		.4byte	0
 1503 0021 00000000 		.4byte	.Ldebug_line0
 1504 0025 02       		.uleb128 0x2
 1505 0026 01       		.byte	0x1
 1506 0027 06       		.byte	0x6
 1507 0028 8B000000 		.4byte	.LASF0
 1508 002c 02       		.uleb128 0x2
 1509 002d 01       		.byte	0x1
 1510 002e 08       		.byte	0x8
 1511 002f 85030000 		.4byte	.LASF1
 1512 0033 02       		.uleb128 0x2
 1513 0034 02       		.byte	0x2
 1514 0035 05       		.byte	0x5
 1515 0036 B5030000 		.4byte	.LASF2
 1516 003a 02       		.uleb128 0x2
 1517 003b 02       		.byte	0x2
 1518 003c 07       		.byte	0x7
 1519 003d 1F020000 		.4byte	.LASF3
 1520 0041 02       		.uleb128 0x2
 1521 0042 04       		.byte	0x4
 1522 0043 05       		.byte	0x5
 1523 0044 27010000 		.4byte	.LASF4
 1524 0048 02       		.uleb128 0x2
 1525 0049 04       		.byte	0x4
 1526 004a 07       		.byte	0x7
 1527 004b ED010000 		.4byte	.LASF5
 1528 004f 02       		.uleb128 0x2
 1529 0050 08       		.byte	0x8
 1530 0051 05       		.byte	0x5
 1531 0052 7D000000 		.4byte	.LASF6
 1532 0056 02       		.uleb128 0x2
 1533 0057 08       		.byte	0x8
 1534 0058 07       		.byte	0x7
 1535 0059 66000000 		.4byte	.LASF7
 1536 005d 03       		.uleb128 0x3
 1537 005e 04       		.byte	0x4
 1538 005f 05       		.byte	0x5
 1539 0060 696E7400 		.ascii	"int\000"
 1540 0064 02       		.uleb128 0x2
 1541 0065 04       		.byte	0x4
 1542 0066 07       		.byte	0x7
 1543 0067 C1010000 		.4byte	.LASF8
 1544 006b 04       		.uleb128 0x4
 1545 006c 40010000 		.4byte	.LASF9
 1546 0070 02       		.byte	0x2
 1547 0071 9201     		.2byte	0x192
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 56


 1548 0073 2C000000 		.4byte	0x2c
 1549 0077 04       		.uleb128 0x4
 1550 0078 00000000 		.4byte	.LASF10
 1551 007c 02       		.byte	0x2
 1552 007d 9301     		.2byte	0x193
 1553 007f 3A000000 		.4byte	0x3a
 1554 0083 04       		.uleb128 0x4
 1555 0084 71010000 		.4byte	.LASF11
 1556 0088 02       		.byte	0x2
 1557 0089 9401     		.2byte	0x194
 1558 008b 48000000 		.4byte	0x48
 1559 008f 02       		.uleb128 0x2
 1560 0090 04       		.byte	0x4
 1561 0091 04       		.byte	0x4
 1562 0092 6B030000 		.4byte	.LASF12
 1563 0096 02       		.uleb128 0x2
 1564 0097 08       		.byte	0x8
 1565 0098 04       		.byte	0x4
 1566 0099 5E010000 		.4byte	.LASF13
 1567 009d 04       		.uleb128 0x4
 1568 009e 11050000 		.4byte	.LASF14
 1569 00a2 02       		.byte	0x2
 1570 00a3 A301     		.2byte	0x1a3
 1571 00a5 A9000000 		.4byte	0xa9
 1572 00a9 02       		.uleb128 0x2
 1573 00aa 01       		.byte	0x1
 1574 00ab 08       		.byte	0x8
 1575 00ac BB040000 		.4byte	.LASF15
 1576 00b0 04       		.uleb128 0x4
 1577 00b1 71030000 		.4byte	.LASF16
 1578 00b5 02       		.byte	0x2
 1579 00b6 3C02     		.2byte	0x23c
 1580 00b8 BC000000 		.4byte	0xbc
 1581 00bc 05       		.uleb128 0x5
 1582 00bd 6B000000 		.4byte	0x6b
 1583 00c1 04       		.uleb128 0x4
 1584 00c2 77020000 		.4byte	.LASF17
 1585 00c6 02       		.byte	0x2
 1586 00c7 3E02     		.2byte	0x23e
 1587 00c9 CD000000 		.4byte	0xcd
 1588 00cd 05       		.uleb128 0x5
 1589 00ce 83000000 		.4byte	0x83
 1590 00d2 02       		.uleb128 0x2
 1591 00d3 08       		.byte	0x8
 1592 00d4 04       		.byte	0x4
 1593 00d5 B2020000 		.4byte	.LASF18
 1594 00d9 02       		.uleb128 0x2
 1595 00da 04       		.byte	0x4
 1596 00db 07       		.byte	0x7
 1597 00dc 9A020000 		.4byte	.LASF19
 1598 00e0 06       		.uleb128 0x6
 1599 00e1 49000000 		.4byte	.LASF20
 1600 00e5 01       		.byte	0x1
 1601 00e6 6A       		.byte	0x6a
 1602 00e7 00000000 		.4byte	.LFB1
 1603 00eb 60000000 		.4byte	.LFE1-.LFB1
 1604 00ef 01       		.uleb128 0x1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 57


 1605 00f0 9C       		.byte	0x9c
 1606 00f1 48010000 		.4byte	0x148
 1607 00f5 07       		.uleb128 0x7
 1608 00f6 0A000000 		.4byte	.LVL0
 1609 00fa 7B070000 		.4byte	0x77b
 1610 00fe 08010000 		.4byte	0x108
 1611 0102 08       		.uleb128 0x8
 1612 0103 01       		.uleb128 0x1
 1613 0104 50       		.byte	0x50
 1614 0105 01       		.uleb128 0x1
 1615 0106 31       		.byte	0x31
 1616 0107 00       		.byte	0
 1617 0108 07       		.uleb128 0x7
 1618 0109 12000000 		.4byte	.LVL1
 1619 010d 86070000 		.4byte	0x786
 1620 0111 20010000 		.4byte	0x120
 1621 0115 08       		.uleb128 0x8
 1622 0116 01       		.uleb128 0x1
 1623 0117 50       		.byte	0x50
 1624 0118 01       		.uleb128 0x1
 1625 0119 31       		.byte	0x31
 1626 011a 08       		.uleb128 0x8
 1627 011b 01       		.uleb128 0x1
 1628 011c 51       		.byte	0x51
 1629 011d 01       		.uleb128 0x1
 1630 011e 37       		.byte	0x37
 1631 011f 00       		.byte	0
 1632 0120 07       		.uleb128 0x7
 1633 0121 2E000000 		.4byte	.LVL2
 1634 0125 7B070000 		.4byte	0x77b
 1635 0129 33010000 		.4byte	0x133
 1636 012d 08       		.uleb128 0x8
 1637 012e 01       		.uleb128 0x1
 1638 012f 50       		.byte	0x50
 1639 0130 01       		.uleb128 0x1
 1640 0131 32       		.byte	0x32
 1641 0132 00       		.byte	0
 1642 0133 09       		.uleb128 0x9
 1643 0134 36000000 		.4byte	.LVL3
 1644 0138 86070000 		.4byte	0x786
 1645 013c 08       		.uleb128 0x8
 1646 013d 01       		.uleb128 0x1
 1647 013e 50       		.byte	0x50
 1648 013f 01       		.uleb128 0x1
 1649 0140 32       		.byte	0x32
 1650 0141 08       		.uleb128 0x8
 1651 0142 01       		.uleb128 0x1
 1652 0143 51       		.byte	0x51
 1653 0144 01       		.uleb128 0x1
 1654 0145 37       		.byte	0x37
 1655 0146 00       		.byte	0
 1656 0147 00       		.byte	0
 1657 0148 06       		.uleb128 0x6
 1658 0149 91050000 		.4byte	.LASF21
 1659 014d 01       		.byte	0x1
 1660 014e B7       		.byte	0xb7
 1661 014f 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 58


 1662 0153 54000000 		.4byte	.LFE2-.LFB2
 1663 0157 01       		.uleb128 0x1
 1664 0158 9C       		.byte	0x9c
 1665 0159 8F010000 		.4byte	0x18f
 1666 015d 0A       		.uleb128 0xa
 1667 015e AF050000 		.4byte	.LASF24
 1668 0162 01       		.byte	0x1
 1669 0163 B9       		.byte	0xb9
 1670 0164 6B000000 		.4byte	0x6b
 1671 0168 00000000 		.4byte	.LLST0
 1672 016c 0B       		.uleb128 0xb
 1673 016d 06000000 		.4byte	.LVL4
 1674 0171 91070000 		.4byte	0x791
 1675 0175 0B       		.uleb128 0xb
 1676 0176 3A000000 		.4byte	.LVL6
 1677 017a 9C070000 		.4byte	0x79c
 1678 017e 09       		.uleb128 0x9
 1679 017f 40000000 		.4byte	.LVL7
 1680 0183 A7070000 		.4byte	0x7a7
 1681 0187 08       		.uleb128 0x8
 1682 0188 01       		.uleb128 0x1
 1683 0189 50       		.byte	0x50
 1684 018a 02       		.uleb128 0x2
 1685 018b 74       		.byte	0x74
 1686 018c 00       		.sleb128 0
 1687 018d 00       		.byte	0
 1688 018e 00       		.byte	0
 1689 018f 06       		.uleb128 0x6
 1690 0190 FE050000 		.4byte	.LASF22
 1691 0194 01       		.byte	0x1
 1692 0195 4C       		.byte	0x4c
 1693 0196 00000000 		.4byte	.LFB0
 1694 019a 1C000000 		.4byte	.LFE0-.LFB0
 1695 019e 01       		.uleb128 0x1
 1696 019f 9C       		.byte	0x9c
 1697 01a0 B7010000 		.4byte	0x1b7
 1698 01a4 0B       		.uleb128 0xb
 1699 01a5 0C000000 		.4byte	.LVL9
 1700 01a9 E0000000 		.4byte	0xe0
 1701 01ad 0B       		.uleb128 0xb
 1702 01ae 16000000 		.4byte	.LVL10
 1703 01b2 48010000 		.4byte	0x148
 1704 01b6 00       		.byte	0
 1705 01b7 06       		.uleb128 0x6
 1706 01b8 A9030000 		.4byte	.LASF23
 1707 01bc 01       		.byte	0x1
 1708 01bd F0       		.byte	0xf0
 1709 01be 00000000 		.4byte	.LFB3
 1710 01c2 4C000000 		.4byte	.LFE3-.LFB3
 1711 01c6 01       		.uleb128 0x1
 1712 01c7 9C       		.byte	0x9c
 1713 01c8 FE010000 		.4byte	0x1fe
 1714 01cc 0A       		.uleb128 0xa
 1715 01cd AF050000 		.4byte	.LASF24
 1716 01d1 01       		.byte	0x1
 1717 01d2 F2       		.byte	0xf2
 1718 01d3 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 59


 1719 01d7 13000000 		.4byte	.LLST1
 1720 01db 0B       		.uleb128 0xb
 1721 01dc 06000000 		.4byte	.LVL11
 1722 01e0 91070000 		.4byte	0x791
 1723 01e4 0B       		.uleb128 0xb
 1724 01e5 16000000 		.4byte	.LVL13
 1725 01e9 B2070000 		.4byte	0x7b2
 1726 01ed 09       		.uleb128 0x9
 1727 01ee 3A000000 		.4byte	.LVL14
 1728 01f2 A7070000 		.4byte	0x7a7
 1729 01f6 08       		.uleb128 0x8
 1730 01f7 01       		.uleb128 0x1
 1731 01f8 50       		.byte	0x50
 1732 01f9 02       		.uleb128 0x2
 1733 01fa 74       		.byte	0x74
 1734 01fb 00       		.sleb128 0
 1735 01fc 00       		.byte	0
 1736 01fd 00       		.byte	0
 1737 01fe 0C       		.uleb128 0xc
 1738 01ff 69040000 		.4byte	.LASF50
 1739 0203 01       		.byte	0x1
 1740 0204 2701     		.2byte	0x127
 1741 0206 6B000000 		.4byte	0x6b
 1742 020a 00000000 		.4byte	.LFB4
 1743 020e 04000000 		.4byte	.LFE4-.LFB4
 1744 0212 01       		.uleb128 0x1
 1745 0213 9C       		.byte	0x9c
 1746 0214 0D       		.uleb128 0xd
 1747 0215 4D040000 		.4byte	.LASF25
 1748 0219 01       		.byte	0x1
 1749 021a 3F01     		.2byte	0x13f
 1750 021c 00000000 		.4byte	.LFB5
 1751 0220 02000000 		.4byte	.LFE5-.LFB5
 1752 0224 01       		.uleb128 0x1
 1753 0225 9C       		.byte	0x9c
 1754 0226 39020000 		.4byte	0x239
 1755 022a 0E       		.uleb128 0xe
 1756 022b 78010000 		.4byte	.LASF27
 1757 022f 01       		.byte	0x1
 1758 0230 3F01     		.2byte	0x13f
 1759 0232 6B000000 		.4byte	0x6b
 1760 0236 01       		.uleb128 0x1
 1761 0237 50       		.byte	0x50
 1762 0238 00       		.byte	0
 1763 0239 0D       		.uleb128 0xd
 1764 023a 97000000 		.4byte	.LASF26
 1765 023e 01       		.byte	0x1
 1766 023f 6701     		.2byte	0x167
 1767 0241 00000000 		.4byte	.LFB6
 1768 0245 0C000000 		.4byte	.LFE6-.LFB6
 1769 0249 01       		.uleb128 0x1
 1770 024a 9C       		.byte	0x9c
 1771 024b 5E020000 		.4byte	0x25e
 1772 024f 0E       		.uleb128 0xe
 1773 0250 70020000 		.4byte	.LASF28
 1774 0254 01       		.byte	0x1
 1775 0255 6701     		.2byte	0x167
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 60


 1776 0257 6B000000 		.4byte	0x6b
 1777 025b 01       		.uleb128 0x1
 1778 025c 50       		.byte	0x50
 1779 025d 00       		.byte	0
 1780 025e 0F       		.uleb128 0xf
 1781 025f FE000000 		.4byte	.LASF32
 1782 0263 01       		.byte	0x1
 1783 0264 8801     		.2byte	0x188
 1784 0266 6B000000 		.4byte	0x6b
 1785 026a 00000000 		.4byte	.LFB7
 1786 026e 64000000 		.4byte	.LFE7-.LFB7
 1787 0272 01       		.uleb128 0x1
 1788 0273 9C       		.byte	0x9c
 1789 0274 A7020000 		.4byte	0x2a7
 1790 0278 10       		.uleb128 0x10
 1791 0279 B4040000 		.4byte	.LASF29
 1792 027d 01       		.byte	0x1
 1793 027e 8A01     		.2byte	0x18a
 1794 0280 6B000000 		.4byte	0x6b
 1795 0284 26000000 		.4byte	.LLST2
 1796 0288 10       		.uleb128 0x10
 1797 0289 9F050000 		.4byte	.LASF30
 1798 028d 01       		.byte	0x1
 1799 028e 8E01     		.2byte	0x18e
 1800 0290 6B000000 		.4byte	0x6b
 1801 0294 44000000 		.4byte	.LLST3
 1802 0298 11       		.uleb128 0x11
 1803 0299 04030000 		.4byte	.LASF31
 1804 029d 01       		.byte	0x1
 1805 029e 8F01     		.2byte	0x18f
 1806 02a0 6B000000 		.4byte	0x6b
 1807 02a4 01       		.uleb128 0x1
 1808 02a5 51       		.byte	0x51
 1809 02a6 00       		.byte	0
 1810 02a7 0F       		.uleb128 0xf
 1811 02a8 C7050000 		.4byte	.LASF33
 1812 02ac 01       		.byte	0x1
 1813 02ad E501     		.2byte	0x1e5
 1814 02af 6B000000 		.4byte	0x6b
 1815 02b3 00000000 		.4byte	.LFB8
 1816 02b7 28000000 		.4byte	.LFE8-.LFB8
 1817 02bb 01       		.uleb128 0x1
 1818 02bc 9C       		.byte	0x9c
 1819 02bd D0020000 		.4byte	0x2d0
 1820 02c1 11       		.uleb128 0x11
 1821 02c2 C0050000 		.4byte	.LASF34
 1822 02c6 01       		.byte	0x1
 1823 02c7 E701     		.2byte	0x1e7
 1824 02c9 6B000000 		.4byte	0x6b
 1825 02cd 01       		.uleb128 0x1
 1826 02ce 50       		.byte	0x50
 1827 02cf 00       		.byte	0
 1828 02d0 0F       		.uleb128 0xf
 1829 02d1 4A020000 		.4byte	.LASF35
 1830 02d5 01       		.byte	0x1
 1831 02d6 1402     		.2byte	0x214
 1832 02d8 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 61


 1833 02dc 00000000 		.4byte	.LFB9
 1834 02e0 80000000 		.4byte	.LFE9-.LFB9
 1835 02e4 01       		.uleb128 0x1
 1836 02e5 9C       		.byte	0x9c
 1837 02e6 29030000 		.4byte	0x329
 1838 02ea 10       		.uleb128 0x10
 1839 02eb B4040000 		.4byte	.LASF29
 1840 02ef 01       		.byte	0x1
 1841 02f0 1602     		.2byte	0x216
 1842 02f2 6B000000 		.4byte	0x6b
 1843 02f6 89000000 		.4byte	.LLST4
 1844 02fa 10       		.uleb128 0x10
 1845 02fb 15030000 		.4byte	.LASF36
 1846 02ff 01       		.byte	0x1
 1847 0300 1702     		.2byte	0x217
 1848 0302 6B000000 		.4byte	0x6b
 1849 0306 D6000000 		.4byte	.LLST5
 1850 030a 10       		.uleb128 0x10
 1851 030b 9F050000 		.4byte	.LASF30
 1852 030f 01       		.byte	0x1
 1853 0310 1A02     		.2byte	0x21a
 1854 0312 6B000000 		.4byte	0x6b
 1855 0316 E9000000 		.4byte	.LLST6
 1856 031a 11       		.uleb128 0x11
 1857 031b 04030000 		.4byte	.LASF31
 1858 031f 01       		.byte	0x1
 1859 0320 1B02     		.2byte	0x21b
 1860 0322 6B000000 		.4byte	0x6b
 1861 0326 01       		.uleb128 0x1
 1862 0327 51       		.byte	0x51
 1863 0328 00       		.byte	0
 1864 0329 0F       		.uleb128 0xf
 1865 032a DB050000 		.4byte	.LASF37
 1866 032e 01       		.byte	0x1
 1867 032f 7A02     		.2byte	0x27a
 1868 0331 77000000 		.4byte	0x77
 1869 0335 00000000 		.4byte	.LFB10
 1870 0339 2C000000 		.4byte	.LFE10-.LFB10
 1871 033d 01       		.uleb128 0x1
 1872 033e 9C       		.byte	0x9c
 1873 033f 5D030000 		.4byte	0x35d
 1874 0343 10       		.uleb128 0x10
 1875 0344 DE010000 		.4byte	.LASF38
 1876 0348 01       		.byte	0x1
 1877 0349 7E02     		.2byte	0x27e
 1878 034b 77000000 		.4byte	0x77
 1879 034f 2E010000 		.4byte	.LLST7
 1880 0353 0B       		.uleb128 0xb
 1881 0354 1A000000 		.4byte	.LVL49
 1882 0358 5E020000 		.4byte	0x25e
 1883 035c 00       		.byte	0
 1884 035d 0F       		.uleb128 0xf
 1885 035e C0040000 		.4byte	.LASF39
 1886 0362 01       		.byte	0x1
 1887 0363 AB02     		.2byte	0x2ab
 1888 0365 6B000000 		.4byte	0x6b
 1889 0369 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 62


 1890 036d 60000000 		.4byte	.LFE11-.LFB11
 1891 0371 01       		.uleb128 0x1
 1892 0372 9C       		.byte	0x9c
 1893 0373 88030000 		.4byte	0x388
 1894 0377 10       		.uleb128 0x10
 1895 0378 1A020000 		.4byte	.LASF40
 1896 037c 01       		.byte	0x1
 1897 037d AE02     		.2byte	0x2ae
 1898 037f 6B000000 		.4byte	0x6b
 1899 0383 41010000 		.4byte	.LLST8
 1900 0387 00       		.byte	0
 1901 0388 0D       		.uleb128 0xd
 1902 0389 E9000000 		.4byte	.LASF41
 1903 038d 01       		.byte	0x1
 1904 038e F502     		.2byte	0x2f5
 1905 0390 00000000 		.4byte	.LFB12
 1906 0394 44000000 		.4byte	.LFE12-.LFB12
 1907 0398 01       		.uleb128 0x1
 1908 0399 9C       		.byte	0x9c
 1909 039a C1030000 		.4byte	0x3c1
 1910 039e 10       		.uleb128 0x10
 1911 039f AF050000 		.4byte	.LASF24
 1912 03a3 01       		.byte	0x1
 1913 03a4 F702     		.2byte	0x2f7
 1914 03a6 6B000000 		.4byte	0x6b
 1915 03aa 6A010000 		.4byte	.LLST9
 1916 03ae 0B       		.uleb128 0xb
 1917 03af 06000000 		.4byte	.LVL55
 1918 03b3 91070000 		.4byte	0x791
 1919 03b7 0B       		.uleb128 0xb
 1920 03b8 1C000000 		.4byte	.LVL56
 1921 03bc A7070000 		.4byte	0x7a7
 1922 03c0 00       		.byte	0
 1923 03c1 0D       		.uleb128 0xd
 1924 03c2 46010000 		.4byte	.LASF42
 1925 03c6 01       		.byte	0x1
 1926 03c7 2D03     		.2byte	0x32d
 1927 03c9 00000000 		.4byte	.LFB13
 1928 03cd 02000000 		.4byte	.LFE13-.LFB13
 1929 03d1 01       		.uleb128 0x1
 1930 03d2 9C       		.byte	0x9c
 1931 03d3 E6030000 		.4byte	0x3e6
 1932 03d7 0E       		.uleb128 0xe
 1933 03d8 65010000 		.4byte	.LASF43
 1934 03dc 01       		.byte	0x1
 1935 03dd 2D03     		.2byte	0x32d
 1936 03df 6B000000 		.4byte	0x6b
 1937 03e3 01       		.uleb128 0x1
 1938 03e4 50       		.byte	0x50
 1939 03e5 00       		.byte	0
 1940 03e6 0D       		.uleb128 0xd
 1941 03e7 D7040000 		.4byte	.LASF44
 1942 03eb 01       		.byte	0x1
 1943 03ec 5903     		.2byte	0x359
 1944 03ee 00000000 		.4byte	.LFB14
 1945 03f2 0C000000 		.4byte	.LFE14-.LFB14
 1946 03f6 01       		.uleb128 0x1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 63


 1947 03f7 9C       		.byte	0x9c
 1948 03f8 0B040000 		.4byte	0x40b
 1949 03fc 0E       		.uleb128 0xe
 1950 03fd D1020000 		.4byte	.LASF45
 1951 0401 01       		.byte	0x1
 1952 0402 5903     		.2byte	0x359
 1953 0404 6B000000 		.4byte	0x6b
 1954 0408 01       		.uleb128 0x1
 1955 0409 50       		.byte	0x50
 1956 040a 00       		.byte	0
 1957 040b 0D       		.uleb128 0xd
 1958 040c EC040000 		.4byte	.LASF46
 1959 0410 01       		.byte	0x1
 1960 0411 6D03     		.2byte	0x36d
 1961 0413 00000000 		.4byte	.LFB15
 1962 0417 0C000000 		.4byte	.LFE15-.LFB15
 1963 041b 01       		.uleb128 0x1
 1964 041c 9C       		.byte	0x9c
 1965 041d 30040000 		.4byte	0x430
 1966 0421 0E       		.uleb128 0xe
 1967 0422 D1020000 		.4byte	.LASF45
 1968 0426 01       		.byte	0x1
 1969 0427 6D03     		.2byte	0x36d
 1970 0429 6B000000 		.4byte	0x6b
 1971 042d 01       		.uleb128 0x1
 1972 042e 50       		.byte	0x50
 1973 042f 00       		.byte	0
 1974 0430 0D       		.uleb128 0xd
 1975 0431 D9020000 		.4byte	.LASF47
 1976 0435 01       		.byte	0x1
 1977 0436 8C03     		.2byte	0x38c
 1978 0438 00000000 		.4byte	.LFB16
 1979 043c 0C000000 		.4byte	.LFE16-.LFB16
 1980 0440 01       		.uleb128 0x1
 1981 0441 9C       		.byte	0x9c
 1982 0442 55040000 		.4byte	0x455
 1983 0446 0E       		.uleb128 0xe
 1984 0447 70020000 		.4byte	.LASF28
 1985 044b 01       		.byte	0x1
 1986 044c 8C03     		.2byte	0x38c
 1987 044e 6B000000 		.4byte	0x6b
 1988 0452 01       		.uleb128 0x1
 1989 0453 50       		.byte	0x50
 1990 0454 00       		.byte	0
 1991 0455 0D       		.uleb128 0xd
 1992 0456 58030000 		.4byte	.LASF48
 1993 045a 01       		.byte	0x1
 1994 045b AE03     		.2byte	0x3ae
 1995 045d 00000000 		.4byte	.LFB17
 1996 0461 60000000 		.4byte	.LFE17-.LFB17
 1997 0465 01       		.uleb128 0x1
 1998 0466 9C       		.byte	0x9c
 1999 0467 7A040000 		.4byte	0x47a
 2000 046b 0E       		.uleb128 0xe
 2001 046c 1D000000 		.4byte	.LASF49
 2002 0470 01       		.byte	0x1
 2003 0471 AE03     		.2byte	0x3ae
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 64


 2004 0473 6B000000 		.4byte	0x6b
 2005 0477 01       		.uleb128 0x1
 2006 0478 50       		.byte	0x50
 2007 0479 00       		.byte	0
 2008 047a 0C       		.uleb128 0xc
 2009 047b 90010000 		.4byte	.LASF51
 2010 047f 01       		.byte	0x1
 2011 0480 EB03     		.2byte	0x3eb
 2012 0482 6B000000 		.4byte	0x6b
 2013 0486 00000000 		.4byte	.LFB18
 2014 048a 0C000000 		.4byte	.LFE18-.LFB18
 2015 048e 01       		.uleb128 0x1
 2016 048f 9C       		.byte	0x9c
 2017 0490 0D       		.uleb128 0xd
 2018 0491 A3020000 		.4byte	.LASF52
 2019 0495 01       		.byte	0x1
 2020 0496 1104     		.2byte	0x411
 2021 0498 00000000 		.4byte	.LFB19
 2022 049c 70000000 		.4byte	.LFE19-.LFB19
 2023 04a0 01       		.uleb128 0x1
 2024 04a1 9C       		.byte	0x9c
 2025 04a2 D3040000 		.4byte	0x4d3
 2026 04a6 0E       		.uleb128 0xe
 2027 04a7 1D000000 		.4byte	.LASF49
 2028 04ab 01       		.byte	0x1
 2029 04ac 1104     		.2byte	0x411
 2030 04ae 6B000000 		.4byte	0x6b
 2031 04b2 01       		.uleb128 0x1
 2032 04b3 50       		.byte	0x50
 2033 04b4 11       		.uleb128 0x11
 2034 04b5 FF010000 		.4byte	.LASF53
 2035 04b9 01       		.byte	0x1
 2036 04ba 1804     		.2byte	0x418
 2037 04bc 6B000000 		.4byte	0x6b
 2038 04c0 01       		.uleb128 0x1
 2039 04c1 51       		.byte	0x51
 2040 04c2 10       		.uleb128 0x10
 2041 04c3 80010000 		.4byte	.LASF54
 2042 04c7 01       		.byte	0x1
 2043 04c8 1904     		.2byte	0x419
 2044 04ca 6B000000 		.4byte	0x6b
 2045 04ce 7D010000 		.4byte	.LLST10
 2046 04d2 00       		.byte	0
 2047 04d3 0D       		.uleb128 0xd
 2048 04d4 55000000 		.4byte	.LASF55
 2049 04d8 01       		.byte	0x1
 2050 04d9 7904     		.2byte	0x479
 2051 04db 00000000 		.4byte	.LFB20
 2052 04df 24000000 		.4byte	.LFE20-.LFB20
 2053 04e3 01       		.uleb128 0x1
 2054 04e4 9C       		.byte	0x9c
 2055 04e5 13050000 		.4byte	0x513
 2056 04e9 12       		.uleb128 0x12
 2057 04ea 42000000 		.4byte	.LASF56
 2058 04ee 01       		.byte	0x1
 2059 04ef 7904     		.2byte	0x479
 2060 04f1 13050000 		.4byte	0x513
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 65


 2061 04f5 90010000 		.4byte	.LLST11
 2062 04f9 10       		.uleb128 0x10
 2063 04fa 41020000 		.4byte	.LASF57
 2064 04fe 01       		.byte	0x1
 2065 04ff 7B04     		.2byte	0x47b
 2066 0501 77000000 		.4byte	0x77
 2067 0505 D2010000 		.4byte	.LLST12
 2068 0509 0B       		.uleb128 0xb
 2069 050a 0E000000 		.4byte	.LVL71
 2070 050e 90040000 		.4byte	0x490
 2071 0512 00       		.byte	0
 2072 0513 13       		.uleb128 0x13
 2073 0514 04       		.byte	0x4
 2074 0515 19050000 		.4byte	0x519
 2075 0519 14       		.uleb128 0x14
 2076 051a 9D000000 		.4byte	0x9d
 2077 051e 0D       		.uleb128 0xd
 2078 051f 01050000 		.4byte	.LASF58
 2079 0523 01       		.byte	0x1
 2080 0524 A704     		.2byte	0x4a7
 2081 0526 00000000 		.4byte	.LFB21
 2082 052a 28000000 		.4byte	.LFE21-.LFB21
 2083 052e 01       		.uleb128 0x1
 2084 052f 9C       		.byte	0x9c
 2085 0530 6E050000 		.4byte	0x56e
 2086 0534 12       		.uleb128 0x12
 2087 0535 42000000 		.4byte	.LASF56
 2088 0539 01       		.byte	0x1
 2089 053a A704     		.2byte	0x4a7
 2090 053c 6E050000 		.4byte	0x56e
 2091 0540 13020000 		.4byte	.LLST13
 2092 0544 12       		.uleb128 0x12
 2093 0545 10020000 		.4byte	.LASF59
 2094 0549 01       		.byte	0x1
 2095 054a A704     		.2byte	0x4a7
 2096 054c 6B000000 		.4byte	0x6b
 2097 0550 55020000 		.4byte	.LLST14
 2098 0554 10       		.uleb128 0x10
 2099 0555 41020000 		.4byte	.LASF57
 2100 0559 01       		.byte	0x1
 2101 055a AA04     		.2byte	0x4aa
 2102 055c 6B000000 		.4byte	0x6b
 2103 0560 8F020000 		.4byte	.LLST15
 2104 0564 0B       		.uleb128 0xb
 2105 0565 0E000000 		.4byte	.LVL79
 2106 0569 90040000 		.4byte	0x490
 2107 056d 00       		.byte	0
 2108 056e 13       		.uleb128 0x13
 2109 056f 04       		.byte	0x4
 2110 0570 74050000 		.4byte	0x574
 2111 0574 14       		.uleb128 0x14
 2112 0575 6B000000 		.4byte	0x6b
 2113 0579 0D       		.uleb128 0xd
 2114 057a 76030000 		.4byte	.LASF60
 2115 057e 01       		.byte	0x1
 2116 057f CE04     		.2byte	0x4ce
 2117 0581 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 66


 2118 0585 20000000 		.4byte	.LFE22-.LFB22
 2119 0589 01       		.uleb128 0x1
 2120 058a 9C       		.byte	0x9c
 2121 058b CB050000 		.4byte	0x5cb
 2122 058f 12       		.uleb128 0x12
 2123 0590 1D000000 		.4byte	.LASF49
 2124 0594 01       		.byte	0x1
 2125 0595 CE04     		.2byte	0x4ce
 2126 0597 6B000000 		.4byte	0x6b
 2127 059b D0020000 		.4byte	.LLST16
 2128 059f 0B       		.uleb128 0xb
 2129 05a0 0C000000 		.4byte	.LVL86
 2130 05a4 90040000 		.4byte	0x490
 2131 05a8 07       		.uleb128 0x7
 2132 05a9 12000000 		.4byte	.LVL87
 2133 05ad 90040000 		.4byte	0x490
 2134 05b1 BB050000 		.4byte	0x5bb
 2135 05b5 08       		.uleb128 0x8
 2136 05b6 01       		.uleb128 0x1
 2137 05b7 50       		.byte	0x50
 2138 05b8 01       		.uleb128 0x1
 2139 05b9 3D       		.byte	0x3d
 2140 05ba 00       		.byte	0
 2141 05bb 09       		.uleb128 0x9
 2142 05bc 18000000 		.4byte	.LVL88
 2143 05c0 90040000 		.4byte	0x490
 2144 05c4 08       		.uleb128 0x8
 2145 05c5 01       		.uleb128 0x1
 2146 05c6 50       		.byte	0x50
 2147 05c7 01       		.uleb128 0x1
 2148 05c8 3A       		.byte	0x3a
 2149 05c9 00       		.byte	0
 2150 05ca 00       		.byte	0
 2151 05cb 0F       		.uleb128 0xf
 2152 05cc 10010000 		.4byte	.LASF61
 2153 05d0 01       		.byte	0x1
 2154 05d1 F904     		.2byte	0x4f9
 2155 05d3 6B000000 		.4byte	0x6b
 2156 05d7 00000000 		.4byte	.LFB23
 2157 05db 48000000 		.4byte	.LFE23-.LFB23
 2158 05df 01       		.uleb128 0x1
 2159 05e0 9C       		.byte	0x9c
 2160 05e1 F6050000 		.4byte	0x5f6
 2161 05e5 10       		.uleb128 0x10
 2162 05e6 1A020000 		.4byte	.LASF40
 2163 05ea 01       		.byte	0x1
 2164 05eb FC04     		.2byte	0x4fc
 2165 05ed 6B000000 		.4byte	0x6b
 2166 05f1 F1020000 		.4byte	.LLST17
 2167 05f5 00       		.byte	0
 2168 05f6 0D       		.uleb128 0xd
 2169 05f7 32030000 		.4byte	.LASF62
 2170 05fb 01       		.byte	0x1
 2171 05fc 4A05     		.2byte	0x54a
 2172 05fe 00000000 		.4byte	.LFB24
 2173 0602 40000000 		.4byte	.LFE24-.LFB24
 2174 0606 01       		.uleb128 0x1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 67


 2175 0607 9C       		.byte	0x9c
 2176 0608 2F060000 		.4byte	0x62f
 2177 060c 10       		.uleb128 0x10
 2178 060d AF050000 		.4byte	.LASF24
 2179 0611 01       		.byte	0x1
 2180 0612 4C05     		.2byte	0x54c
 2181 0614 6B000000 		.4byte	0x6b
 2182 0618 1A030000 		.4byte	.LLST18
 2183 061c 0B       		.uleb128 0xb
 2184 061d 06000000 		.4byte	.LVL94
 2185 0621 91070000 		.4byte	0x791
 2186 0625 0B       		.uleb128 0xb
 2187 0626 1C000000 		.4byte	.LVL95
 2188 062a A7070000 		.4byte	0x7a7
 2189 062e 00       		.byte	0
 2190 062f 0D       		.uleb128 0xd
 2191 0630 F3020000 		.4byte	.LASF63
 2192 0634 01       		.byte	0x1
 2193 0635 A005     		.2byte	0x5a0
 2194 0637 00000000 		.4byte	.LFB25
 2195 063b 58000000 		.4byte	.LFE25-.LFB25
 2196 063f 01       		.uleb128 0x1
 2197 0640 9C       		.byte	0x9c
 2198 0641 82060000 		.4byte	0x682
 2199 0645 12       		.uleb128 0x12
 2200 0646 B9010000 		.4byte	.LASF64
 2201 064a 01       		.byte	0x1
 2202 064b A005     		.2byte	0x5a0
 2203 064d 6B000000 		.4byte	0x6b
 2204 0651 2D030000 		.4byte	.LLST19
 2205 0655 15       		.uleb128 0x15
 2206 0656 06000000 		.4byte	.LBB2
 2207 065a 52000000 		.4byte	.LBE2-.LBB2
 2208 065e 10       		.uleb128 0x10
 2209 065f 7D020000 		.4byte	.LASF65
 2210 0663 01       		.byte	0x1
 2211 0664 A805     		.2byte	0x5a8
 2212 0666 6B000000 		.4byte	0x6b
 2213 066a 4E030000 		.4byte	.LLST20
 2214 066e 11       		.uleb128 0x11
 2215 066f B1000000 		.4byte	.LASF66
 2216 0673 01       		.byte	0x1
 2217 0674 D005     		.2byte	0x5d0
 2218 0676 6B000000 		.4byte	0x6b
 2219 067a 05       		.uleb128 0x5
 2220 067b 03       		.byte	0x3
 2221 067c 08000000 		.4byte	txPeriod.5140
 2222 0680 00       		.byte	0
 2223 0681 00       		.byte	0
 2224 0682 0D       		.uleb128 0xd
 2225 0683 9C040000 		.4byte	.LASF67
 2226 0687 01       		.byte	0x1
 2227 0688 2406     		.2byte	0x624
 2228 068a 00000000 		.4byte	.LFB26
 2229 068e 02000000 		.4byte	.LFE26-.LFB26
 2230 0692 01       		.uleb128 0x1
 2231 0693 9C       		.byte	0x9c
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 68


 2232 0694 A7060000 		.4byte	0x6a7
 2233 0698 0E       		.uleb128 0xe
 2234 0699 65010000 		.4byte	.LASF43
 2235 069d 01       		.byte	0x1
 2236 069e 2406     		.2byte	0x624
 2237 06a0 6B000000 		.4byte	0x6b
 2238 06a4 01       		.uleb128 0x1
 2239 06a5 50       		.byte	0x50
 2240 06a6 00       		.byte	0
 2241 06a7 16       		.uleb128 0x16
 2242 06a8 BA000000 		.4byte	.LASF68
 2243 06ac 01       		.byte	0x1
 2244 06ad 1B       		.byte	0x1b
 2245 06ae 6B000000 		.4byte	0x6b
 2246 06b2 05       		.uleb128 0x5
 2247 06b3 03       		.byte	0x3
 2248 06b4 00000000 		.4byte	screen_initVar
 2249 06b8 17       		.uleb128 0x17
 2250 06b9 BC000000 		.4byte	0xbc
 2251 06bd C8060000 		.4byte	0x6c8
 2252 06c1 18       		.uleb128 0x18
 2253 06c2 D9000000 		.4byte	0xd9
 2254 06c6 07       		.byte	0x7
 2255 06c7 00       		.byte	0
 2256 06c8 16       		.uleb128 0x16
 2257 06c9 30010000 		.4byte	.LASF69
 2258 06cd 01       		.byte	0x1
 2259 06ce 1E       		.byte	0x1e
 2260 06cf D9060000 		.4byte	0x6d9
 2261 06d3 05       		.uleb128 0x5
 2262 06d4 03       		.byte	0x3
 2263 06d5 00000000 		.4byte	screen_txBuffer
 2264 06d9 05       		.uleb128 0x5
 2265 06da B8060000 		.4byte	0x6b8
 2266 06de 16       		.uleb128 0x16
 2267 06df EA050000 		.4byte	.LASF70
 2268 06e3 01       		.byte	0x1
 2269 06e4 1F       		.byte	0x1f
 2270 06e5 BC000000 		.4byte	0xbc
 2271 06e9 05       		.uleb128 0x5
 2272 06ea 03       		.byte	0x3
 2273 06eb 00000000 		.4byte	screen_txBufferRead
 2274 06ef 16       		.uleb128 0x16
 2275 06f0 A4010000 		.4byte	.LASF71
 2276 06f4 01       		.byte	0x1
 2277 06f5 20       		.byte	0x20
 2278 06f6 6B000000 		.4byte	0x6b
 2279 06fa 05       		.uleb128 0x5
 2280 06fb 03       		.byte	0x3
 2281 06fc 00000000 		.4byte	screen_txBufferWrite
 2282 0700 16       		.uleb128 0x16
 2283 0701 BE020000 		.4byte	.LASF72
 2284 0705 01       		.byte	0x1
 2285 0706 24       		.byte	0x24
 2286 0707 6B000000 		.4byte	0x6b
 2287 070b 05       		.uleb128 0x5
 2288 070c 03       		.byte	0x3
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 69


 2289 070d 00000000 		.4byte	screen_errorStatus
 2290 0711 17       		.uleb128 0x17
 2291 0712 BC000000 		.4byte	0xbc
 2292 0716 21070000 		.4byte	0x721
 2293 071a 18       		.uleb128 0x18
 2294 071b D9000000 		.4byte	0xd9
 2295 071f 13       		.byte	0x13
 2296 0720 00       		.byte	0
 2297 0721 16       		.uleb128 0x16
 2298 0722 CE010000 		.4byte	.LASF73
 2299 0726 01       		.byte	0x1
 2300 0727 25       		.byte	0x25
 2301 0728 32070000 		.4byte	0x732
 2302 072c 05       		.uleb128 0x5
 2303 072d 03       		.byte	0x3
 2304 072e 00000000 		.4byte	screen_rxBuffer
 2305 0732 05       		.uleb128 0x5
 2306 0733 11070000 		.4byte	0x711
 2307 0737 16       		.uleb128 0x16
 2308 0738 1E030000 		.4byte	.LASF74
 2309 073c 01       		.byte	0x1
 2310 073d 26       		.byte	0x26
 2311 073e BC000000 		.4byte	0xbc
 2312 0742 05       		.uleb128 0x5
 2313 0743 03       		.byte	0x3
 2314 0744 00000000 		.4byte	screen_rxBufferRead
 2315 0748 16       		.uleb128 0x16
 2316 0749 85020000 		.4byte	.LASF75
 2317 074d 01       		.byte	0x1
 2318 074e 27       		.byte	0x27
 2319 074f BC000000 		.4byte	0xbc
 2320 0753 05       		.uleb128 0x5
 2321 0754 03       		.byte	0x3
 2322 0755 00000000 		.4byte	screen_rxBufferWrite
 2323 0759 16       		.uleb128 0x16
 2324 075a 28000000 		.4byte	.LASF76
 2325 075e 01       		.byte	0x1
 2326 075f 28       		.byte	0x28
 2327 0760 BC000000 		.4byte	0xbc
 2328 0764 05       		.uleb128 0x5
 2329 0765 03       		.byte	0x3
 2330 0766 00000000 		.4byte	screen_rxBufferLoopDetect
 2331 076a 16       		.uleb128 0x16
 2332 076b 84040000 		.4byte	.LASF77
 2333 076f 01       		.byte	0x1
 2334 0770 29       		.byte	0x29
 2335 0771 BC000000 		.4byte	0xbc
 2336 0775 05       		.uleb128 0x5
 2337 0776 03       		.byte	0x3
 2338 0777 00000000 		.4byte	screen_rxBufferOverflow
 2339 077b 19       		.uleb128 0x19
 2340 077c 32020000 		.4byte	.LASF78
 2341 0780 32020000 		.4byte	.LASF78
 2342 0784 03       		.byte	0x3
 2343 0785 88       		.byte	0x88
 2344 0786 19       		.uleb128 0x19
 2345 0787 47030000 		.4byte	.LASF79
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 70


 2346 078b 47030000 		.4byte	.LASF79
 2347 078f 03       		.byte	0x3
 2348 0790 8B       		.byte	0x8b
 2349 0791 19       		.uleb128 0x19
 2350 0792 59020000 		.4byte	.LASF80
 2351 0796 59020000 		.4byte	.LASF80
 2352 079a 03       		.byte	0x3
 2353 079b 7D       		.byte	0x7d
 2354 079c 19       		.uleb128 0x19
 2355 079d 93030000 		.4byte	.LASF81
 2356 07a1 93030000 		.4byte	.LASF81
 2357 07a5 04       		.byte	0x4
 2358 07a6 27       		.byte	0x27
 2359 07a7 19       		.uleb128 0x19
 2360 07a8 07000000 		.4byte	.LASF82
 2361 07ac 07000000 		.4byte	.LASF82
 2362 07b0 03       		.byte	0x3
 2363 07b1 7E       		.byte	0x7e
 2364 07b2 19       		.uleb128 0x19
 2365 07b3 17050000 		.4byte	.LASF83
 2366 07b7 17050000 		.4byte	.LASF83
 2367 07bb 04       		.byte	0x4
 2368 07bc 28       		.byte	0x28
 2369 07bd 00       		.byte	0
 2370              		.section	.debug_abbrev,"",%progbits
 2371              	.Ldebug_abbrev0:
 2372 0000 01       		.uleb128 0x1
 2373 0001 11       		.uleb128 0x11
 2374 0002 01       		.byte	0x1
 2375 0003 25       		.uleb128 0x25
 2376 0004 0E       		.uleb128 0xe
 2377 0005 13       		.uleb128 0x13
 2378 0006 0B       		.uleb128 0xb
 2379 0007 03       		.uleb128 0x3
 2380 0008 0E       		.uleb128 0xe
 2381 0009 1B       		.uleb128 0x1b
 2382 000a 0E       		.uleb128 0xe
 2383 000b 55       		.uleb128 0x55
 2384 000c 17       		.uleb128 0x17
 2385 000d 11       		.uleb128 0x11
 2386 000e 01       		.uleb128 0x1
 2387 000f 10       		.uleb128 0x10
 2388 0010 17       		.uleb128 0x17
 2389 0011 00       		.byte	0
 2390 0012 00       		.byte	0
 2391 0013 02       		.uleb128 0x2
 2392 0014 24       		.uleb128 0x24
 2393 0015 00       		.byte	0
 2394 0016 0B       		.uleb128 0xb
 2395 0017 0B       		.uleb128 0xb
 2396 0018 3E       		.uleb128 0x3e
 2397 0019 0B       		.uleb128 0xb
 2398 001a 03       		.uleb128 0x3
 2399 001b 0E       		.uleb128 0xe
 2400 001c 00       		.byte	0
 2401 001d 00       		.byte	0
 2402 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 71


 2403 001f 24       		.uleb128 0x24
 2404 0020 00       		.byte	0
 2405 0021 0B       		.uleb128 0xb
 2406 0022 0B       		.uleb128 0xb
 2407 0023 3E       		.uleb128 0x3e
 2408 0024 0B       		.uleb128 0xb
 2409 0025 03       		.uleb128 0x3
 2410 0026 08       		.uleb128 0x8
 2411 0027 00       		.byte	0
 2412 0028 00       		.byte	0
 2413 0029 04       		.uleb128 0x4
 2414 002a 16       		.uleb128 0x16
 2415 002b 00       		.byte	0
 2416 002c 03       		.uleb128 0x3
 2417 002d 0E       		.uleb128 0xe
 2418 002e 3A       		.uleb128 0x3a
 2419 002f 0B       		.uleb128 0xb
 2420 0030 3B       		.uleb128 0x3b
 2421 0031 05       		.uleb128 0x5
 2422 0032 49       		.uleb128 0x49
 2423 0033 13       		.uleb128 0x13
 2424 0034 00       		.byte	0
 2425 0035 00       		.byte	0
 2426 0036 05       		.uleb128 0x5
 2427 0037 35       		.uleb128 0x35
 2428 0038 00       		.byte	0
 2429 0039 49       		.uleb128 0x49
 2430 003a 13       		.uleb128 0x13
 2431 003b 00       		.byte	0
 2432 003c 00       		.byte	0
 2433 003d 06       		.uleb128 0x6
 2434 003e 2E       		.uleb128 0x2e
 2435 003f 01       		.byte	0x1
 2436 0040 3F       		.uleb128 0x3f
 2437 0041 19       		.uleb128 0x19
 2438 0042 03       		.uleb128 0x3
 2439 0043 0E       		.uleb128 0xe
 2440 0044 3A       		.uleb128 0x3a
 2441 0045 0B       		.uleb128 0xb
 2442 0046 3B       		.uleb128 0x3b
 2443 0047 0B       		.uleb128 0xb
 2444 0048 27       		.uleb128 0x27
 2445 0049 19       		.uleb128 0x19
 2446 004a 11       		.uleb128 0x11
 2447 004b 01       		.uleb128 0x1
 2448 004c 12       		.uleb128 0x12
 2449 004d 06       		.uleb128 0x6
 2450 004e 40       		.uleb128 0x40
 2451 004f 18       		.uleb128 0x18
 2452 0050 9742     		.uleb128 0x2117
 2453 0052 19       		.uleb128 0x19
 2454 0053 01       		.uleb128 0x1
 2455 0054 13       		.uleb128 0x13
 2456 0055 00       		.byte	0
 2457 0056 00       		.byte	0
 2458 0057 07       		.uleb128 0x7
 2459 0058 898201   		.uleb128 0x4109
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 72


 2460 005b 01       		.byte	0x1
 2461 005c 11       		.uleb128 0x11
 2462 005d 01       		.uleb128 0x1
 2463 005e 31       		.uleb128 0x31
 2464 005f 13       		.uleb128 0x13
 2465 0060 01       		.uleb128 0x1
 2466 0061 13       		.uleb128 0x13
 2467 0062 00       		.byte	0
 2468 0063 00       		.byte	0
 2469 0064 08       		.uleb128 0x8
 2470 0065 8A8201   		.uleb128 0x410a
 2471 0068 00       		.byte	0
 2472 0069 02       		.uleb128 0x2
 2473 006a 18       		.uleb128 0x18
 2474 006b 9142     		.uleb128 0x2111
 2475 006d 18       		.uleb128 0x18
 2476 006e 00       		.byte	0
 2477 006f 00       		.byte	0
 2478 0070 09       		.uleb128 0x9
 2479 0071 898201   		.uleb128 0x4109
 2480 0074 01       		.byte	0x1
 2481 0075 11       		.uleb128 0x11
 2482 0076 01       		.uleb128 0x1
 2483 0077 31       		.uleb128 0x31
 2484 0078 13       		.uleb128 0x13
 2485 0079 00       		.byte	0
 2486 007a 00       		.byte	0
 2487 007b 0A       		.uleb128 0xa
 2488 007c 34       		.uleb128 0x34
 2489 007d 00       		.byte	0
 2490 007e 03       		.uleb128 0x3
 2491 007f 0E       		.uleb128 0xe
 2492 0080 3A       		.uleb128 0x3a
 2493 0081 0B       		.uleb128 0xb
 2494 0082 3B       		.uleb128 0x3b
 2495 0083 0B       		.uleb128 0xb
 2496 0084 49       		.uleb128 0x49
 2497 0085 13       		.uleb128 0x13
 2498 0086 02       		.uleb128 0x2
 2499 0087 17       		.uleb128 0x17
 2500 0088 00       		.byte	0
 2501 0089 00       		.byte	0
 2502 008a 0B       		.uleb128 0xb
 2503 008b 898201   		.uleb128 0x4109
 2504 008e 00       		.byte	0
 2505 008f 11       		.uleb128 0x11
 2506 0090 01       		.uleb128 0x1
 2507 0091 31       		.uleb128 0x31
 2508 0092 13       		.uleb128 0x13
 2509 0093 00       		.byte	0
 2510 0094 00       		.byte	0
 2511 0095 0C       		.uleb128 0xc
 2512 0096 2E       		.uleb128 0x2e
 2513 0097 00       		.byte	0
 2514 0098 3F       		.uleb128 0x3f
 2515 0099 19       		.uleb128 0x19
 2516 009a 03       		.uleb128 0x3
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 73


 2517 009b 0E       		.uleb128 0xe
 2518 009c 3A       		.uleb128 0x3a
 2519 009d 0B       		.uleb128 0xb
 2520 009e 3B       		.uleb128 0x3b
 2521 009f 05       		.uleb128 0x5
 2522 00a0 27       		.uleb128 0x27
 2523 00a1 19       		.uleb128 0x19
 2524 00a2 49       		.uleb128 0x49
 2525 00a3 13       		.uleb128 0x13
 2526 00a4 11       		.uleb128 0x11
 2527 00a5 01       		.uleb128 0x1
 2528 00a6 12       		.uleb128 0x12
 2529 00a7 06       		.uleb128 0x6
 2530 00a8 40       		.uleb128 0x40
 2531 00a9 18       		.uleb128 0x18
 2532 00aa 9742     		.uleb128 0x2117
 2533 00ac 19       		.uleb128 0x19
 2534 00ad 00       		.byte	0
 2535 00ae 00       		.byte	0
 2536 00af 0D       		.uleb128 0xd
 2537 00b0 2E       		.uleb128 0x2e
 2538 00b1 01       		.byte	0x1
 2539 00b2 3F       		.uleb128 0x3f
 2540 00b3 19       		.uleb128 0x19
 2541 00b4 03       		.uleb128 0x3
 2542 00b5 0E       		.uleb128 0xe
 2543 00b6 3A       		.uleb128 0x3a
 2544 00b7 0B       		.uleb128 0xb
 2545 00b8 3B       		.uleb128 0x3b
 2546 00b9 05       		.uleb128 0x5
 2547 00ba 27       		.uleb128 0x27
 2548 00bb 19       		.uleb128 0x19
 2549 00bc 11       		.uleb128 0x11
 2550 00bd 01       		.uleb128 0x1
 2551 00be 12       		.uleb128 0x12
 2552 00bf 06       		.uleb128 0x6
 2553 00c0 40       		.uleb128 0x40
 2554 00c1 18       		.uleb128 0x18
 2555 00c2 9742     		.uleb128 0x2117
 2556 00c4 19       		.uleb128 0x19
 2557 00c5 01       		.uleb128 0x1
 2558 00c6 13       		.uleb128 0x13
 2559 00c7 00       		.byte	0
 2560 00c8 00       		.byte	0
 2561 00c9 0E       		.uleb128 0xe
 2562 00ca 05       		.uleb128 0x5
 2563 00cb 00       		.byte	0
 2564 00cc 03       		.uleb128 0x3
 2565 00cd 0E       		.uleb128 0xe
 2566 00ce 3A       		.uleb128 0x3a
 2567 00cf 0B       		.uleb128 0xb
 2568 00d0 3B       		.uleb128 0x3b
 2569 00d1 05       		.uleb128 0x5
 2570 00d2 49       		.uleb128 0x49
 2571 00d3 13       		.uleb128 0x13
 2572 00d4 02       		.uleb128 0x2
 2573 00d5 18       		.uleb128 0x18
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 74


 2574 00d6 00       		.byte	0
 2575 00d7 00       		.byte	0
 2576 00d8 0F       		.uleb128 0xf
 2577 00d9 2E       		.uleb128 0x2e
 2578 00da 01       		.byte	0x1
 2579 00db 3F       		.uleb128 0x3f
 2580 00dc 19       		.uleb128 0x19
 2581 00dd 03       		.uleb128 0x3
 2582 00de 0E       		.uleb128 0xe
 2583 00df 3A       		.uleb128 0x3a
 2584 00e0 0B       		.uleb128 0xb
 2585 00e1 3B       		.uleb128 0x3b
 2586 00e2 05       		.uleb128 0x5
 2587 00e3 27       		.uleb128 0x27
 2588 00e4 19       		.uleb128 0x19
 2589 00e5 49       		.uleb128 0x49
 2590 00e6 13       		.uleb128 0x13
 2591 00e7 11       		.uleb128 0x11
 2592 00e8 01       		.uleb128 0x1
 2593 00e9 12       		.uleb128 0x12
 2594 00ea 06       		.uleb128 0x6
 2595 00eb 40       		.uleb128 0x40
 2596 00ec 18       		.uleb128 0x18
 2597 00ed 9742     		.uleb128 0x2117
 2598 00ef 19       		.uleb128 0x19
 2599 00f0 01       		.uleb128 0x1
 2600 00f1 13       		.uleb128 0x13
 2601 00f2 00       		.byte	0
 2602 00f3 00       		.byte	0
 2603 00f4 10       		.uleb128 0x10
 2604 00f5 34       		.uleb128 0x34
 2605 00f6 00       		.byte	0
 2606 00f7 03       		.uleb128 0x3
 2607 00f8 0E       		.uleb128 0xe
 2608 00f9 3A       		.uleb128 0x3a
 2609 00fa 0B       		.uleb128 0xb
 2610 00fb 3B       		.uleb128 0x3b
 2611 00fc 05       		.uleb128 0x5
 2612 00fd 49       		.uleb128 0x49
 2613 00fe 13       		.uleb128 0x13
 2614 00ff 02       		.uleb128 0x2
 2615 0100 17       		.uleb128 0x17
 2616 0101 00       		.byte	0
 2617 0102 00       		.byte	0
 2618 0103 11       		.uleb128 0x11
 2619 0104 34       		.uleb128 0x34
 2620 0105 00       		.byte	0
 2621 0106 03       		.uleb128 0x3
 2622 0107 0E       		.uleb128 0xe
 2623 0108 3A       		.uleb128 0x3a
 2624 0109 0B       		.uleb128 0xb
 2625 010a 3B       		.uleb128 0x3b
 2626 010b 05       		.uleb128 0x5
 2627 010c 49       		.uleb128 0x49
 2628 010d 13       		.uleb128 0x13
 2629 010e 02       		.uleb128 0x2
 2630 010f 18       		.uleb128 0x18
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 75


 2631 0110 00       		.byte	0
 2632 0111 00       		.byte	0
 2633 0112 12       		.uleb128 0x12
 2634 0113 05       		.uleb128 0x5
 2635 0114 00       		.byte	0
 2636 0115 03       		.uleb128 0x3
 2637 0116 0E       		.uleb128 0xe
 2638 0117 3A       		.uleb128 0x3a
 2639 0118 0B       		.uleb128 0xb
 2640 0119 3B       		.uleb128 0x3b
 2641 011a 05       		.uleb128 0x5
 2642 011b 49       		.uleb128 0x49
 2643 011c 13       		.uleb128 0x13
 2644 011d 02       		.uleb128 0x2
 2645 011e 17       		.uleb128 0x17
 2646 011f 00       		.byte	0
 2647 0120 00       		.byte	0
 2648 0121 13       		.uleb128 0x13
 2649 0122 0F       		.uleb128 0xf
 2650 0123 00       		.byte	0
 2651 0124 0B       		.uleb128 0xb
 2652 0125 0B       		.uleb128 0xb
 2653 0126 49       		.uleb128 0x49
 2654 0127 13       		.uleb128 0x13
 2655 0128 00       		.byte	0
 2656 0129 00       		.byte	0
 2657 012a 14       		.uleb128 0x14
 2658 012b 26       		.uleb128 0x26
 2659 012c 00       		.byte	0
 2660 012d 49       		.uleb128 0x49
 2661 012e 13       		.uleb128 0x13
 2662 012f 00       		.byte	0
 2663 0130 00       		.byte	0
 2664 0131 15       		.uleb128 0x15
 2665 0132 0B       		.uleb128 0xb
 2666 0133 01       		.byte	0x1
 2667 0134 11       		.uleb128 0x11
 2668 0135 01       		.uleb128 0x1
 2669 0136 12       		.uleb128 0x12
 2670 0137 06       		.uleb128 0x6
 2671 0138 00       		.byte	0
 2672 0139 00       		.byte	0
 2673 013a 16       		.uleb128 0x16
 2674 013b 34       		.uleb128 0x34
 2675 013c 00       		.byte	0
 2676 013d 03       		.uleb128 0x3
 2677 013e 0E       		.uleb128 0xe
 2678 013f 3A       		.uleb128 0x3a
 2679 0140 0B       		.uleb128 0xb
 2680 0141 3B       		.uleb128 0x3b
 2681 0142 0B       		.uleb128 0xb
 2682 0143 49       		.uleb128 0x49
 2683 0144 13       		.uleb128 0x13
 2684 0145 3F       		.uleb128 0x3f
 2685 0146 19       		.uleb128 0x19
 2686 0147 02       		.uleb128 0x2
 2687 0148 18       		.uleb128 0x18
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 76


 2688 0149 00       		.byte	0
 2689 014a 00       		.byte	0
 2690 014b 17       		.uleb128 0x17
 2691 014c 01       		.uleb128 0x1
 2692 014d 01       		.byte	0x1
 2693 014e 49       		.uleb128 0x49
 2694 014f 13       		.uleb128 0x13
 2695 0150 01       		.uleb128 0x1
 2696 0151 13       		.uleb128 0x13
 2697 0152 00       		.byte	0
 2698 0153 00       		.byte	0
 2699 0154 18       		.uleb128 0x18
 2700 0155 21       		.uleb128 0x21
 2701 0156 00       		.byte	0
 2702 0157 49       		.uleb128 0x49
 2703 0158 13       		.uleb128 0x13
 2704 0159 2F       		.uleb128 0x2f
 2705 015a 0B       		.uleb128 0xb
 2706 015b 00       		.byte	0
 2707 015c 00       		.byte	0
 2708 015d 19       		.uleb128 0x19
 2709 015e 2E       		.uleb128 0x2e
 2710 015f 00       		.byte	0
 2711 0160 3F       		.uleb128 0x3f
 2712 0161 19       		.uleb128 0x19
 2713 0162 3C       		.uleb128 0x3c
 2714 0163 19       		.uleb128 0x19
 2715 0164 6E       		.uleb128 0x6e
 2716 0165 0E       		.uleb128 0xe
 2717 0166 03       		.uleb128 0x3
 2718 0167 0E       		.uleb128 0xe
 2719 0168 3A       		.uleb128 0x3a
 2720 0169 0B       		.uleb128 0xb
 2721 016a 3B       		.uleb128 0x3b
 2722 016b 0B       		.uleb128 0xb
 2723 016c 00       		.byte	0
 2724 016d 00       		.byte	0
 2725 016e 00       		.byte	0
 2726              		.section	.debug_loc,"",%progbits
 2727              	.Ldebug_loc0:
 2728              	.LLST0:
 2729 0000 08000000 		.4byte	.LVL5
 2730 0004 42000000 		.4byte	.LVL8
 2731 0008 0100     		.2byte	0x1
 2732 000a 54       		.byte	0x54
 2733 000b 00000000 		.4byte	0
 2734 000f 00000000 		.4byte	0
 2735              	.LLST1:
 2736 0013 08000000 		.4byte	.LVL12
 2737 0017 3C000000 		.4byte	.LVL15
 2738 001b 0100     		.2byte	0x1
 2739 001d 54       		.byte	0x54
 2740 001e 00000000 		.4byte	0
 2741 0022 00000000 		.4byte	0
 2742              	.LLST2:
 2743 0026 22000000 		.4byte	.LVL20
 2744 002a 40000000 		.4byte	.LVL26
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 77


 2745 002e 0100     		.2byte	0x1
 2746 0030 50       		.byte	0x50
 2747 0031 46000000 		.4byte	.LVL28
 2748 0035 64000000 		.4byte	.LFE7
 2749 0039 0100     		.2byte	0x1
 2750 003b 50       		.byte	0x50
 2751 003c 00000000 		.4byte	0
 2752 0040 00000000 		.4byte	0
 2753              	.LLST3:
 2754 0044 0C000000 		.4byte	.LVL18
 2755 0048 24000000 		.4byte	.LVL21
 2756 004c 0100     		.2byte	0x1
 2757 004e 53       		.byte	0x53
 2758 004f 24000000 		.4byte	.LVL21
 2759 0053 26000000 		.4byte	.LVL22
 2760 0057 0300     		.2byte	0x3
 2761 0059 73       		.byte	0x73
 2762 005a 7F       		.sleb128 -1
 2763 005b 9F       		.byte	0x9f
 2764 005c 26000000 		.4byte	.LVL22
 2765 0060 32000000 		.4byte	.LVL24
 2766 0064 0100     		.2byte	0x1
 2767 0066 53       		.byte	0x53
 2768 0067 32000000 		.4byte	.LVL24
 2769 006b 3E000000 		.4byte	.LVL25
 2770 006f 0500     		.2byte	0x5
 2771 0071 03       		.byte	0x3
 2772 0072 00000000 		.4byte	screen_rxBufferRead
 2773 0076 40000000 		.4byte	.LVL26
 2774 007a 42000000 		.4byte	.LVL27
 2775 007e 0100     		.2byte	0x1
 2776 0080 53       		.byte	0x53
 2777 0081 00000000 		.4byte	0
 2778 0085 00000000 		.4byte	0
 2779              	.LLST4:
 2780 0089 00000000 		.4byte	.LVL31
 2781 008d 22000000 		.4byte	.LVL34
 2782 0091 0200     		.2byte	0x2
 2783 0093 30       		.byte	0x30
 2784 0094 9F       		.byte	0x9f
 2785 0095 22000000 		.4byte	.LVL34
 2786 0099 40000000 		.4byte	.LVL40
 2787 009d 0100     		.2byte	0x1
 2788 009f 50       		.byte	0x50
 2789 00a0 40000000 		.4byte	.LVL40
 2790 00a4 52000000 		.4byte	.LVL43
 2791 00a8 0200     		.2byte	0x2
 2792 00aa 30       		.byte	0x30
 2793 00ab 9F       		.byte	0x9f
 2794 00ac 52000000 		.4byte	.LVL43
 2795 00b0 5A000000 		.4byte	.LVL44
 2796 00b4 0100     		.2byte	0x1
 2797 00b6 50       		.byte	0x50
 2798 00b7 5A000000 		.4byte	.LVL44
 2799 00bb 5E000000 		.4byte	.LVL45
 2800 00bf 0200     		.2byte	0x2
 2801 00c1 30       		.byte	0x30
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 78


 2802 00c2 9F       		.byte	0x9f
 2803 00c3 5E000000 		.4byte	.LVL45
 2804 00c7 80000000 		.4byte	.LFE9
 2805 00cb 0100     		.2byte	0x1
 2806 00cd 50       		.byte	0x50
 2807 00ce 00000000 		.4byte	0
 2808 00d2 00000000 		.4byte	0
 2809              	.LLST5:
 2810 00d6 46000000 		.4byte	.LVL42
 2811 00da 60000000 		.4byte	.LVL46
 2812 00de 0100     		.2byte	0x1
 2813 00e0 53       		.byte	0x53
 2814 00e1 00000000 		.4byte	0
 2815 00e5 00000000 		.4byte	0
 2816              	.LLST6:
 2817 00e9 0C000000 		.4byte	.LVL32
 2818 00ed 24000000 		.4byte	.LVL35
 2819 00f1 0100     		.2byte	0x1
 2820 00f3 53       		.byte	0x53
 2821 00f4 24000000 		.4byte	.LVL35
 2822 00f8 26000000 		.4byte	.LVL36
 2823 00fc 0300     		.2byte	0x3
 2824 00fe 73       		.byte	0x73
 2825 00ff 7F       		.sleb128 -1
 2826 0100 9F       		.byte	0x9f
 2827 0101 26000000 		.4byte	.LVL36
 2828 0105 32000000 		.4byte	.LVL38
 2829 0109 0100     		.2byte	0x1
 2830 010b 53       		.byte	0x53
 2831 010c 32000000 		.4byte	.LVL38
 2832 0110 3E000000 		.4byte	.LVL39
 2833 0114 0500     		.2byte	0x5
 2834 0116 03       		.byte	0x3
 2835 0117 00000000 		.4byte	screen_rxBufferRead
 2836 011b 40000000 		.4byte	.LVL40
 2837 011f 42000000 		.4byte	.LVL41
 2838 0123 0100     		.2byte	0x1
 2839 0125 53       		.byte	0x53
 2840 0126 00000000 		.4byte	0
 2841 012a 00000000 		.4byte	0
 2842              	.LLST7:
 2843 012e 0C000000 		.4byte	.LVL47
 2844 0132 16000000 		.4byte	.LVL48
 2845 0136 0100     		.2byte	0x1
 2846 0138 54       		.byte	0x54
 2847 0139 00000000 		.4byte	0
 2848 013d 00000000 		.4byte	0
 2849              	.LLST8:
 2850 0141 3A000000 		.4byte	.LVL50
 2851 0145 3C000000 		.4byte	.LVL51
 2852 0149 0100     		.2byte	0x1
 2853 014b 50       		.byte	0x50
 2854 014c 48000000 		.4byte	.LVL52
 2855 0150 4A000000 		.4byte	.LVL53
 2856 0154 0100     		.2byte	0x1
 2857 0156 50       		.byte	0x50
 2858 0157 4C000000 		.4byte	.LVL54
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 79


 2859 015b 60000000 		.4byte	.LFE11
 2860 015f 0100     		.2byte	0x1
 2861 0161 50       		.byte	0x50
 2862 0162 00000000 		.4byte	0
 2863 0166 00000000 		.4byte	0
 2864              	.LLST9:
 2865 016a 06000000 		.4byte	.LVL55
 2866 016e 1B000000 		.4byte	.LVL56-1
 2867 0172 0100     		.2byte	0x1
 2868 0174 50       		.byte	0x50
 2869 0175 00000000 		.4byte	0
 2870 0179 00000000 		.4byte	0
 2871              	.LLST10:
 2872 017d 08000000 		.4byte	.LVL64
 2873 0181 2C000000 		.4byte	.LVL65
 2874 0185 0100     		.2byte	0x1
 2875 0187 53       		.byte	0x53
 2876 0188 00000000 		.4byte	0
 2877 018c 00000000 		.4byte	0
 2878              	.LLST11:
 2879 0190 00000000 		.4byte	.LVL68
 2880 0194 0A000000 		.4byte	.LVL70
 2881 0198 0100     		.2byte	0x1
 2882 019a 50       		.byte	0x50
 2883 019b 0A000000 		.4byte	.LVL70
 2884 019f 14000000 		.4byte	.LVL74
 2885 01a3 0100     		.2byte	0x1
 2886 01a5 55       		.byte	0x55
 2887 01a6 14000000 		.4byte	.LVL74
 2888 01aa 18000000 		.4byte	.LVL75
 2889 01ae 0100     		.2byte	0x1
 2890 01b0 50       		.byte	0x50
 2891 01b1 18000000 		.4byte	.LVL75
 2892 01b5 20000000 		.4byte	.LVL76
 2893 01b9 0100     		.2byte	0x1
 2894 01bb 55       		.byte	0x55
 2895 01bc 20000000 		.4byte	.LVL76
 2896 01c0 24000000 		.4byte	.LFE20
 2897 01c4 0400     		.2byte	0x4
 2898 01c6 F3       		.byte	0xf3
 2899 01c7 01       		.uleb128 0x1
 2900 01c8 50       		.byte	0x50
 2901 01c9 9F       		.byte	0x9f
 2902 01ca 00000000 		.4byte	0
 2903 01ce 00000000 		.4byte	0
 2904              	.LLST12:
 2905 01d2 02000000 		.4byte	.LVL69
 2906 01d6 0A000000 		.4byte	.LVL70
 2907 01da 0200     		.2byte	0x2
 2908 01dc 30       		.byte	0x30
 2909 01dd 9F       		.byte	0x9f
 2910 01de 0A000000 		.4byte	.LVL70
 2911 01e2 10000000 		.4byte	.LVL72
 2912 01e6 0100     		.2byte	0x1
 2913 01e8 54       		.byte	0x54
 2914 01e9 12000000 		.4byte	.LVL73
 2915 01ed 14000000 		.4byte	.LVL74
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 80


 2916 01f1 0100     		.2byte	0x1
 2917 01f3 54       		.byte	0x54
 2918 01f4 14000000 		.4byte	.LVL74
 2919 01f8 18000000 		.4byte	.LVL75
 2920 01fc 0200     		.2byte	0x2
 2921 01fe 30       		.byte	0x30
 2922 01ff 9F       		.byte	0x9f
 2923 0200 18000000 		.4byte	.LVL75
 2924 0204 20000000 		.4byte	.LVL76
 2925 0208 0100     		.2byte	0x1
 2926 020a 54       		.byte	0x54
 2927 020b 00000000 		.4byte	0
 2928 020f 00000000 		.4byte	0
 2929              	.LLST13:
 2930 0213 00000000 		.4byte	.LVL77
 2931 0217 08000000 		.4byte	.LVL78
 2932 021b 0100     		.2byte	0x1
 2933 021d 50       		.byte	0x50
 2934 021e 08000000 		.4byte	.LVL78
 2935 0222 14000000 		.4byte	.LVL82
 2936 0226 0100     		.2byte	0x1
 2937 0228 56       		.byte	0x56
 2938 0229 14000000 		.4byte	.LVL82
 2939 022d 1C000000 		.4byte	.LVL83
 2940 0231 0100     		.2byte	0x1
 2941 0233 50       		.byte	0x50
 2942 0234 1C000000 		.4byte	.LVL83
 2943 0238 22000000 		.4byte	.LVL84
 2944 023c 0100     		.2byte	0x1
 2945 023e 56       		.byte	0x56
 2946 023f 22000000 		.4byte	.LVL84
 2947 0243 28000000 		.4byte	.LFE21
 2948 0247 0400     		.2byte	0x4
 2949 0249 F3       		.byte	0xf3
 2950 024a 01       		.uleb128 0x1
 2951 024b 50       		.byte	0x50
 2952 024c 9F       		.byte	0x9f
 2953 024d 00000000 		.4byte	0
 2954 0251 00000000 		.4byte	0
 2955              	.LLST14:
 2956 0255 00000000 		.4byte	.LVL77
 2957 0259 08000000 		.4byte	.LVL78
 2958 025d 0100     		.2byte	0x1
 2959 025f 51       		.byte	0x51
 2960 0260 08000000 		.4byte	.LVL78
 2961 0264 14000000 		.4byte	.LVL82
 2962 0268 0400     		.2byte	0x4
 2963 026a F3       		.byte	0xf3
 2964 026b 01       		.uleb128 0x1
 2965 026c 51       		.byte	0x51
 2966 026d 9F       		.byte	0x9f
 2967 026e 14000000 		.4byte	.LVL82
 2968 0272 1C000000 		.4byte	.LVL83
 2969 0276 0100     		.2byte	0x1
 2970 0278 51       		.byte	0x51
 2971 0279 1C000000 		.4byte	.LVL83
 2972 027d 28000000 		.4byte	.LFE21
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 81


 2973 0281 0400     		.2byte	0x4
 2974 0283 F3       		.byte	0xf3
 2975 0284 01       		.uleb128 0x1
 2976 0285 51       		.byte	0x51
 2977 0286 9F       		.byte	0x9f
 2978 0287 00000000 		.4byte	0
 2979 028b 00000000 		.4byte	0
 2980              	.LLST15:
 2981 028f 00000000 		.4byte	.LVL77
 2982 0293 08000000 		.4byte	.LVL78
 2983 0297 0200     		.2byte	0x2
 2984 0299 30       		.byte	0x30
 2985 029a 9F       		.byte	0x9f
 2986 029b 08000000 		.4byte	.LVL78
 2987 029f 10000000 		.4byte	.LVL80
 2988 02a3 0100     		.2byte	0x1
 2989 02a5 54       		.byte	0x54
 2990 02a6 12000000 		.4byte	.LVL81
 2991 02aa 14000000 		.4byte	.LVL82
 2992 02ae 0100     		.2byte	0x1
 2993 02b0 54       		.byte	0x54
 2994 02b1 14000000 		.4byte	.LVL82
 2995 02b5 1C000000 		.4byte	.LVL83
 2996 02b9 0200     		.2byte	0x2
 2997 02bb 30       		.byte	0x30
 2998 02bc 9F       		.byte	0x9f
 2999 02bd 1C000000 		.4byte	.LVL83
 3000 02c1 22000000 		.4byte	.LVL84
 3001 02c5 0100     		.2byte	0x1
 3002 02c7 54       		.byte	0x54
 3003 02c8 00000000 		.4byte	0
 3004 02cc 00000000 		.4byte	0
 3005              	.LLST16:
 3006 02d0 00000000 		.4byte	.LVL85
 3007 02d4 0B000000 		.4byte	.LVL86-1
 3008 02d8 0100     		.2byte	0x1
 3009 02da 50       		.byte	0x50
 3010 02db 0B000000 		.4byte	.LVL86-1
 3011 02df 20000000 		.4byte	.LFE22
 3012 02e3 0400     		.2byte	0x4
 3013 02e5 F3       		.byte	0xf3
 3014 02e6 01       		.uleb128 0x1
 3015 02e7 50       		.byte	0x50
 3016 02e8 9F       		.byte	0x9f
 3017 02e9 00000000 		.4byte	0
 3018 02ed 00000000 		.4byte	0
 3019              	.LLST17:
 3020 02f1 24000000 		.4byte	.LVL89
 3021 02f5 26000000 		.4byte	.LVL90
 3022 02f9 0100     		.2byte	0x1
 3023 02fb 50       		.byte	0x50
 3024 02fc 30000000 		.4byte	.LVL91
 3025 0300 32000000 		.4byte	.LVL92
 3026 0304 0100     		.2byte	0x1
 3027 0306 50       		.byte	0x50
 3028 0307 34000000 		.4byte	.LVL93
 3029 030b 48000000 		.4byte	.LFE23
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 82


 3030 030f 0100     		.2byte	0x1
 3031 0311 50       		.byte	0x50
 3032 0312 00000000 		.4byte	0
 3033 0316 00000000 		.4byte	0
 3034              	.LLST18:
 3035 031a 06000000 		.4byte	.LVL94
 3036 031e 1B000000 		.4byte	.LVL95-1
 3037 0322 0100     		.2byte	0x1
 3038 0324 50       		.byte	0x50
 3039 0325 00000000 		.4byte	0
 3040 0329 00000000 		.4byte	0
 3041              	.LLST19:
 3042 032d 00000000 		.4byte	.LVL96
 3043 0331 3C000000 		.4byte	.LVL101
 3044 0335 0100     		.2byte	0x1
 3045 0337 50       		.byte	0x50
 3046 0338 3C000000 		.4byte	.LVL101
 3047 033c 58000000 		.4byte	.LFE25
 3048 0340 0400     		.2byte	0x4
 3049 0342 F3       		.byte	0xf3
 3050 0343 01       		.uleb128 0x1
 3051 0344 50       		.byte	0x50
 3052 0345 9F       		.byte	0x9f
 3053 0346 00000000 		.4byte	0
 3054 034a 00000000 		.4byte	0
 3055              	.LLST20:
 3056 034e 22000000 		.4byte	.LVL97
 3057 0352 28000000 		.4byte	.LVL98
 3058 0356 0100     		.2byte	0x1
 3059 0358 53       		.byte	0x53
 3060 0359 34000000 		.4byte	.LVL99
 3061 035d 3A000000 		.4byte	.LVL100
 3062 0361 0100     		.2byte	0x1
 3063 0363 53       		.byte	0x53
 3064 0364 00000000 		.4byte	0
 3065 0368 00000000 		.4byte	0
 3066              		.section	.debug_aranges,"",%progbits
 3067 0000 EC000000 		.4byte	0xec
 3068 0004 0200     		.2byte	0x2
 3069 0006 00000000 		.4byte	.Ldebug_info0
 3070 000a 04       		.byte	0x4
 3071 000b 00       		.byte	0
 3072 000c 0000     		.2byte	0
 3073 000e 0000     		.2byte	0
 3074 0010 00000000 		.4byte	.LFB1
 3075 0014 60000000 		.4byte	.LFE1-.LFB1
 3076 0018 00000000 		.4byte	.LFB2
 3077 001c 54000000 		.4byte	.LFE2-.LFB2
 3078 0020 00000000 		.4byte	.LFB0
 3079 0024 1C000000 		.4byte	.LFE0-.LFB0
 3080 0028 00000000 		.4byte	.LFB3
 3081 002c 4C000000 		.4byte	.LFE3-.LFB3
 3082 0030 00000000 		.4byte	.LFB4
 3083 0034 04000000 		.4byte	.LFE4-.LFB4
 3084 0038 00000000 		.4byte	.LFB5
 3085 003c 02000000 		.4byte	.LFE5-.LFB5
 3086 0040 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 83


 3087 0044 0C000000 		.4byte	.LFE6-.LFB6
 3088 0048 00000000 		.4byte	.LFB7
 3089 004c 64000000 		.4byte	.LFE7-.LFB7
 3090 0050 00000000 		.4byte	.LFB8
 3091 0054 28000000 		.4byte	.LFE8-.LFB8
 3092 0058 00000000 		.4byte	.LFB9
 3093 005c 80000000 		.4byte	.LFE9-.LFB9
 3094 0060 00000000 		.4byte	.LFB10
 3095 0064 2C000000 		.4byte	.LFE10-.LFB10
 3096 0068 00000000 		.4byte	.LFB11
 3097 006c 60000000 		.4byte	.LFE11-.LFB11
 3098 0070 00000000 		.4byte	.LFB12
 3099 0074 44000000 		.4byte	.LFE12-.LFB12
 3100 0078 00000000 		.4byte	.LFB13
 3101 007c 02000000 		.4byte	.LFE13-.LFB13
 3102 0080 00000000 		.4byte	.LFB14
 3103 0084 0C000000 		.4byte	.LFE14-.LFB14
 3104 0088 00000000 		.4byte	.LFB15
 3105 008c 0C000000 		.4byte	.LFE15-.LFB15
 3106 0090 00000000 		.4byte	.LFB16
 3107 0094 0C000000 		.4byte	.LFE16-.LFB16
 3108 0098 00000000 		.4byte	.LFB17
 3109 009c 60000000 		.4byte	.LFE17-.LFB17
 3110 00a0 00000000 		.4byte	.LFB18
 3111 00a4 0C000000 		.4byte	.LFE18-.LFB18
 3112 00a8 00000000 		.4byte	.LFB19
 3113 00ac 70000000 		.4byte	.LFE19-.LFB19
 3114 00b0 00000000 		.4byte	.LFB20
 3115 00b4 24000000 		.4byte	.LFE20-.LFB20
 3116 00b8 00000000 		.4byte	.LFB21
 3117 00bc 28000000 		.4byte	.LFE21-.LFB21
 3118 00c0 00000000 		.4byte	.LFB22
 3119 00c4 20000000 		.4byte	.LFE22-.LFB22
 3120 00c8 00000000 		.4byte	.LFB23
 3121 00cc 48000000 		.4byte	.LFE23-.LFB23
 3122 00d0 00000000 		.4byte	.LFB24
 3123 00d4 40000000 		.4byte	.LFE24-.LFB24
 3124 00d8 00000000 		.4byte	.LFB25
 3125 00dc 58000000 		.4byte	.LFE25-.LFB25
 3126 00e0 00000000 		.4byte	.LFB26
 3127 00e4 02000000 		.4byte	.LFE26-.LFB26
 3128 00e8 00000000 		.4byte	0
 3129 00ec 00000000 		.4byte	0
 3130              		.section	.debug_ranges,"",%progbits
 3131              	.Ldebug_ranges0:
 3132 0000 00000000 		.4byte	.LFB1
 3133 0004 60000000 		.4byte	.LFE1
 3134 0008 00000000 		.4byte	.LFB2
 3135 000c 54000000 		.4byte	.LFE2
 3136 0010 00000000 		.4byte	.LFB0
 3137 0014 1C000000 		.4byte	.LFE0
 3138 0018 00000000 		.4byte	.LFB3
 3139 001c 4C000000 		.4byte	.LFE3
 3140 0020 00000000 		.4byte	.LFB4
 3141 0024 04000000 		.4byte	.LFE4
 3142 0028 00000000 		.4byte	.LFB5
 3143 002c 02000000 		.4byte	.LFE5
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 84


 3144 0030 00000000 		.4byte	.LFB6
 3145 0034 0C000000 		.4byte	.LFE6
 3146 0038 00000000 		.4byte	.LFB7
 3147 003c 64000000 		.4byte	.LFE7
 3148 0040 00000000 		.4byte	.LFB8
 3149 0044 28000000 		.4byte	.LFE8
 3150 0048 00000000 		.4byte	.LFB9
 3151 004c 80000000 		.4byte	.LFE9
 3152 0050 00000000 		.4byte	.LFB10
 3153 0054 2C000000 		.4byte	.LFE10
 3154 0058 00000000 		.4byte	.LFB11
 3155 005c 60000000 		.4byte	.LFE11
 3156 0060 00000000 		.4byte	.LFB12
 3157 0064 44000000 		.4byte	.LFE12
 3158 0068 00000000 		.4byte	.LFB13
 3159 006c 02000000 		.4byte	.LFE13
 3160 0070 00000000 		.4byte	.LFB14
 3161 0074 0C000000 		.4byte	.LFE14
 3162 0078 00000000 		.4byte	.LFB15
 3163 007c 0C000000 		.4byte	.LFE15
 3164 0080 00000000 		.4byte	.LFB16
 3165 0084 0C000000 		.4byte	.LFE16
 3166 0088 00000000 		.4byte	.LFB17
 3167 008c 60000000 		.4byte	.LFE17
 3168 0090 00000000 		.4byte	.LFB18
 3169 0094 0C000000 		.4byte	.LFE18
 3170 0098 00000000 		.4byte	.LFB19
 3171 009c 70000000 		.4byte	.LFE19
 3172 00a0 00000000 		.4byte	.LFB20
 3173 00a4 24000000 		.4byte	.LFE20
 3174 00a8 00000000 		.4byte	.LFB21
 3175 00ac 28000000 		.4byte	.LFE21
 3176 00b0 00000000 		.4byte	.LFB22
 3177 00b4 20000000 		.4byte	.LFE22
 3178 00b8 00000000 		.4byte	.LFB23
 3179 00bc 48000000 		.4byte	.LFE23
 3180 00c0 00000000 		.4byte	.LFB24
 3181 00c4 40000000 		.4byte	.LFE24
 3182 00c8 00000000 		.4byte	.LFB25
 3183 00cc 58000000 		.4byte	.LFE25
 3184 00d0 00000000 		.4byte	.LFB26
 3185 00d4 02000000 		.4byte	.LFE26
 3186 00d8 00000000 		.4byte	0
 3187 00dc 00000000 		.4byte	0
 3188              		.section	.debug_line,"",%progbits
 3189              	.Ldebug_line0:
 3190 0000 3B030000 		.section	.debug_str,"MS",%progbits,1
 3190      02006300 
 3190      00000201 
 3190      FB0E0D00 
 3190      01010101 
 3191              	.LASF10:
 3192 0000 75696E74 		.ascii	"uint16\000"
 3192      313600
 3193              	.LASF82:
 3194 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 3194      69744372 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 85


 3194      69746963 
 3194      616C5365 
 3194      6374696F 
 3195              	.LASF49:
 3196 001d 74784461 		.ascii	"txDataByte\000"
 3196      74614279 
 3196      746500
 3197              	.LASF76:
 3198 0028 73637265 		.ascii	"screen_rxBufferLoopDetect\000"
 3198      656E5F72 
 3198      78427566 
 3198      6665724C 
 3198      6F6F7044 
 3199              	.LASF56:
 3200 0042 73747269 		.ascii	"string\000"
 3200      6E6700
 3201              	.LASF20:
 3202 0049 73637265 		.ascii	"screen_Init\000"
 3202      656E5F49 
 3202      6E697400 
 3203              	.LASF55:
 3204 0055 73637265 		.ascii	"screen_PutString\000"
 3204      656E5F50 
 3204      75745374 
 3204      72696E67 
 3204      00
 3205              	.LASF7:
 3206 0066 6C6F6E67 		.ascii	"long long unsigned int\000"
 3206      206C6F6E 
 3206      6720756E 
 3206      7369676E 
 3206      65642069 
 3207              	.LASF6:
 3208 007d 6C6F6E67 		.ascii	"long long int\000"
 3208      206C6F6E 
 3208      6720696E 
 3208      7400
 3209              	.LASF0:
 3210 008b 7369676E 		.ascii	"signed char\000"
 3210      65642063 
 3210      68617200 
 3211              	.LASF26:
 3212 0097 73637265 		.ascii	"screen_SetRxInterruptMode\000"
 3212      656E5F53 
 3212      65745278 
 3212      496E7465 
 3212      72727570 
 3213              	.LASF66:
 3214 00b1 74785065 		.ascii	"txPeriod\000"
 3214      72696F64 
 3214      00
 3215              	.LASF68:
 3216 00ba 73637265 		.ascii	"screen_initVar\000"
 3216      656E5F69 
 3216      6E697456 
 3216      617200
 3217              	.LASF85:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 86


 3218 00c9 47656E65 		.ascii	"Generated_Source\\PSoC5\\screen.c\000"
 3218      72617465 
 3218      645F536F 
 3218      75726365 
 3218      5C50536F 
 3219              	.LASF41:
 3220 00e9 73637265 		.ascii	"screen_ClearRxBuffer\000"
 3220      656E5F43 
 3220      6C656172 
 3220      52784275 
 3220      66666572 
 3221              	.LASF32:
 3222 00fe 73637265 		.ascii	"screen_ReadRxData\000"
 3222      656E5F52 
 3222      65616452 
 3222      78446174 
 3222      6100
 3223              	.LASF61:
 3224 0110 73637265 		.ascii	"screen_GetTxBufferSize\000"
 3224      656E5F47 
 3224      65745478 
 3224      42756666 
 3224      65725369 
 3225              	.LASF4:
 3226 0127 6C6F6E67 		.ascii	"long int\000"
 3226      20696E74 
 3226      00
 3227              	.LASF69:
 3228 0130 73637265 		.ascii	"screen_txBuffer\000"
 3228      656E5F74 
 3228      78427566 
 3228      66657200 
 3229              	.LASF9:
 3230 0140 75696E74 		.ascii	"uint8\000"
 3230      3800
 3231              	.LASF42:
 3232 0146 73637265 		.ascii	"screen_SetRxAddressMode\000"
 3232      656E5F53 
 3232      65745278 
 3232      41646472 
 3232      6573734D 
 3233              	.LASF13:
 3234 015e 646F7562 		.ascii	"double\000"
 3234      6C6500
 3235              	.LASF43:
 3236 0165 61646472 		.ascii	"addressMode\000"
 3236      6573734D 
 3236      6F646500 
 3237              	.LASF11:
 3238 0171 75696E74 		.ascii	"uint32\000"
 3238      333200
 3239              	.LASF27:
 3240 0178 636F6E74 		.ascii	"control\000"
 3240      726F6C00 
 3241              	.LASF54:
 3242 0180 6C6F6354 		.ascii	"locTxBufferRead\000"
 3242      78427566 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 87


 3242      66657252 
 3242      65616400 
 3243              	.LASF51:
 3244 0190 73637265 		.ascii	"screen_ReadTxStatus\000"
 3244      656E5F52 
 3244      65616454 
 3244      78537461 
 3244      74757300 
 3245              	.LASF71:
 3246 01a4 73637265 		.ascii	"screen_txBufferWrite\000"
 3246      656E5F74 
 3246      78427566 
 3246      66657257 
 3246      72697465 
 3247              	.LASF64:
 3248 01b9 7265744D 		.ascii	"retMode\000"
 3248      6F646500 
 3249              	.LASF8:
 3250 01c1 756E7369 		.ascii	"unsigned int\000"
 3250      676E6564 
 3250      20696E74 
 3250      00
 3251              	.LASF73:
 3252 01ce 73637265 		.ascii	"screen_rxBuffer\000"
 3252      656E5F72 
 3252      78427566 
 3252      66657200 
 3253              	.LASF38:
 3254 01de 6C6F6345 		.ascii	"locErrorStatus\000"
 3254      72726F72 
 3254      53746174 
 3254      757300
 3255              	.LASF5:
 3256 01ed 6C6F6E67 		.ascii	"long unsigned int\000"
 3256      20756E73 
 3256      69676E65 
 3256      6420696E 
 3256      7400
 3257              	.LASF53:
 3258 01ff 6C6F6354 		.ascii	"locTxBufferWrite\000"
 3258      78427566 
 3258      66657257 
 3258      72697465 
 3258      00
 3259              	.LASF59:
 3260 0210 62797465 		.ascii	"byteCount\000"
 3260      436F756E 
 3260      7400
 3261              	.LASF40:
 3262 021a 73697A65 		.ascii	"size\000"
 3262      00
 3263              	.LASF3:
 3264 021f 73686F72 		.ascii	"short unsigned int\000"
 3264      7420756E 
 3264      7369676E 
 3264      65642069 
 3264      6E7400
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 88


 3265              	.LASF78:
 3266 0232 4379496E 		.ascii	"CyIntSetVector\000"
 3266      74536574 
 3266      56656374 
 3266      6F7200
 3267              	.LASF57:
 3268 0241 62756649 		.ascii	"bufIndex\000"
 3268      6E646578 
 3268      00
 3269              	.LASF35:
 3270 024a 73637265 		.ascii	"screen_GetChar\000"
 3270      656E5F47 
 3270      65744368 
 3270      617200
 3271              	.LASF80:
 3272 0259 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3272      74657243 
 3272      72697469 
 3272      63616C53 
 3272      65637469 
 3273              	.LASF28:
 3274 0270 696E7453 		.ascii	"intSrc\000"
 3274      726300
 3275              	.LASF17:
 3276 0277 72656733 		.ascii	"reg32\000"
 3276      3200
 3277              	.LASF65:
 3278 027d 746D7053 		.ascii	"tmpStat\000"
 3278      74617400 
 3279              	.LASF75:
 3280 0285 73637265 		.ascii	"screen_rxBufferWrite\000"
 3280      656E5F72 
 3280      78427566 
 3280      66657257 
 3280      72697465 
 3281              	.LASF19:
 3282 029a 73697A65 		.ascii	"sizetype\000"
 3282      74797065 
 3282      00
 3283              	.LASF52:
 3284 02a3 73637265 		.ascii	"screen_PutChar\000"
 3284      656E5F50 
 3284      75744368 
 3284      617200
 3285              	.LASF18:
 3286 02b2 6C6F6E67 		.ascii	"long double\000"
 3286      20646F75 
 3286      626C6500 
 3287              	.LASF72:
 3288 02be 73637265 		.ascii	"screen_errorStatus\000"
 3288      656E5F65 
 3288      72726F72 
 3288      53746174 
 3288      757300
 3289              	.LASF45:
 3290 02d1 61646472 		.ascii	"address\000"
 3290      65737300 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 89


 3291              	.LASF47:
 3292 02d9 73637265 		.ascii	"screen_SetTxInterruptMode\000"
 3292      656E5F53 
 3292      65745478 
 3292      496E7465 
 3292      72727570 
 3293              	.LASF63:
 3294 02f3 73637265 		.ascii	"screen_SendBreak\000"
 3294      656E5F53 
 3294      656E6442 
 3294      7265616B 
 3294      00
 3295              	.LASF31:
 3296 0304 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3296      78427566 
 3296      66657257 
 3296      72697465 
 3296      00
 3297              	.LASF36:
 3298 0315 72785374 		.ascii	"rxStatus\000"
 3298      61747573 
 3298      00
 3299              	.LASF74:
 3300 031e 73637265 		.ascii	"screen_rxBufferRead\000"
 3300      656E5F72 
 3300      78427566 
 3300      66657252 
 3300      65616400 
 3301              	.LASF62:
 3302 0332 73637265 		.ascii	"screen_ClearTxBuffer\000"
 3302      656E5F43 
 3302      6C656172 
 3302      54784275 
 3302      66666572 
 3303              	.LASF79:
 3304 0347 4379496E 		.ascii	"CyIntSetPriority\000"
 3304      74536574 
 3304      5072696F 
 3304      72697479 
 3304      00
 3305              	.LASF48:
 3306 0358 73637265 		.ascii	"screen_WriteTxData\000"
 3306      656E5F57 
 3306      72697465 
 3306      54784461 
 3306      746100
 3307              	.LASF12:
 3308 036b 666C6F61 		.ascii	"float\000"
 3308      7400
 3309              	.LASF16:
 3310 0371 72656738 		.ascii	"reg8\000"
 3310      00
 3311              	.LASF60:
 3312 0376 73637265 		.ascii	"screen_PutCRLF\000"
 3312      656E5F50 
 3312      75744352 
 3312      4C4600
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 90


 3313              	.LASF1:
 3314 0385 756E7369 		.ascii	"unsigned char\000"
 3314      676E6564 
 3314      20636861 
 3314      7200
 3315              	.LASF81:
 3316 0393 73637265 		.ascii	"screen_IntClock_Start\000"
 3316      656E5F49 
 3316      6E74436C 
 3316      6F636B5F 
 3316      53746172 
 3317              	.LASF23:
 3318 03a9 73637265 		.ascii	"screen_Stop\000"
 3318      656E5F53 
 3318      746F7000 
 3319              	.LASF2:
 3320 03b5 73686F72 		.ascii	"short int\000"
 3320      7420696E 
 3320      7400
 3321              	.LASF84:
 3322 03bf 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3322      43313120 
 3322      352E342E 
 3322      31203230 
 3322      31363036 
 3323 03f2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3323      20726576 
 3323      6973696F 
 3323      6E203233 
 3323      37373135 
 3324 0425 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3324      66756E63 
 3324      74696F6E 
 3324      2D736563 
 3324      74696F6E 
 3325              	.LASF25:
 3326 044d 73637265 		.ascii	"screen_WriteControlRegister\000"
 3326      656E5F57 
 3326      72697465 
 3326      436F6E74 
 3326      726F6C52 
 3327              	.LASF50:
 3328 0469 73637265 		.ascii	"screen_ReadControlRegister\000"
 3328      656E5F52 
 3328      65616443 
 3328      6F6E7472 
 3328      6F6C5265 
 3329              	.LASF77:
 3330 0484 73637265 		.ascii	"screen_rxBufferOverflow\000"
 3330      656E5F72 
 3330      78427566 
 3330      6665724F 
 3330      76657266 
 3331              	.LASF67:
 3332 049c 73637265 		.ascii	"screen_SetTxAddressMode\000"
 3332      656E5F53 
 3332      65745478 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 91


 3332      41646472 
 3332      6573734D 
 3333              	.LASF29:
 3334 04b4 72784461 		.ascii	"rxData\000"
 3334      746100
 3335              	.LASF15:
 3336 04bb 63686172 		.ascii	"char\000"
 3336      00
 3337              	.LASF39:
 3338 04c0 73637265 		.ascii	"screen_GetRxBufferSize\000"
 3338      656E5F47 
 3338      65745278 
 3338      42756666 
 3338      65725369 
 3339              	.LASF44:
 3340 04d7 73637265 		.ascii	"screen_SetRxAddress1\000"
 3340      656E5F53 
 3340      65745278 
 3340      41646472 
 3340      65737331 
 3341              	.LASF46:
 3342 04ec 73637265 		.ascii	"screen_SetRxAddress2\000"
 3342      656E5F53 
 3342      65745278 
 3342      41646472 
 3342      65737332 
 3343              	.LASF58:
 3344 0501 73637265 		.ascii	"screen_PutArray\000"
 3344      656E5F50 
 3344      75744172 
 3344      72617900 
 3345              	.LASF14:
 3346 0511 63686172 		.ascii	"char8\000"
 3346      3800
 3347              	.LASF83:
 3348 0517 73637265 		.ascii	"screen_IntClock_Stop\000"
 3348      656E5F49 
 3348      6E74436C 
 3348      6F636B5F 
 3348      53746F70 
 3349              	.LASF86:
 3350 052c 433A5C55 		.ascii	"C:\\Users\\Lenovo\\Documents\\PSoC Creator\\Digital"
 3350      73657273 
 3350      5C4C656E 
 3350      6F766F5C 
 3350      446F6375 
 3351 055a 5574696C 		.ascii	"UtilityExample01\\IMP-CRR\\DigitalUtilityExample01."
 3351      69747945 
 3351      78616D70 
 3351      6C653031 
 3351      5C494D50 
 3352 058b 63796473 		.ascii	"cydsn\000"
 3352      6E00
 3353              	.LASF21:
 3354 0591 73637265 		.ascii	"screen_Enable\000"
 3354      656E5F45 
 3354      6E61626C 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccMGfEYc.s 			page 92


 3354      6500
 3355              	.LASF30:
 3356 059f 6C6F6352 		.ascii	"locRxBufferRead\000"
 3356      78427566 
 3356      66657252 
 3356      65616400 
 3357              	.LASF24:
 3358 05af 656E6162 		.ascii	"enableInterrupts\000"
 3358      6C65496E 
 3358      74657272 
 3358      75707473 
 3358      00
 3359              	.LASF34:
 3360 05c0 73746174 		.ascii	"status\000"
 3360      757300
 3361              	.LASF33:
 3362 05c7 73637265 		.ascii	"screen_ReadRxStatus\000"
 3362      656E5F52 
 3362      65616452 
 3362      78537461 
 3362      74757300 
 3363              	.LASF37:
 3364 05db 73637265 		.ascii	"screen_GetByte\000"
 3364      656E5F47 
 3364      65744279 
 3364      746500
 3365              	.LASF70:
 3366 05ea 73637265 		.ascii	"screen_txBufferRead\000"
 3366      656E5F74 
 3366      78427566 
 3366      66657252 
 3366      65616400 
 3367              	.LASF22:
 3368 05fe 73637265 		.ascii	"screen_Start\000"
 3368      656E5F53 
 3368      74617274 
 3368      00
 3369              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
